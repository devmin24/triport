{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/Category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const {\n    history\n  } = props;\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = e => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n\n    const pathname = history.location.pathname;\n\n    if (pathname === `${e.target.id}`) {\n      history.replace(`${e.target.id}`);\n    } else {\n      history.push(`${e.target.id}`);\n    }\n  };\n\n  React.useEffect(e => {\n    if (currentClick !== null) {\n      let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n      // console.log(current);\n\n      current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n    }\n\n    if (prevClick !== null) {\n      // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n      let prev = document.getElementById(prevClick);\n      prev.style.opacity = \"0.7\";\n    }\n\n    setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n  }, [currentClick]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Category1, {\n      id: \"/\",\n      onClick: GetClick,\n      children: \"Trils\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Category1, {\n      id: \"/trilog\",\n      onClick: GetClick,\n      children: \"Trilog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Category2, {\n      id: \"/about\",\n      onClick: GetClick,\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"KRxPmchl6IaEqYX8ta3dfyi0B8g=\");\n\n_c = Category;\nexport default Category;\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 980px) {\n    margin-right: 2rem;\n  }\n  @media (max-width: 768px) {\n    margin-right: 2rem;\n  }\n  @media (max-width: 600px) {\n    margin-right: 1rem;\n  }\n  @media (max-width: 375px) {\n    font-size: 0.8rem;\n    margin-right: 1rem;\n  }\n`;\n_c2 = Category1;\nconst Category2 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 375px) {\n    font-size: 0.8rem;\n  }\n`;\n_c3 = Category2;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"Category1\");\n$RefreshReg$(_c3, \"Category2\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/Category.js"],"names":["React","styled","Category","props","history","currentClick","setCurrentClick","useState","prevClick","setPrevClick","GetClick","e","target","id","pathname","location","replace","push","useEffect","current","document","getElementById","style","opacity","prev","Category1","a","Category2"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACO,QAAN,CAAe,IAAf,CAAlC;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtBL,IAAAA,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,EAAV,CAAf,CADsB,CACQ;;AAC9B,UAAMC,QAAQ,GAAGV,OAAO,CAACW,QAAR,CAAiBD,QAAlC;;AACA,QAAIA,QAAQ,KAAM,GAAEH,CAAC,CAACC,MAAF,CAASC,EAAG,EAAhC,EAAmC;AACjCT,MAAAA,OAAO,CAACY,OAAR,CAAiB,GAAEL,CAAC,CAACC,MAAF,CAASC,EAAG,EAA/B;AACD,KAFD,MAEO;AACLT,MAAAA,OAAO,CAACa,IAAR,CAAc,GAAEN,CAAC,CAACC,MAAF,CAASC,EAAG,EAA5B;AACD;AACF,GARD;;AAUAb,EAAAA,KAAK,CAACkB,SAAN,CACGP,CAAD,IAAO;AACL,QAAIN,YAAY,KAAK,IAArB,EAA2B;AACzB,UAAIc,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBhB,YAAxB,CAAd,CADyB,CAC4B;AACrD;;AACAc,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,GAAxB,CAHyB,CAGI;AAC9B;;AAED,QAAIf,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA,UAAIgB,IAAI,GAAGJ,QAAQ,CAACC,cAAT,CAAwBb,SAAxB,CAAX;AACAgB,MAAAA,IAAI,CAACF,KAAL,CAAWC,OAAX,GAAqB,KAArB;AACD;;AACDd,IAAAA,YAAY,CAACJ,YAAD,CAAZ,CAZK,CAYuB;AAC7B,GAdH,EAeE,CAACA,YAAD,CAfF;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,GAAd;AAAkB,MAAA,OAAO,EAAEK,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAEA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9CD;;GAAMR,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf;AAEA,MAAMuB,SAAS,GAAGxB,MAAM,CAACyB,CAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMD,S;AAwBN,MAAME,SAAS,GAAG1B,MAAM,CAACyB,CAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMC,S","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Category = (props) => {\n  const { history } = props;\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = (e) => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n    const pathname = history.location.pathname;\n    if (pathname === `${e.target.id}`) {\n      history.replace(`${e.target.id}`);\n    } else {\n      history.push(`${e.target.id}`);\n    }\n  };\n\n  React.useEffect(\n    (e) => {\n      if (currentClick !== null) {\n        let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n        // console.log(current);\n        current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n      }\n\n      if (prevClick !== null) {\n        // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n        let prev = document.getElementById(prevClick);\n        prev.style.opacity = \"0.7\";\n      }\n      setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n    },\n    [currentClick]\n  );\n\n  return (\n    <React.Fragment>\n      <Category1 id=\"/\" onClick={GetClick}>\n        Trils\n      </Category1>\n      <Category1 id=\"/trilog\" onClick={GetClick}>\n        Trilog\n      </Category1>\n      <Category2 id=\"/about\" onClick={GetClick}>\n        About\n      </Category2>\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 980px) {\n    margin-right: 2rem;\n  }\n  @media (max-width: 768px) {\n    margin-right: 2rem;\n  }\n  @media (max-width: 600px) {\n    margin-right: 1rem;\n  }\n  @media (max-width: 375px) {\n    font-size: 0.8rem;\n    margin-right: 1rem;\n  }\n`;\n\nconst Category2 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 375px) {\n    font-size: 0.8rem;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}