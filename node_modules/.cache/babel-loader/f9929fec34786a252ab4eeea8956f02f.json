{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\nimport { actionCreators as userActions } from \"redux/modules/user\";\nimport Swal from \"sweetalert2\";\nconst profileimgSlice = createSlice({\n  name: \"profile\",\n  initialState: {\n    user_img: \"\",\n    memberGrade: null,\n    nickname: null,\n    kakaoId: null,\n    mypost_trils_data: [],\n    mypost_trilog_data: [],\n    like_trils_data: [],\n    like_trilog_data: []\n  },\n  reducers: {\n    SET_PREVIEW: (state, action) => {\n      state.user_img = action.payload;\n    },\n    GET_PROFILE: (state, action) => {\n      state.user_img = action.payload.user_img;\n      state.memberGrade = action.payload.memberGrade;\n      state.nickname = action.payload.nickname;\n      state.kakaoId = action.payload.kakaoId;\n    },\n    EDIT_PROFILE: (state, action) => {\n      state.nickname = action.payload.nickname;\n      state.user_img = action.payload.img;\n      state.memberGrade = state.memberGrade;\n      state.newpwd = action.payload.newpwd;\n      state.newpwdcheck = action.payload.newpwdcheck;\n    },\n    UPDATE_PROFILE: (state, action) => {\n      state.uploading = action.payload;\n    },\n    POST_TRILS_LOAD: (state, action) => {\n      state.mypost_trils_data = action.payload;\n    },\n    POST_TRILOG_LOAD: (state, action) => {\n      state.mypost_trilog_data = action.payload;\n    },\n    LIKE_TRILS_LOAD: (state, action) => {\n      state.like_trils_data = action.payload;\n    },\n    LIKE_TRILOG_LOAD: (state, action) => {\n      state.like_trilog_data = action.payload;\n    }\n  }\n}); // 프로필 조회\n\nconst getProfile = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const API = `${config}/member/profile`;\n    let access_token = localStorage.getItem(\"access_token\");\n    fetch(API, {\n      method: \"GET\",\n      // 헤더에 토큰 담아 보내기\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      // console.log(data);\n      dispatch(GET_PROFILE({\n        user_img: data.results.profileImgUrl,\n        memberGrade: data.results.memberGrade,\n        nickname: data.results.nickname,\n        kakaoId: data.results.kakaoId\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 프로필 수정 - 이미지 수정\n\n\nconst updateProfileImage = img => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\"); // formdata에 담기\n\n    const formData = new FormData();\n    formData.append(\"profileImgFile\", img);\n    const api = `${config}/member/profile/img`;\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`\n      },\n      body: formData\n    }).then(res => res.json()).then(data => {\n      if (data.status === 200) {\n        const obj = {\n          img: img\n        };\n        dispatch(EDIT_PROFILE(obj));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n        dispatch(getProfile());\n      } else if (data.status === 400) {\n        Swal.fire({\n          title: \"이미지를 선택해주세요.\",\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 프로필 수정 - 닉네임\n\n\nconst nameUpdateProfile = nickname => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/member/profile/nickname`;\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      },\n      body: JSON.stringify({\n        nickname: nickname\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.status === 200) {\n        const obj = {\n          nickname: nickname\n        };\n        dispatch(EDIT_PROFILE(obj));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n        dispatch(getProfile());\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 프로필 수정 - 비밀번호\n\n\nconst pwdUpdateProfile = (newpwd, newpwdcheck) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/member/profile/pwd`;\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      },\n      body: JSON.stringify({\n        newPassword: newpwd,\n        newPasswordCheck: newpwdcheck\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.status === 200) {\n        const obj = {\n          newpwd: newpwd,\n          newpwdcheck: newpwdcheck\n        };\n        dispatch(EDIT_PROFILE(obj));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n        dispatch(getProfile());\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 내가 쓴 Trils 조회\n\n\nconst myTrilsLoad = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/posts/member`;\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const results = data.results;\n      dispatch(POST_TRILS_LOAD(results));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 내가 쓴 Trilog 조회\n\n\nconst myTrilogLoad = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/boards/member`;\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const results = data.results;\n      dispatch(POST_TRILOG_LOAD(results));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 좋아요 Trils 조회\n\n\nconst likeTrilsLoad = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/posts/member/like`;\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const results = data.results;\n      dispatch(LIKE_TRILS_LOAD(results));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 좋아요 Trilog 조회\n\n\nconst likeTrilogLoad = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/boards/member/like`;\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const results = data.results;\n      dispatch(LIKE_TRILOG_LOAD(results));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 회원탈퇴\n\n\nconst deleteAccountAPI = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/member/profile`;\n    fetch(API, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.status === 200) {\n        dispatch(userActions.logout());\n        history.replace(\"/\");\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    });\n  };\n};\n\nexport const {\n  SET_PREVIEW,\n  GET_PROFILE,\n  EDIT_PROFILE,\n  UPDATE_PROFILE,\n  POST_TRILS_LOAD,\n  POST_TRILOG_LOAD,\n  LIKE_TRILS_LOAD,\n  LIKE_TRILOG_LOAD\n} = profileimgSlice.actions;\nexport const actionCreators = {\n  getProfile,\n  myTrilsLoad,\n  myTrilogLoad,\n  likeTrilsLoad,\n  likeTrilogLoad,\n  updateProfileImage,\n  nameUpdateProfile,\n  pwdUpdateProfile,\n  deleteAccountAPI,\n  GET_PROFILE\n};\nexport default profileimgSlice.reducer;","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/profile.js"],"names":["createSlice","config","actionCreators","userActions","Swal","profileimgSlice","name","initialState","user_img","memberGrade","nickname","kakaoId","mypost_trils_data","mypost_trilog_data","like_trils_data","like_trilog_data","reducers","SET_PREVIEW","state","action","payload","GET_PROFILE","EDIT_PROFILE","img","newpwd","newpwdcheck","UPDATE_PROFILE","uploading","POST_TRILS_LOAD","POST_TRILOG_LOAD","LIKE_TRILS_LOAD","LIKE_TRILOG_LOAD","getProfile","dispatch","getState","history","API","access_token","localStorage","getItem","fetch","method","headers","Accept","Authorization","then","res","json","data","results","profileImgUrl","catch","err","console","log","updateProfileImage","formData","FormData","append","api","body","status","obj","fire","title","msg","icon","nameUpdateProfile","JSON","stringify","pwdUpdateProfile","newPassword","newPasswordCheck","myTrilsLoad","myTrilogLoad","likeTrilsLoad","likeTrilogLoad","deleteAccountAPI","logout","replace","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\nimport { actionCreators as userActions } from \"redux/modules/user\";\nimport Swal from \"sweetalert2\";\n\nconst profileimgSlice = createSlice({\n  name: \"profile\",\n  initialState: {\n    user_img: \"\",\n    memberGrade: null,\n    nickname: null,\n    kakaoId: null,\n    mypost_trils_data: [],\n    mypost_trilog_data: [],\n    like_trils_data: [],\n    like_trilog_data: [],\n  },\n  reducers: {\n    SET_PREVIEW: (state, action) => {\n      state.user_img = action.payload;\n    },\n    GET_PROFILE: (state, action) => {\n      state.user_img = action.payload.user_img;\n      state.memberGrade = action.payload.memberGrade;\n      state.nickname = action.payload.nickname;\n      state.kakaoId = action.payload.kakaoId;\n    },\n    EDIT_PROFILE: (state, action) => {\n      state.nickname = action.payload.nickname;\n      state.user_img = action.payload.img;\n      state.memberGrade = state.memberGrade;\n      state.newpwd = action.payload.newpwd;\n      state.newpwdcheck = action.payload.newpwdcheck;\n    },\n    UPDATE_PROFILE: (state, action) => {\n      state.uploading = action.payload;\n    },\n    POST_TRILS_LOAD: (state, action) => {\n      state.mypost_trils_data = action.payload;\n    },\n    POST_TRILOG_LOAD: (state, action) => {\n      state.mypost_trilog_data = action.payload;\n    },\n    LIKE_TRILS_LOAD: (state, action) => {\n      state.like_trils_data = action.payload;\n    },\n    LIKE_TRILOG_LOAD: (state, action) => {\n      state.like_trilog_data = action.payload;\n    },\n  },\n});\n\n// 프로필 조회\nconst getProfile = () => {\n  return function (dispatch, getState, { history }) {\n    const API = `${config}/member/profile`;\n    let access_token = localStorage.getItem(\"access_token\");\n\n    fetch(API, {\n      method: \"GET\",\n\n      // 헤더에 토큰 담아 보내기\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        dispatch(\n          GET_PROFILE({\n            user_img: data.results.profileImgUrl,\n            memberGrade: data.results.memberGrade,\n            nickname: data.results.nickname,\n            kakaoId: data.results.kakaoId,\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n// 프로필 수정 - 이미지 수정\nconst updateProfileImage = (img) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n\n    // formdata에 담기\n    const formData = new FormData();\n    formData.append(\"profileImgFile\", img);\n\n    const api = `${config}/member/profile/img`;\n\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.status === 200) {\n          const obj = {\n            img: img,\n          };\n          dispatch(EDIT_PROFILE(obj));\n          Swal.fire({\n            title: data.msg,\n            icon: \"success\",\n          });\n          dispatch(getProfile());\n        } else if (data.status === 400) {\n          Swal.fire({\n            title: \"이미지를 선택해주세요.\",\n            icon: \"warning\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 프로필 수정 - 닉네임\nconst nameUpdateProfile = (nickname) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n\n    const api = `${config}/member/profile/nickname`;\n\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n      body: JSON.stringify({\n        nickname: nickname,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        if (data.status === 200) {\n          const obj = {\n            nickname: nickname,\n          };\n          dispatch(EDIT_PROFILE(obj));\n          Swal.fire({\n            title: data.msg,\n            icon: \"success\",\n          });\n          dispatch(getProfile());\n        } else {\n          Swal.fire({\n            title: data.msg,\n            icon: \"warning\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 프로필 수정 - 비밀번호\nconst pwdUpdateProfile = (newpwd, newpwdcheck) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n\n    const api = `${config}/member/profile/pwd`;\n\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n      body: JSON.stringify({\n        newPassword: newpwd,\n        newPasswordCheck: newpwdcheck,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.status === 200) {\n          const obj = {\n            newpwd: newpwd,\n            newpwdcheck: newpwdcheck,\n          };\n          dispatch(EDIT_PROFILE(obj));\n          Swal.fire({\n            title: data.msg,\n            icon: \"success\",\n          });\n          dispatch(getProfile());\n        } else {\n          Swal.fire({\n            title: data.msg,\n            icon: \"warning\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 내가 쓴 Trils 조회\nconst myTrilsLoad = () => {\n  return function (dispatch, getState, { history }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/posts/member`;\n\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const results = data.results;\n        dispatch(POST_TRILS_LOAD(results));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 내가 쓴 Trilog 조회\nconst myTrilogLoad = () => {\n  return function (dispatch, getState, { history }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/boards/member`;\n\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const results = data.results;\n        dispatch(POST_TRILOG_LOAD(results));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 좋아요 Trils 조회\nconst likeTrilsLoad = () => {\n  return function (dispatch, getState, { history }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/posts/member/like`;\n\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const results = data.results;\n        dispatch(LIKE_TRILS_LOAD(results));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 좋아요 Trilog 조회\nconst likeTrilogLoad = () => {\n  return function (dispatch, getState, { history }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/api/boards/member/like`;\n\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const results = data.results;\n        dispatch(LIKE_TRILOG_LOAD(results));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 회원탈퇴\nconst deleteAccountAPI = () => {\n  return function (dispatch, getState, { history }) {\n    let access_token = localStorage.getItem(\"access_token\");\n    const API = `${config}/member/profile`;\n\n    fetch(API, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        if (data.status === 200) {\n          dispatch(userActions.logout());\n          history.replace(\"/\");\n          Swal.fire({\n            title: data.msg,\n            icon: \"success\",\n          });\n        } else {\n          Swal.fire({\n            title: data.msg,\n            icon: \"warning\",\n          });\n        }\n      });\n  };\n};\n\nexport const {\n  SET_PREVIEW,\n  GET_PROFILE,\n  EDIT_PROFILE,\n  UPDATE_PROFILE,\n  POST_TRILS_LOAD,\n  POST_TRILOG_LOAD,\n  LIKE_TRILS_LOAD,\n  LIKE_TRILOG_LOAD,\n} = profileimgSlice.actions;\n\nexport const actionCreators = {\n  getProfile,\n  myTrilsLoad,\n  myTrilogLoad,\n  likeTrilsLoad,\n  likeTrilogLoad,\n  updateProfileImage,\n  nameUpdateProfile,\n  pwdUpdateProfile,\n  deleteAccountAPI,\n  GET_PROFILE,\n};\n\nexport default profileimgSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}