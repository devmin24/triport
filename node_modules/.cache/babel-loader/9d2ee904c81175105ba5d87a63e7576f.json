{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/Category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Board from \"redux/modules/Board\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = e => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n\n    history.push(`/${e.target.id}`); // 클릭 시 페이지 이동\n  };\n\n  React.useEffect(e => {\n    if (currentClick !== null) {\n      let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n      // console.log(current);\n\n      current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n    }\n\n    if (prevClick !== null) {\n      // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n      let prev = document.getElementById(prevClick);\n      prev.style.opacity = \"0.7\";\n    }\n\n    setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n  }, [currentClick]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Category1, {\n      id: \"post\",\n      onClick: GetClick,\n      children: \"Trils\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Category1, {\n      id: \"board\",\n      onClick: GetClick,\n      children: \"Trilog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Category2, {\n      id: \"about\",\n      onClick: GetClick,\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"KRxPmchl6IaEqYX8ta3dfyi0B8g=\");\n\n_c = Category;\nexport default Category;\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n_c2 = Category1;\nconst Category2 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n_c3 = Category2;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"Category1\");\n$RefreshReg$(_c3, \"Category2\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/Category.js"],"names":["React","Board","styled","history","Category","currentClick","setCurrentClick","useState","prevClick","setPrevClick","GetClick","e","target","id","push","useEffect","current","document","getElementById","style","opacity","prev","Category1","a","Category2"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACO,QAAN,CAAe,IAAf,CAAlC;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtBL,IAAAA,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,EAAV,CAAf,CADsB,CACQ;;AAC9BV,IAAAA,OAAO,CAACW,IAAR,CAAc,IAAGH,CAAC,CAACC,MAAF,CAASC,EAAG,EAA7B,EAFsB,CAEW;AAClC,GAHD;;AAKAb,EAAAA,KAAK,CAACe,SAAN,CACGJ,CAAD,IAAO;AACL,QAAIN,YAAY,KAAK,IAArB,EAA2B;AACzB,UAAIW,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBb,YAAxB,CAAd,CADyB,CAC4B;AACrD;;AACAW,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,GAAxB,CAHyB,CAGI;AAC9B;;AAED,QAAIZ,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA,UAAIa,IAAI,GAAGJ,QAAQ,CAACC,cAAT,CAAwBV,SAAxB,CAAX;AACAa,MAAAA,IAAI,CAACF,KAAL,CAAWC,OAAX,GAAqB,KAArB;AACD;;AACDX,IAAAA,YAAY,CAACJ,YAAD,CAAZ,CAZK,CAYuB;AAC7B,GAdH,EAeE,CAACA,YAAD,CAfF;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAEK,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAEA,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAEA,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxCD;;GAAMN,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf;AAEA,MAAMkB,SAAS,GAAGpB,MAAM,CAACqB,CAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,S;AAWN,MAAME,SAAS,GAAGtB,MAAM,CAACqB,CAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,S","sourcesContent":["import React from \"react\";\nimport Board from \"redux/modules/Board\";\nimport styled from \"styled-components\";\n\nimport { history } from \"../redux/configureStore\";\n\nconst Category = () => {\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = (e) => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n    history.push(`/${e.target.id}`); // 클릭 시 페이지 이동\n  };\n\n  React.useEffect(\n    (e) => {\n      if (currentClick !== null) {\n        let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n        // console.log(current);\n        current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n      }\n\n      if (prevClick !== null) {\n        // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n        let prev = document.getElementById(prevClick);\n        prev.style.opacity = \"0.7\";\n      }\n      setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n    },\n    [currentClick]\n  );\n\n  return (\n    <React.Fragment>\n      <Category1 id=\"post\" onClick={GetClick}>\n        Trils\n      </Category1>\n      <Category1 id=\"board\" onClick={GetClick}>\n        Trilog\n      </Category1>\n      <Category2 id=\"about\" onClick={GetClick}>\n        About\n      </Category2>\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst Category2 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}