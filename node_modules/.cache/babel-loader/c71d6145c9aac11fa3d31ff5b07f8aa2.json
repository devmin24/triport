{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardComment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { CommentLike } from \"media/svg/Svg\";\nimport { BoardChildComment } from \"components/components\";\nimport { actionCreators as TrilogActions } from 'redux/modules/trilog';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { config } from \"redux/modules/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BoardComment = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_login = useSelector(state => state.user.is_login);\n  const child_comment = useSelector(state => state.trilog.child_comment.list);\n  const {\n    id,\n    comment\n  } = props;\n  const commentRef = React.useRef();\n  const [showReply, setShowReply] = React.useState(false);\n  const [showReplyInput, setShowReplyInput] = React.useState(false);\n  const [test, setTest] = React.useState({\n    results: []\n  });\n\n  const showReplyComment = () => {\n    setShowReply(!showReply);\n\n    if (!showReply) {\n      // 자식 댓글 조회\n      //dispatch(TrilogActions.getChildComment(comment.commentParent.id));\n      const access_token = localStorage.getItem(\"access_token\");\n      fetch(`${config}/api/all/boards/comments/children/${comment.commentParent.id}?page=1`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        }\n      }).then(res => res.json()).then(data => {\n        setTest(data);\n      }).catch(err => console.log(err, 'get child comment trilog'));\n    }\n  };\n\n  const postChildComment = () => {\n    if (!is_login) {\n      alert(\"로그인을 먼저 하세요!\");\n      return;\n    } //dispatch(TrilogActions.addChildComment(comment.commentParent.id, commentRef.current.value));\n\n\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/children/${comment.commentParent.id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: commentRef.current.value\n      })\n    }).then(res => res.json()).then(data => {\n      setTest(prevState => [...prevState, data]);\n    }).catch(err => console.log(err, 'child comment post'));\n    document.getElementById('commentChildInput').value = ''; // 초기화\n  };\n\n  const hitLike = () => {\n    if (!is_login) {\n      alert(\"로그인을 먼저 하세요!\");\n      return;\n    }\n\n    dispatch(TrilogActions.setParentCommentLike(comment.commentParent.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CommentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ParentComment, {\n        children: [/*#__PURE__*/_jsxDEV(UserContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment.author.profileImgUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: comment.author.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          children: comment.commentParent.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Likes, {\n        children: [/*#__PURE__*/_jsxDEV(LikeSpan, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: hitLike,\n            children: /*#__PURE__*/_jsxDEV(CommentLike, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"+\", comment.commentParent.likeNum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShowReplyInput(!showReplyInput),\n          children: \"\\uB2F5\\uAE00 \\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), comment.user.isMembers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReplyComment, {\n        showReplyInput: showReplyInput,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"commentChildInput\",\n          type: \"text\",\n          placeholder: \"\\uB2F5\\uAE00 \\uCD94\\uAC00...\",\n          ref: commentRef,\n          onKeyPress: e => {\n            if (window.event.keyCode === 13) {\n              postChildComment();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), comment.commentParent.commentChildNum === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(ShowComment, {\n      children: showReply ? /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: showReplyComment,\n        children: \"\\uB313\\uAE00 \\uAC10\\uCD94\\uAE30 \\u25B2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: showReplyComment,\n        children: [\"\\uB313\\uAE00 \\uBCF4\\uAE30(\", comment.commentParent.commentChildNum, \") \\u25BC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(ReplyContainer, {\n      showReply: showReply,\n      children: test.results.map((val, index) => {\n        return /*#__PURE__*/_jsxDEV(BoardChildComment, {\n          comment: val,\n          parent_id: comment.commentParent.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BoardComment, \"YG0KKAj+Gbbaoq0Sp+WaPWrdPd0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = BoardComment;\nconst UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n  font-family: \"AppleSDGothicNeoB\";\n\n  & img {\n    width: 2.375rem;\n    border-radius: 50%;\n    margin-right: 0.5rem;\n  }\n`;\n_c2 = UserContainer;\nconst ParentComment = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c3 = ParentComment;\nconst ChildComment = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CommentContainer = styled.div`\n  width: 100%;\n`;\n_c4 = CommentContainer;\nconst Content = styled.div``;\n_c5 = Content;\nconst Likes = styled.div`\n  margin: 0.5rem 0 0.5rem 2.5rem;\n  display: flex;\n  align-items: center;\n\n  & span {\n    cursor: pointer;\n    margin-right: 1.5rem;\n  }\n`;\n_c6 = Likes;\nconst LikeSpan = styled.span`\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n\n  & svg {\n    width: 1.5rem;\n    margin-right: 0.5rem;\n  }\n`;\n_c7 = LikeSpan;\nconst ShowComment = styled.div`\n  margin: 0.5rem 0;\n  color: #2b61e1;\n\n  & span {\n    cursor: pointer;\n    margin-left: 2.5rem;\n  }\n`;\n_c8 = ShowComment;\nconst ReplyComment = styled.div`\n  display: ${props => props.showReplyInput ? \"flex\" : \"none\"};\n  align-items: center;\n  margin: 1.5rem 0 1.5rem 2.5rem;\n\n  & input {\n    outline: none;\n    border: 0;\n    box-sizing: border-box;\n    width: 100%;\n    height: 40px;\n    border: 1px solid #707070;\n    border-radius: 5px;\n    padding: 0 1rem;\n  }\n`;\n_c9 = ReplyComment;\nconst ReplyContainer = styled.div`\n  display: ${props => props.showReply ? \"block\" : \"none\"};\n  margin: 0 0 1.5rem 2.5rem;\n`;\n_c10 = ReplyContainer;\nexport default BoardComment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"BoardComment\");\n$RefreshReg$(_c2, \"UserContainer\");\n$RefreshReg$(_c3, \"ParentComment\");\n$RefreshReg$(_c4, \"CommentContainer\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Likes\");\n$RefreshReg$(_c7, \"LikeSpan\");\n$RefreshReg$(_c8, \"ShowComment\");\n$RefreshReg$(_c9, \"ReplyComment\");\n$RefreshReg$(_c10, \"ReplyContainer\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardComment.js"],"names":["React","styled","CommentLike","BoardChildComment","actionCreators","TrilogActions","useDispatch","useSelector","config","BoardComment","props","dispatch","is_login","state","user","child_comment","trilog","list","id","comment","commentRef","useRef","showReply","setShowReply","useState","showReplyInput","setShowReplyInput","test","setTest","results","showReplyComment","access_token","localStorage","getItem","fetch","commentParent","method","headers","then","res","json","data","catch","err","console","log","postChildComment","alert","body","JSON","stringify","contents","current","value","prevState","document","getElementById","hitLike","setParentCommentLike","author","profileImgUrl","nickname","likeNum","isMembers","e","window","event","keyCode","commentChildNum","map","val","index","UserContainer","div","ParentComment","ChildComment","CommentContainer","Content","Likes","LikeSpan","span","ShowComment","ReplyComment","ReplyContainer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,cAAc,IAAIC,aAA3B,QAAgD,sBAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,sBAAvB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAA5B;AACA,QAAMG,aAAa,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACG,MAAN,CAAaD,aAAb,CAA2BE,IAAvC,CAAjC;AACA,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAkBT,KAAxB;AACA,QAAMU,UAAU,GAAGpB,KAAK,CAACqB,MAAN,EAAnB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,KAAK,CAACwB,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC1B,KAAK,CAACwB,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB5B,KAAK,CAACwB,QAAN,CAAe;AACrCK,IAAAA,OAAO,EAAG;AAD2B,GAAf,CAAxB;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;;AAEA,QAAG,CAACA,SAAJ,EAAe;AACX;AACA;AACA,YAAMS,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;AAEAC,MAAAA,KAAK,CAAE,GAAE1B,MAAO,qCAAoCW,OAAO,CAACgB,aAAR,CAAsBjB,EAAG,SAAxE,EAAkF;AACnFkB,QAAAA,MAAM,EAAG,KAD0E;AAEnFC,QAAAA,OAAO,EAAG;AACN,0BAAgB,kBADV;AAEN,oBAAU,kBAFJ;AAGN,2BAAkB,GAAEN,YAAa;AAH3B;AAFyE,OAAlF,CAAL,CAQCO,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASMG,IAAI,IAAI;AACZb,QAAAA,OAAO,CAACa,IAAD,CAAP;AACD,OAXD,EAYCC,KAZD,CAYOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,0BAAjB,CAZd;AAaH;AACJ,GAtBD;;AAwBA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,QAAG,CAAClC,QAAJ,EAAc;AACZmC,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD,KAJ4B,CAK7B;;;AACA,UAAMhB,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;AAEAC,IAAAA,KAAK,CAAE,GAAE1B,MAAO,iCAAgCW,OAAO,CAACgB,aAAR,CAAsBjB,EAAG,EAApE,EAAuE;AACxEkB,MAAAA,MAAM,EAAE,MADgE;AAExEC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,yBAAkB,GAAEN,YAAa;AAH5B,OAF+D;AAOxEiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,QAAQ,EAAE/B,UAAU,CAACgC,OAAX,CAAmBC;AADZ,OAAf;AAPkE,KAAvE,CAAL,CAWCf,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMG,IAAI,IAAI;AACZb,MAAAA,OAAO,CAAC0B,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeb,IAAf,CAAd,CAAP;AACD,KAdD,EAeCC,KAfD,CAeOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,oBAAjB,CAfd;AAgBAY,IAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CH,KAA7C,GAAqD,EAArD,CAxB6B,CAwB4B;AAC1D,GAzBD;;AA2BA,QAAMI,OAAO,GAAG,MAAM;AACpB,QAAG,CAAC7C,QAAJ,EAAc;AACZmC,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AACDpC,IAAAA,QAAQ,CAACN,aAAa,CAACqD,oBAAd,CAAmCvC,OAAO,CAACgB,aAAR,CAAsBjB,EAAzD,CAAD,CAAR;AACD,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAA,8BACI,QAAC,aAAD;AAAA,gCACI,QAAC,aAAD;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEC,OAAO,CAACwC,MAAR,CAAeC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAOzC,OAAO,CAACwC,MAAR,CAAeE;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,OAAD;AAAA,oBACK1C,OAAO,CAACgB,aAAR,CAAsBgB;AAD3B;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,KAAD;AAAA,gCACI,QAAC,QAAD;AAAA,kCACI;AAAK,YAAA,OAAO,EAAEM,OAAd;AAAA,mCACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,4BAAQtC,OAAO,CAACgB,aAAR,CAAsB2B,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAM,UAAA,OAAO,EAAE,MAAMpC,iBAAiB,CAAC,CAACD,cAAF,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQKN,OAAO,CAACL,IAAR,CAAaiD,SAAb,gBAA0B;AAAA,kCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAF,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjB;AAAA,wBAA1B,gBAAkE,qCARvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAoBI,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEtC,cAA9B;AAAA,+BACI;AAAO,UAAA,EAAE,EAAC,mBAAV;AAA8B,UAAA,IAAI,EAAC,MAAnC;AAA0C,UAAA,WAAW,EAAC,8BAAtD;AAAiE,UAAA,GAAG,EAAEL,UAAtE;AAAkF,UAAA,UAAU,EAAG4C,CAAD,IAAO;AACjG,gBAAGC,MAAM,CAACC,KAAP,CAAaC,OAAb,KAAyB,EAA5B,EAAgC;AAC5BrB,cAAAA,gBAAgB;AACnB;AACJ;AAJD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EA8BM3B,OAAO,CAACgB,aAAR,CAAsBiC,eAAtB,KAA0C,CAA1C,gBACG,qCADH,gBAEG,QAAC,WAAD;AAAA,gBAEG9C,SAAS,gBACR;AAAM,QAAA,OAAO,EAAEQ,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAER;AAAM,QAAA,OAAO,EAAEA,gBAAf;AAAA,iDAAwCX,OAAO,CAACgB,aAAR,CAAsBiC,eAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAhCT,eAwCI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAE9C,SAA3B;AAAA,gBASGK,IAAI,CAACE,OAAL,CAAawC,GAAb,CAAiB,CAACC,GAAD,EAAOC,KAAP,KAAiB;AACjC,4BACE,QAAC,iBAAD;AAA+B,UAAA,OAAO,EAAED,GAAxC;AAA6C,UAAA,SAAS,EAAEnD,OAAO,CAACgB,aAAR,CAAsBjB;AAA9E,WAAwBqD,KAAxB;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA;AATH;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA,kBADJ;AA0DH,CAjID;;GAAM9D,Y;UACeH,W,EACAC,W,EACKA,W;;;KAHpBE,Y;AAmIN,MAAM+D,aAAa,GAAGvE,MAAM,CAACwE,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,a;AAaN,MAAME,aAAa,GAAGzE,MAAM,CAACwE,GAAI;AACjC;AACA;AACA,CAHA;MAAMC,a;AAKN,MAAMC,YAAY,GAAG1E,MAAM,CAACwE,GAAI;AAChC;AACA;AACA,CAHA;AAKA,MAAMG,gBAAgB,GAAG3E,MAAM,CAACwE,GAAI;AACpC;AACA,CAFA;MAAMG,gB;AAIN,MAAMC,OAAO,GAAG5E,MAAM,CAACwE,GAAI,EAA3B;MAAMI,O;AAEN,MAAMC,KAAK,GAAG7E,MAAM,CAACwE,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMK,K;AAWN,MAAMC,QAAQ,GAAG9E,MAAM,CAAC+E,IAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,Q;AAWN,MAAME,WAAW,GAAGhF,MAAM,CAACwE,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMQ,W;AAUN,MAAMC,YAAY,GAAGjF,MAAM,CAACwE,GAAI;AAChC,aAAc/D,KAAD,IAAYA,KAAK,CAACe,cAAN,GAAuB,MAAvB,GAAgC,MAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMyD,Y;AAiBN,MAAMC,cAAc,GAAGlF,MAAM,CAACwE,GAAI;AAClC,aAAc/D,KAAD,IAAYA,KAAK,CAACY,SAAN,GAAkB,OAAlB,GAA4B,MAAQ;AAC7D;AACA,CAHA;OAAM6D,c;AAKN,eAAe1E,YAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CommentLike } from \"media/svg/Svg\";\r\nimport { BoardChildComment } from \"components/components\";\r\nimport { actionCreators as TrilogActions } from 'redux/modules/trilog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { config } from \"redux/modules/config\";\r\n\r\nconst BoardComment = (props) => {\r\n    const dispatch = useDispatch();\r\n    const is_login = useSelector((state) => state.user.is_login);\r\n    const child_comment = useSelector((state) => state.trilog.child_comment.list);\r\n    const { id, comment } = props;\r\n    const commentRef = React.useRef();\r\n    const [showReply, setShowReply] = React.useState(false);\r\n    const [showReplyInput, setShowReplyInput] = React.useState(false);\r\n    const [test, setTest] = React.useState({\r\n      results : [],\r\n    });\r\n\r\n    const showReplyComment = () => {\r\n        setShowReply(!showReply);\r\n        \r\n        if(!showReply) {\r\n            // 자식 댓글 조회\r\n            //dispatch(TrilogActions.getChildComment(comment.commentParent.id));\r\n            const access_token = localStorage.getItem(\"access_token\");\r\n\r\n            fetch(`${config}/api/all/boards/comments/children/${comment.commentParent.id}?page=1`, {\r\n                method : 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n              setTest(data);\r\n            })\r\n            .catch(err => console.log(err, 'get child comment trilog'));\r\n        }\r\n    };\r\n\r\n    const postChildComment = () => {\r\n      if(!is_login) {\r\n        alert(\"로그인을 먼저 하세요!\");\r\n        return;\r\n      }\r\n      //dispatch(TrilogActions.addChildComment(comment.commentParent.id, commentRef.current.value));\r\n      const access_token = localStorage.getItem(\"access_token\");\r\n\r\n      fetch(`${config}/api/boards/comments/children/${comment.commentParent.id}`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json',\r\n              'Authorization': `${access_token}`,\r\n          },\r\n          body: JSON.stringify({\r\n              contents: commentRef.current.value,\r\n          })\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setTest(prevState => [...prevState, data])\r\n      })\r\n      .catch(err => console.log(err, 'child comment post'));\r\n      document.getElementById('commentChildInput').value = ''; // 초기화\r\n    }\r\n\r\n    const hitLike = () => {\r\n      if(!is_login) {\r\n        alert(\"로그인을 먼저 하세요!\");\r\n        return;\r\n      }\r\n      dispatch(TrilogActions.setParentCommentLike(comment.commentParent.id));\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <CommentContainer>\r\n                <ParentComment>\r\n                    <UserContainer>\r\n                        <img src={comment.author.profileImgUrl} />\r\n                        <span>{comment.author.nickname}</span>\r\n                    </UserContainer>\r\n                    <Content>\r\n                        {comment.commentParent.contents}\r\n                    </Content>\r\n                </ParentComment>\r\n                <Likes>\r\n                    <LikeSpan>\r\n                        <div onClick={hitLike}>\r\n                        <CommentLike /> \r\n                        </div>\r\n                        <span>+{comment.commentParent.likeNum}</span>\r\n                    </LikeSpan>\r\n                    <span onClick={() => setShowReplyInput(!showReplyInput)}>답글 작성</span>\r\n                    {comment.user.isMembers ? (<><span>수정</span><span>삭제</span></>) : (<></>)}\r\n                </Likes>\r\n                <ReplyComment showReplyInput={showReplyInput}>\r\n                    <input id=\"commentChildInput\" type=\"text\" placeholder=\"답글 추가...\" ref={commentRef} onKeyPress={(e) => {\r\n                        if(window.event.keyCode === 13) {\r\n                            postChildComment();\r\n                        } \r\n                    }} />\r\n                </ReplyComment>\r\n            </CommentContainer>\r\n              {\r\n              comment.commentParent.commentChildNum === 0 ? \r\n                (<></>) : \r\n                (<ShowComment> \r\n                  {\r\n                    showReply ? \r\n                    (<span onClick={showReplyComment}>댓글 감추기 ▲</span>) : \r\n                    (<span onClick={showReplyComment}>댓글 보기({comment.commentParent.commentChildNum}) ▼</span>)\r\n                  }\r\n                  </ShowComment>)\r\n              }\r\n            <ReplyContainer showReply={showReply}>\r\n              {/* {child_comment.filter(el => el.parent_id === comment.commentParent.id).map((value) => {\r\n                console.log(value.parent_id, comment.commentParent.id, '===?');\r\n                value.list.map((val, index) => {\r\n                  return (\r\n                    <BoardChildComment key={index} comment={val} parent_id={comment.commentParent.id} />\r\n                  );\r\n                })\r\n              })} */}\r\n              {test.results.map((val , index) => {\r\n                return (\r\n                  <BoardChildComment key={index} comment={val} parent_id={comment.commentParent.id} />\r\n                );\r\n              })}\r\n            </ReplyContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nconst UserContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n  font-family: \"AppleSDGothicNeoB\";\r\n\r\n  & img {\r\n    width: 2.375rem;\r\n    border-radius: 50%;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst ParentComment = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChildComment = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CommentContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Content = styled.div``;\r\n\r\nconst Likes = styled.div`\r\n  margin: 0.5rem 0 0.5rem 2.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & span {\r\n    cursor: pointer;\r\n    margin-right: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst LikeSpan = styled.span`\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & svg {\r\n    width: 1.5rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst ShowComment = styled.div`\r\n  margin: 0.5rem 0;\r\n  color: #2b61e1;\r\n\r\n  & span {\r\n    cursor: pointer;\r\n    margin-left: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst ReplyComment = styled.div`\r\n  display: ${(props) => (props.showReplyInput ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  margin: 1.5rem 0 1.5rem 2.5rem;\r\n\r\n  & input {\r\n    outline: none;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 40px;\r\n    border: 1px solid #707070;\r\n    border-radius: 5px;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst ReplyContainer = styled.div`\r\n  display: ${(props) => (props.showReply ? \"block\" : \"none\")};\r\n  margin: 0 0 1.5rem 2.5rem;\r\n`;\r\n\r\nexport default BoardComment;\r\n"]},"metadata":{},"sourceType":"module"}