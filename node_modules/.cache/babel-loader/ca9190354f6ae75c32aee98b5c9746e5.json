{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\nconst profileimgSlice = createSlice({\n  name: \"profile\",\n  initialState: {\n    user_img: \"\",\n    memberGrade: null\n  },\n  reducers: {\n    SET_PREVIEW: (state, action) => {\n      state.user_img = action.payload;\n    },\n    GET_PROFILE: (state, action) => {\n      state.user_img = action.payload.user_img;\n      state.memberGrade = action.payload.memberGrade;\n    },\n    UPDATE_PROFILE: (state, action) => {\n      state.uploading = action.payload;\n    }\n  }\n}); // 프로필 조회\n\nconst getProfile = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const API = `${config}/member/profile`;\n    let access_token = localStorage.getItem(\"access_token\");\n    console.log(access_token);\n\n    if (!access_token) {\n      console.log(\"토큰 없음\");\n      return;\n    }\n\n    fetch(API, {\n      method: \"GET\",\n      // 헤더에 토큰 담아 보내기\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      dispatch(GET_PROFILE({\n        user_img: data.profileImgUrl,\n        memberGrade: data.memberGrade\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // 프로필 수정\n\n\nconst updateProfile = (nickname, newpwd, newpwdcheck, img) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const API = `${config}/member/profile`;\n    let access_token = localStorage.getItem(\"access_token\"); // let formData = new FormData();\n    // 폼데이터로 저장\n    // formData.append(\"file\", img);\n\n    if (!access_token) {\n      console.log(\"토큰 없음\");\n      return;\n    }\n\n    fetch(API, {\n      method: \"POST\",\n      // 헤더에 토큰 담아 보내기\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      },\n      body: JSON.stringify({\n        nickname: nickname,\n        newPassword: newpwd,\n        newPasswordCheck: newpwdcheck,\n        profileImgUrl: img\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      alert(\"수정되었습니다!\");\n      history.replace(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport const {\n  SET_PREVIEW,\n  GET_PROFILE,\n  UPDATE_PROFILE\n} = profileimgSlice.actions;\nexport const actionCreators = {\n  getProfile,\n  updateProfile\n};\nexport default profileimgSlice.reducer;","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/profile.js"],"names":["createSlice","config","profileimgSlice","name","initialState","user_img","memberGrade","reducers","SET_PREVIEW","state","action","payload","GET_PROFILE","UPDATE_PROFILE","uploading","getProfile","dispatch","getState","history","API","access_token","localStorage","getItem","console","log","fetch","method","headers","Accept","Authorization","then","res","json","data","profileImgUrl","catch","err","updateProfile","nickname","newpwd","newpwdcheck","img","body","JSON","stringify","newPassword","newPasswordCheck","alert","replace","actions","actionCreators","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\n\nconst profileimgSlice = createSlice({\n  name: \"profile\",\n  initialState: {\n    user_img: \"\",\n    memberGrade: null,\n  },\n  reducers: {\n    SET_PREVIEW: (state, action) => {\n      state.user_img = action.payload;\n    },\n    GET_PROFILE: (state, action) => {\n      state.user_img = action.payload.user_img;\n      state.memberGrade = action.payload.memberGrade;\n    },\n    UPDATE_PROFILE: (state, action) => {\n      state.uploading = action.payload;\n    },\n  },\n});\n\n// 프로필 조회\nconst getProfile = () => {\n  return function (dispatch, getState, { history }) {\n    const API = `${config}/member/profile`;\n    let access_token = localStorage.getItem(\"access_token\");\n    console.log(access_token);\n\n    if (!access_token) {\n      console.log(\"토큰 없음\");\n      return;\n    }\n\n    fetch(API, {\n      method: \"GET\",\n\n      // 헤더에 토큰 담아 보내기\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        dispatch(\n          GET_PROFILE({\n            user_img: data.profileImgUrl,\n            memberGrade: data.memberGrade,\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 프로필 수정\nconst updateProfile = (nickname, newpwd, newpwdcheck, img) => {\n  return function (dispatch, getState, { history }) {\n    const API = `${config}/member/profile`;\n    let access_token = localStorage.getItem(\"access_token\");\n\n    // let formData = new FormData();\n    // 폼데이터로 저장\n    // formData.append(\"file\", img);\n\n    if (!access_token) {\n      console.log(\"토큰 없음\");\n      return;\n    }\n\n    fetch(API, {\n      method: \"POST\",\n\n      // 헤더에 토큰 담아 보내기\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n      body: JSON.stringify({\n        nickname: nickname,\n        newPassword: newpwd,\n        newPasswordCheck: newpwdcheck,\n        profileImgUrl: img,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        alert(\"수정되었습니다!\");\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const { SET_PREVIEW, GET_PROFILE, UPDATE_PROFILE } =\n  profileimgSlice.actions;\n\nexport const actionCreators = {\n  getProfile,\n  updateProfile,\n};\n\nexport default profileimgSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}