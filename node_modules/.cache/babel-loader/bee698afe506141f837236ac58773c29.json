{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { produce } from 'immer'; // 불변성 유지\n\nimport { config } from \"./config\";\n/* Trilog - 트릴로그 */\n\nconst trilogSlice = createSlice({\n  name: \"trilog\",\n  initialState: {\n    main: {\n      list: [],\n      is_last: false,\n      page: 1\n    },\n    detail: {},\n    parent_comment: {\n      list: [],\n      is_last: false,\n      page: 1\n    },\n    loading: {\n      main_loading: true,\n      detail_loading: true\n    }\n  },\n  reducers: {\n    // Trilog 메인 페이지 - 내용 로딩 여부\n    setMainLoading: (state, action) => produce(state, draft => {\n      draft.loading.main_loading = action.payload;\n    }),\n    // Trilog 상세 페이지 - 내용 로딩 여부\n    setDetailLoading: (state, action) => produce(state, draft => {\n      draft.loading.detail_loading = action.payload;\n    }),\n    // Trilog 작성 페이지 - 게시글 작성\n    setTrilogMainAdd: (state, action) => produce(state, draft => {\n      draft.main.list = [...draft.main.list, ...action.payload.results];\n      draft.main.is_last = action.payload.last;\n    }),\n    // Trilog 메인 페이지 - 게시글 조회\n    setTrilogMain: (state, action) => produce(state, draft => {\n      draft.main.list = action.payload.results;\n      draft.main.is_last = action.payload.last;\n      /*\r\n          게시물 마크업 내용의 ![alt text](https://...) 문자열 제거\r\n          안하면 /trilog 페이지 제목 아래있는 내용에서 이상하게 결과 나옴\r\n      */\n\n      draft.main.list.forEach(val => {\n        const max = new Array(50).fill(0); // 한 게시글에 최대 사진 50개가 있다고 가정\n\n        let str = val.information.description;\n        const start_str = '![';\n        max.forEach(v => {\n          if (str.includes(start_str)) {\n            let begin = str.indexOf(start_str);\n            let end = str.indexOf(')', begin);\n            let img = str.substring(begin, end + 1);\n            str = str.replace(img, '');\n          }\n        });\n        val.information.description = str;\n      });\n    }),\n    // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\n    setTrilogMainPage: (state, action) => produce(state, draft => {\n      draft.main.page = action.payload;\n    }),\n    // Trilog 메인 페이지 - 게시글 좋아요\n    setTrilogLike: (state, action) => produce(state, draft => {\n      let idx = draft.main.list.findIndex(e => e.information.id === action.payload);\n      draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\n    setTrilogParentCommentPage: (state, action) => produce(state, draft => {\n      draft.parent_comment.page = action.payload;\n    }),\n    // Trilog 상세 페이지 - 해당 게시글 조회\n    setTrilogDetail: (state, action) => produce(state, draft => {\n      draft.detail = action.payload.results;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 조회\n    setTrilogParentComment: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = action.payload.results;\n      draft.parent_comment.is_last = action.payload.last;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\n    addTrilogParentCommentScroll: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\n      draft.parent_comment.is_last = action.payload.last;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 수정\n    editTrilogParentComment: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload.results.commentParent.id);\n      draft.parent_comment.list[idx].commentParent.contents = action.payload.results.commentParent.contents;\n      draft.parent_comment.list[idx].commentParent.modifiedAt = action.payload.results.commentParent.modifiedAt;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 삭제\n    removeTrilogParentComment: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload);\n      draft.parent_comment.list.splice(idx, 1);\n    }),\n    // Trilog 상세 페이지 - 게시글 좋아요\n    setTrilogDetailLike: (state, action) => produce(state, draft => {\n      if (draft.detail.member.isLike) {\n        draft.detail.information.likeNum -= 1;\n      } else {\n        draft.detail.information.likeNum += 1;\n      }\n\n      draft.detail.member.isLike = !draft.detail.member.isLike;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 작성\n    addTrilogParentComment: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\n      draft.detail.information.commentNum += 1;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 좋아요\n    setTrilogParentCommentLike: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload);\n\n      if (draft.parent_comment.list[idx].user.isLike) {\n        draft.parent_comment.list[idx].commentParent.likeNum -= 1;\n        draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\n      } else {\n        draft.parent_comment.list[idx].commentParent.likeNum += 1;\n        draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\n      }\n    })\n  }\n}); // Trilog 메인 게시물 조회\n\nconst getTrilogMain = (filter, keyword) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    dispatch(setMainLoading(true));\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = getState().trilog.main.page;\n    fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (page === 1) {\n        dispatch(setTrilogMain(data));\n      } else {\n        console.log('Add');\n        dispatch(setTrilogMainAdd(data));\n      }\n\n      if (!data.last) {\n        dispatch(setTrilogMainPage(page + 1));\n      } else {\n        dispatch(setTrilogMainPage(1));\n      }\n    }).catch(err => console.log(err, \"메인 error\"));\n    dispatch(setMainLoading(false));\n  };\n}; // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\n\n\nconst getTrilogMainFilter = (filter, keyword) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    dispatch(setMainLoading(true));\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = 1;\n    fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (page === 1) {\n        dispatch(setTrilogMain(data));\n      } else {\n        dispatch(setTrilogMainAdd(data));\n      }\n\n      if (!data.last) {\n        dispatch(setTrilogMainPage(page + 1));\n      } else {\n        dispatch(setTrilogMainPage(1));\n      }\n    }).catch(err => console.log(err, \"메인 필터 error\"));\n    dispatch(setMainLoading(false));\n  };\n}; // Trilog 게시물 상세 조회\n\n\nconst getTrilogDetail = id => {\n  return async function (dispatch, getState, {\n    history\n  }) {\n    dispatch(setDetailLoading(true));\n    const page = getState().trilog.parent_comment.page;\n    const access_token = localStorage.getItem(\"access_token\");\n    const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => data).catch(err => console.log(err, 'trilog detail'));\n    const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (!data.last) {\n        dispatch(setTrilogParentCommentPage(page + 1));\n      } else {\n        dispatch(setTrilogParentCommentPage(1));\n      }\n\n      return data;\n    }).catch(err => console.log(err, 'trilog parent comment'));\n    dispatch(setTrilogDetail(detail));\n    dispatch(setTrilogParentComment(comment));\n    dispatch(setDetailLoading(false));\n  };\n}; // Trilog 메인 게시물 등록\n\n\nconst addTrilog = trilog => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n\n    if (trilog.is_edit) {\n      console.log('edit called');\n      fetch(`${config}/api/boards/${trilog.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        },\n        body: JSON.stringify({\n          title: trilog.title,\n          address: trilog.address,\n          description: trilog.description,\n          imageUrlList: trilog.imageUrlList\n        })\n      }).then(res => res.json()).then(data => {\n        alert(data.msg);\n        history.replace('/trilog');\n      }).catch(err => console.log(err, 'Trilog Edit'));\n    } else {\n      fetch(`${config}/api/boards/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        },\n        body: JSON.stringify({\n          title: trilog.title,\n          address: trilog.address,\n          description: trilog.description,\n          imageUrlList: trilog.imageUrlList\n        })\n      }).then(res => res.json()).then(data => {\n        alert(data.msg);\n        history.replace('/trilog');\n      }).catch(err => console.log(err, 'Trilog Add'));\n    }\n  };\n}; // Trilog 메인 게시물 삭제\n\n\nconst removeTrilog = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.msg);\n      history.replace('/trilog');\n    }).catch(err => console.log(err, 'Trilog Delete'));\n  };\n}; // Trilog 메인 게시물 좋아요\n\n\nconst setLikeTrilog = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/like/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        alert('로그인을 먼저 하세요!');\n      } else {\n        dispatch(setTrilogLike(id));\n      }\n    }).catch(err => console.log(err, 'trilog like'));\n  };\n}; // Trilog 상세 게시물 좋아요\n\n\nconst setLikeTrilogDetail = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/like/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        alert('로그인을 먼저 하세요!');\n      } else {\n        dispatch(setTrilogDetailLike());\n      }\n    }).catch(err => console.log(err, 'trilog detail like'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 더 보기\n\n\nconst getParentCommentScroll = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = getState().trilog.parent_comment.page;\n    fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data, 'data');\n\n      if (!data.last) {\n        dispatch(setTrilogParentCommentPage(page + 1));\n      } else {\n        dispatch(setTrilogParentCommentPage(1));\n      }\n\n      dispatch(addTrilogParentCommentScroll(data));\n    }).catch(err => console.log(err, \"parent comment scroll error\"));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 추가\n\n\nconst addParentComment = (id, contents) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: contents\n      })\n    }).then(res => res.json()).then(data => {\n      dispatch(addTrilogParentComment(data));\n      alert(data.msg);\n    }).catch(err => console.log(err, 'add comment trilog'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 수정\n\n\nconst editParentComment = (id, contents) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: contents\n      })\n    }).then(res => res.json()).then(data => {\n      dispatch(editTrilogParentComment(data));\n      alert(data.msg);\n    }).catch(err => console.log(err, 'edit comment trilog'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 삭제\n\n\nconst removeParentComment = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(removeTrilogParentComment(id));\n      alert(data.msg);\n    }).catch(err => console.log(err, 'remove comment trilog'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 좋아요\n\n\nconst setParentCommentLike = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/boards/comments/parents/like/${id}`;\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(setTrilogParentCommentLike(id));\n    }).catch(err => console.log(err, 'comment like'));\n  };\n};\n\nconst actionCreators = {\n  getTrilogMain,\n  // Trilog 메인 게시물 조회\n  getTrilogMainFilter,\n  // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\n  getTrilogDetail,\n  // Trilog 게시물 상세 조회\n  addTrilog,\n  // Trilog 메인 게시물 등록\n  removeTrilog,\n  // Trilog 메인 게시물 삭제\n  setLikeTrilog,\n  // Trilog 메인 게시물 좋아요\n  setLikeTrilogDetail,\n  // Trilog 상세 게시물 좋아요\n  getParentCommentScroll,\n  // Trilog 상세 게시물 - 부모 댓글 더 보기\n  addParentComment,\n  // Trilog 상세 게시물 - 부모 댓글 추가\n  editParentComment,\n  // Trilog 상세 게시물 - 부모 댓글 수정\n  removeParentComment,\n  // Trilog 상세 게시물 - 부모 댓글 삭제\n  setParentCommentLike // Trilog 상세 게시물 - 부모 댓글 좋아요\n\n};\nexport const {\n  setMainLoading,\n  // Trilog 메인 페이지 - 내용 로딩 여부\n  setDetailLoading,\n  // Trilog 상세 페이지 - 내용 로딩 여부\n  setTrilogMainAdd,\n  // Trilog 작성 페이지 - 게시글 작성\n  setTrilogMain,\n  // Trilog 메인 페이지 - 게시글 조회\n  setTrilogMainPage,\n  // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\n  setTrilogLike,\n  // Trilog 메인 페이지 - 게시글 좋아요\n  setTrilogParentCommentPage,\n  // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\n  setTrilogDetail,\n  // Trilog 상세 페이지 - 해당 게시글 조회\n  setTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 조회\n  addTrilogParentCommentScroll,\n  // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\n  editTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 수정\n  removeTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 삭제\n  setTrilogDetailLike,\n  // Trilog 상세 페이지 - 게시글 좋아요\n  addTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 작성\n  setTrilogParentCommentLike // Trilog 상세 페이지 - 부모 댓글 좋아요\n\n} = trilogSlice.actions;\nexport default trilogSlice.reducer;\nexport { actionCreators };","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trilog.js"],"names":["createSlice","produce","config","trilogSlice","name","initialState","main","list","is_last","page","detail","parent_comment","loading","main_loading","detail_loading","reducers","setMainLoading","state","action","draft","payload","setDetailLoading","setTrilogMainAdd","results","last","setTrilogMain","forEach","val","max","Array","fill","str","information","description","start_str","v","includes","begin","indexOf","end","img","substring","replace","setTrilogMainPage","setTrilogLike","idx","findIndex","e","id","member","isLike","setTrilogParentCommentPage","setTrilogDetail","setTrilogParentComment","addTrilogParentCommentScroll","editTrilogParentComment","commentParent","contents","modifiedAt","removeTrilogParentComment","splice","setTrilogDetailLike","likeNum","addTrilogParentComment","commentNum","setTrilogParentCommentLike","user","getTrilogMain","filter","keyword","dispatch","getState","history","access_token","localStorage","getItem","trilog","fetch","method","headers","then","res","json","data","console","log","catch","err","getTrilogMainFilter","getTrilogDetail","comment","addTrilog","is_edit","body","JSON","stringify","title","address","imageUrlList","alert","msg","removeTrilog","setLikeTrilog","status","setLikeTrilogDetail","getParentCommentScroll","addParentComment","editParentComment","removeParentComment","setParentCommentLike","api","actionCreators","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { produce } from 'immer'; // 불변성 유지\r\nimport { config } from \"./config\";\r\n\r\n/* Trilog - 트릴로그 */\r\nconst trilogSlice = createSlice({\r\n    name : \"trilog\",\r\n    initialState : {\r\n        main : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1,\r\n        },\r\n        detail : {},\r\n        parent_comment : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1\r\n        },\r\n        loading : {\r\n            main_loading : true,\r\n            detail_loading : true,\r\n        }\r\n    },\r\n    reducers: {\r\n        // Trilog 메인 페이지 - 내용 로딩 여부\r\n        setMainLoading : (state, action) => produce(state, (draft) => {\r\n            draft.loading.main_loading = action.payload;\r\n        }),\r\n        // Trilog 상세 페이지 - 내용 로딩 여부\r\n        setDetailLoading : (state, action) => produce(state, (draft) => {\r\n            draft.loading.detail_loading = action.payload;\r\n        }),\r\n        // Trilog 작성 페이지 - 게시글 작성\r\n        setTrilogMainAdd : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = [...draft.main.list, ...action.payload.results];\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 메인 페이지 - 게시글 조회\r\n        setTrilogMain : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = action.payload.results;\r\n            draft.main.is_last = action.payload.last;\r\n            /*\r\n                게시물 마크업 내용의 ![alt text](https://...) 문자열 제거\r\n                안하면 /trilog 페이지 제목 아래있는 내용에서 이상하게 결과 나옴\r\n            */\r\n            draft.main.list.forEach((val) => {\r\n                const max = new Array(50).fill(0); // 한 게시글에 최대 사진 50개가 있다고 가정\r\n                let str = val.information.description;\r\n                const start_str = '![';\r\n        \r\n                max.forEach((v) => {\r\n                    if(str.includes(start_str)) {\r\n                        let begin = str.indexOf(start_str);\r\n                        let end = str.indexOf(')', begin);\r\n                        let img =  str.substring(begin, end + 1);\r\n                        str = str.replace(img, '');\r\n                    }\r\n                })\r\n\r\n                val.information.description = str;\r\n            });\r\n        }),\r\n        // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\r\n        setTrilogMainPage : (state, action) => produce(state, (draft) => {\r\n            draft.main.page = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 게시글 좋아요\r\n        setTrilogLike : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.main.list.findIndex((e) => e.information.id === action.payload);\r\n            draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\r\n        setTrilogParentCommentPage : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.page = action.payload;\r\n        }),\r\n        // Trilog 상세 페이지 - 해당 게시글 조회\r\n        setTrilogDetail : (state, action) => produce(state, (draft) => {\r\n            draft.detail = action.payload.results;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 조회\r\n        setTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = action.payload.results;\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\r\n        addTrilogParentCommentScroll : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 수정\r\n        editTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload.results.commentParent.id);\r\n            draft.parent_comment.list[idx].commentParent.contents = action.payload.results.commentParent.contents;\r\n            draft.parent_comment.list[idx].commentParent.modifiedAt = action.payload.results.commentParent.modifiedAt;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 삭제\r\n        removeTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            draft.parent_comment.list.splice(idx, 1);\r\n        }),\r\n        // Trilog 상세 페이지 - 게시글 좋아요\r\n        setTrilogDetailLike : (state, action) => produce(state, (draft) => {\r\n            if(draft.detail.member.isLike){\r\n                draft.detail.information.likeNum -= 1;\r\n            } else {\r\n                draft.detail.information.likeNum += 1;\r\n            }\r\n            \r\n            draft.detail.member.isLike = !draft.detail.member.isLike;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 작성\r\n        addTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\r\n            draft.detail.information.commentNum += 1;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 좋아요\r\n        setTrilogParentCommentLike: (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            if(draft.parent_comment.list[idx].user.isLike){\r\n                draft.parent_comment.list[idx].commentParent.likeNum -= 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            } else {\r\n                draft.parent_comment.list[idx].commentParent.likeNum += 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            }\r\n        }),\r\n    },\r\n});\r\n\r\n// Trilog 메인 게시물 조회\r\nconst getTrilogMain = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        dispatch(setMainLoading(true));\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.main.page;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                console.log('Add')\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 error\"));\r\n        dispatch(setMainLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 조회 - 필터 및 검색 적용시\r\nconst getTrilogMainFilter = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        dispatch(setMainLoading(true));\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = 1;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 필터 error\"));\r\n\r\n        dispatch(setMainLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 게시물 상세 조회\r\nconst getTrilogDetail = (id) => {\r\n    return async function (dispatch, getState, { history }) {\r\n        dispatch(setDetailLoading(true));\r\n        const page = getState().trilog.parent_comment.page;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n        .catch(err => console.log(err, 'trilog detail'));\r\n\r\n        const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(!data.last) {\r\n                dispatch(setTrilogParentCommentPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogParentCommentPage(1));\r\n            }\r\n            return data;\r\n        })\r\n        .catch(err => console.log(err, 'trilog parent comment'));\r\n\r\n        dispatch(setTrilogDetail(detail));\r\n        dispatch(setTrilogParentComment(comment));\r\n        dispatch(setDetailLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 등록\r\nconst addTrilog = (trilog) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        if(trilog.is_edit) {\r\n            console.log('edit called')\r\n            fetch(`${config}/api/boards/${trilog.id}`, {\r\n                method: 'PUT',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                alert(data.msg);\r\n                history.replace('/trilog');\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Edit'))\r\n        } else {\r\n            fetch(`${config}/api/boards/`, {\r\n                method: 'POST',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                alert(data.msg);\r\n                history.replace('/trilog');\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Add'))\r\n        }\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 삭제\r\nconst removeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            alert(data.msg);\r\n            history.replace('/trilog');\r\n        })\r\n        .catch(err => console.log(err, 'Trilog Delete'))\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 좋아요\r\nconst setLikeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                alert('로그인을 먼저 하세요!');\r\n            } else {\r\n                dispatch(setTrilogLike(id));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog like'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 좋아요\r\nconst setLikeTrilogDetail = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                alert('로그인을 먼저 하세요!');\r\n            } else {\r\n                dispatch(setTrilogDetailLike());\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog detail like'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 더 보기\r\nconst getParentCommentScroll = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.parent_comment.page;\r\n        fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {     \r\n            console.log(data, 'data');  \r\n            if(!data.last) {\r\n                dispatch(setTrilogParentCommentPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogParentCommentPage(1));\r\n            }\r\n\r\n            dispatch(addTrilogParentCommentScroll(data));\r\n        })\r\n        .catch(err => console.log(err, \"parent comment scroll error\"));\r\n    }\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 추가\r\nconst addParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(addTrilogParentComment(data));\r\n            alert(data.msg);\r\n        })\r\n        .catch(err => console.log(err, 'add comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 수정\r\nconst editParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(editTrilogParentComment(data));\r\n            alert(data.msg);\r\n        })\r\n        .catch(err => console.log(err, 'edit comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 삭제\r\nconst removeParentComment = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(removeTrilogParentComment(id));\r\n            alert(data.msg);\r\n        })\r\n        .catch(err => console.log(err, 'remove comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 좋아요\r\nconst setParentCommentLike = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/comments/parents/like/${id}`;\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(setTrilogParentCommentLike(id));\r\n        })\r\n        .catch(err => console.log(err, 'comment like'));\r\n    };\r\n};\r\n\r\n\r\nconst actionCreators = {\r\n    getTrilogMain, // Trilog 메인 게시물 조회\r\n    getTrilogMainFilter, // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\r\n    getTrilogDetail, // Trilog 게시물 상세 조회\r\n    addTrilog, // Trilog 메인 게시물 등록\r\n    removeTrilog, // Trilog 메인 게시물 삭제\r\n    setLikeTrilog, // Trilog 메인 게시물 좋아요\r\n    setLikeTrilogDetail, // Trilog 상세 게시물 좋아요\r\n    getParentCommentScroll, // Trilog 상세 게시물 - 부모 댓글 더 보기\r\n    addParentComment, // Trilog 상세 게시물 - 부모 댓글 추가\r\n    editParentComment, // Trilog 상세 게시물 - 부모 댓글 수정\r\n    removeParentComment, // Trilog 상세 게시물 - 부모 댓글 삭제\r\n    setParentCommentLike, // Trilog 상세 게시물 - 부모 댓글 좋아요\r\n};\r\n\r\nexport const { \r\n    setMainLoading, // Trilog 메인 페이지 - 내용 로딩 여부\r\n    setDetailLoading, // Trilog 상세 페이지 - 내용 로딩 여부\r\n    setTrilogMainAdd, // Trilog 작성 페이지 - 게시글 작성\r\n    setTrilogMain, // Trilog 메인 페이지 - 게시글 조회\r\n    setTrilogMainPage, // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\r\n    setTrilogLike, // Trilog 메인 페이지 - 게시글 좋아요\r\n    setTrilogParentCommentPage, // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\r\n    setTrilogDetail, // Trilog 상세 페이지 - 해당 게시글 조회\r\n    setTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 조회\r\n    addTrilogParentCommentScroll, // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\r\n    editTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 수정\r\n    removeTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 삭제\r\n    setTrilogDetailLike, // Trilog 상세 페이지 - 게시글 좋아요\r\n    addTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 작성\r\n    setTrilogParentCommentLike, // Trilog 상세 페이지 - 부모 댓글 좋아요\r\n} = trilogSlice.actions;\r\nexport default trilogSlice.reducer;\r\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}