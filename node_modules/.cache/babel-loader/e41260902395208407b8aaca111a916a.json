{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/EditModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditModal = props => {\n  _s();\n\n  const {\n    modal,\n    onClose\n  } = props;\n  console.log(modal);\n  const inputRef = useRef();\n\n  const selectimage = () => {\n    inputRef.current.click();\n  };\n\n  const [image, setImage] = React.useState(null);\n  const [croppedArea, setCroppedArea] = React.useState(null);\n  const [crop, setCrop] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = React.useState(1);\n\n  const onCropComplete = (croppedAreaPercentage, croppedAreaPixels) => {\n    setCroppedArea(croppedAreaPixels);\n  };\n\n  const onSelectFile = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.addEventListener(\"load\", () => {\n        setImage(reader.result);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    modal: modal,\n    children: [/*#__PURE__*/_jsxDEV(ContainerCropper, {\n      children: image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CropperDiv, {\n          children: /*#__PURE__*/_jsxDEV(Cropper, {\n            image: image,\n            crop: crop,\n            zoom: zoom,\n            aspect: 1,\n            cropShape: \"round\",\n            onCropChange: setCrop,\n            onZoomChange: setZoom,\n            onCropComplete: onCropComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SliderDiv, {\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            min: 1,\n            max: 3,\n            step: 0.1,\n            value: zoom,\n            onChange: (e, zoom) => setZoom(zoom)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerButtons, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: inputRef,\n        onChange: onSelectFile,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button1, {\n        onClick: () => setImage(null),\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"\\uD30C\\uC77C \\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button1, {\n        onClick: selectimage,\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"\\uD30C\\uC77C \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button1, {\n        style: {\n          backgroundColor: \"#ff607c\"\n        },\n        onClick: onClose,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditModal, \"v+HpxnTK7v6ssIaZppUbtq+Tivg=\");\n\n_c = EditModal;\nconst Container = styled.div`\n  display: ${props => props.modal ? \"flex\" : \"none\"};\n  width: 500px;\n  height: 500px;\n  position: fixed;\n  top: 20%;\n  left: 35%;\n  bottom: 0;\n  right: 0;\n  background-color: #f4f4ff;\n  border: 1px solid #739cff;\n  border-radius: 5px;\n  z-index: 999;\n`;\n_c2 = Container;\nconst ContainerCropper = styled.div`\n  height: 100%;\n  padding: 10px;\n`;\n_c3 = ContainerCropper;\nconst CropperDiv = styled.div`\n  height: 90%;\n  position: relative;\n`;\n_c4 = CropperDiv;\nconst SliderDiv = styled.div`\n  height: 10%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n  width: 60%;\n`;\n_c5 = SliderDiv;\nconst ContainerButtons = styled.div`\n  width: 22.2rem;\n  border: 1px solid #f5f5f5;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c6 = ContainerButtons;\nconst Button1 = styled.button`\n  font-size: 1rem;\n  font-family: \"TTTogether\";\n  width: 22.2rem;\n  height: 3rem;\n  box-shadow: 0px 3px 6px #00000029;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n  background-color: #739cff;\n  color: #ffffff;\n`;\n_c7 = Button1;\nexport default EditModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"EditModal\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ContainerCropper\");\n$RefreshReg$(_c4, \"CropperDiv\");\n$RefreshReg$(_c5, \"SliderDiv\");\n$RefreshReg$(_c6, \"ContainerButtons\");\n$RefreshReg$(_c7, \"Button1\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/EditModal.js"],"names":["React","Fragment","useRef","Cropper","Slider","styled","EditModal","props","modal","onClose","console","log","inputRef","selectimage","current","click","image","setImage","useState","croppedArea","setCroppedArea","crop","setCrop","x","y","zoom","setZoom","onCropComplete","croppedAreaPercentage","croppedAreaPixels","onSelectFile","event","target","files","length","reader","FileReader","readAsDataURL","addEventListener","result","e","display","marginRight","backgroundColor","Container","div","ContainerCropper","CropperDiv","SliderDiv","ContainerButtons","Button1","button"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\n\nconst EditModal = (props) => {\n  const { modal, onClose } = props;\n  console.log(modal);\n  const inputRef = useRef();\n\n  const selectimage = () => {\n    inputRef.current.click();\n  };\n\n  const [image, setImage] = React.useState(null);\n  const [croppedArea, setCroppedArea] = React.useState(null);\n  const [crop, setCrop] = React.useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = React.useState(1);\n\n  const onCropComplete = (croppedAreaPercentage, croppedAreaPixels) => {\n    setCroppedArea(croppedAreaPixels);\n  };\n\n  const onSelectFile = (event) => {\n    if (event.target.files && event.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.addEventListener(\"load\", () => {\n        setImage(reader.result);\n      });\n    }\n  };\n\n  return (\n    <Container modal={modal}>\n      <ContainerCropper>\n        {image ? (\n          <>\n            <CropperDiv>\n              <Cropper\n                image={image}\n                crop={crop}\n                zoom={zoom}\n                aspect={1}\n                cropShape=\"round\"\n                onCropChange={setCrop}\n                onZoomChange={setZoom}\n                onCropComplete={onCropComplete}\n              />\n            </CropperDiv>\n            <SliderDiv>\n              <Slider\n                min={1}\n                max={3}\n                step={0.1}\n                value={zoom}\n                onChange={(e, zoom) => setZoom(zoom)}\n              />\n            </SliderDiv>\n          </>\n        ) : null}\n      </ContainerCropper>\n\n      <ContainerButtons>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          ref={inputRef}\n          onChange={onSelectFile}\n          style={{ display: \"none\" }}\n        />\n        <Button1\n          onClick={() => setImage(null)}\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          파일 삭제\n        </Button1>\n        <Button1 onClick={selectimage} style={{ marginRight: \"0.5rem\" }}>\n          파일 선택\n        </Button1>\n        <Button1 style={{ backgroundColor: \"#ff607c\" }} onClick={onClose}>\n          업로드\n        </Button1>\n      </ContainerButtons>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: ${(props) => (props.modal ? \"flex\" : \"none\")};\n  width: 500px;\n  height: 500px;\n  position: fixed;\n  top: 20%;\n  left: 35%;\n  bottom: 0;\n  right: 0;\n  background-color: #f4f4ff;\n  border: 1px solid #739cff;\n  border-radius: 5px;\n  z-index: 999;\n`;\n\nconst ContainerCropper = styled.div`\n  height: 100%;\n  padding: 10px;\n`;\n\nconst CropperDiv = styled.div`\n  height: 90%;\n  position: relative;\n`;\n\nconst SliderDiv = styled.div`\n  height: 10%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n  width: 60%;\n`;\n\nconst ContainerButtons = styled.div`\n  width: 22.2rem;\n  border: 1px solid #f5f5f5;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Button1 = styled.button`\n  font-size: 1rem;\n  font-family: \"TTTogether\";\n  width: 22.2rem;\n  height: 3rem;\n  box-shadow: 0px 3px 6px #00000029;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n  background-color: #739cff;\n  color: #ffffff;\n`;\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}