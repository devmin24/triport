{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\nimport { logOut } from \"./user\";\nconst trilseSlice = createSlice({\n  name: \"trils\",\n  initialState: {\n    data: [],\n    modal: false,\n    detail: {\n      information: {\n        id: 0,\n        likeNum: 0,\n        modifiedAt: \"2021-05-20 00:00\",\n        videoType: \"m3u8\",\n        videoUrl: \"\",\n        posPlay: true,\n        hashtag: [\"트리포트\"]\n      },\n      author: {\n        nickname: \"트리포트\",\n        profileImgUrl: \"https://d1nogx3a73keco.cloudfront.net/profileImage/20210518170253-tripper_with_logo_kakao.png\"\n      },\n      member: {\n        isMembers: false,\n        isLike: false\n      }\n    },\n    page: 1,\n    is_last: false\n  },\n  reducers: {\n    GET_POST: (state, action) => {\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n      state.is_last = action.payload.is_last;\n    },\n    SHIFT_POST: (state, action) => {\n      state.data.push(...action.payload.result);\n      state.page = action.payload.page;\n      state.is_last = action.payload.is_last;\n    },\n    GET_POST_DETAIL: (state, action) => {\n      state.modal = action.payload.modal;\n      state.detail = action.payload.result;\n    },\n    MODAL_STATUS: (state, action) => {\n      state.modal = action.payload;\n    },\n    LIKE_OK: (state, action) => {\n      const idx = state.data.findIndex(p => p.information.id === action.payload.information.id);\n      state.data[idx] = action.payload;\n      state.detail = action.payload;\n    },\n    DELETE_POST: (state, action) => {\n      const idx = state.data.findIndex(p => p.information.id === action.payload);\n\n      if (idx !== -1) {\n        state.data.splice(idx, 1);\n      }\n    },\n    SEARCH_POST: (state, action) => {\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n      state.is_last = action.payload.is_last;\n    },\n    EDIT_POST: (state, action) => {\n      const idx = state.data.findIndex(p => p.information.id === action.payload.id);\n      state.data[idx].information.hashtag = action.payload.hashtag;\n      state.detail.information.hashtag = action.payload.hashtag;\n    },\n    SET_TRILS_MYPOST: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n}); // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\n\nconst getMyTrilsPost = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/posts/member`;\n    fetch(api, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(SET_TRILS_MYPOST(data.results));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst writepost = (video, tags) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"file\", video);\n    tags.map((p, idx) => formData.append(\"hashtag\", p));\n    const api = `${config}/api/posts`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`\n      },\n      body: formData\n    };\n    fetch(api, data).then(result => {\n      if (result.status === 401) {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        localStorage.removeItem(\"userInfo\");\n        dispatch(logOut());\n        alert(\"로그인 시간이 만료되었습니다. 다시 로그인해주세요.\");\n        history.push(\"/login\");\n      }\n\n      return result.json();\n    }).then(result => {\n      if (result.ok) {\n        alert(\"정상적으로 작성되었습니다.\");\n        history.replace(\"/\");\n      } else {\n        alert(result.msg);\n      }\n    }).catch(err => alert(\"업로드 중 에러가 발생했습니다.\", err));\n  };\n};\n\nconst searchPost = (keyword = \"\", LikeOrDate = \"createdAt\", page = 1) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      const results = {\n        result: result.results,\n        page: page + 1,\n        is_last: result.last\n      };\n      dispatch(SEARCH_POST(results));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst setPost = (keyword = \"\", LikeOrDate = \"likeNum\", page = 1) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=1&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      const results = {\n        result: result.results,\n        page: page + 1,\n        is_last: result.last\n      };\n      dispatch(GET_POST(results));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst getPost = (keyword = \"\", LikeOrDate = \"likeNum\") => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const page = getState().trils.page;\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      const results = {\n        result: result.results,\n        page: page + 1,\n        is_last: result.last\n      };\n\n      if (page === 1) {\n        dispatch(GET_POST(results));\n      } else {\n        dispatch(SHIFT_POST(results));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst filterPost = (keyword = \"\", LikeOrDate = \"likeNum\", page = 1) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=1&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      const results = {\n        result: result.results,\n        page: page + 1,\n        is_last: result.last\n      };\n      dispatch(GET_POST(results));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst getPostDetail = (postId, modal = true) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    dispatch(MODAL_STATUS(false));\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts/detail/${postId}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      const results = {\n        result: result.results,\n        modal: modal\n      };\n      dispatch(GET_POST_DETAIL(results));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst send_like = (postId, like) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/posts/like/${postId}`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      console.log(result);\n\n      if (result.status === 401) {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        localStorage.removeItem(\"userInfo\");\n        dispatch(logOut());\n        alert(\"로그인 시간이 만료되었습니다. 다시 로그인해주세요.\");\n        history.push(\"/login\");\n      }\n\n      return result.json();\n    }).then(result => {\n      console.log(result);\n\n      if (result.ok) {\n        dispatch(LIKE_OK(result.results));\n      } else {\n        alert(result.msg);\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nexport const {\n  GET_POST,\n  SHIFT_POST,\n  GET_POST_DETAIL,\n  MODAL_STATUS,\n  LIKE_OK,\n  DELETE_POST,\n  SEARCH_POST,\n  EDIT_POST,\n  SET_TRILS_MYPOST\n} = trilseSlice.actions;\nexport const TrilsActions = {\n  writepost,\n  getPost,\n  getPostDetail,\n  send_like,\n  searchPost,\n  setPost,\n  filterPost,\n  getMyTrilsPost\n};\nexport default trilseSlice.reducer;","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trils.js"],"names":["createSlice","config","logOut","trilseSlice","name","initialState","data","modal","detail","information","id","likeNum","modifiedAt","videoType","videoUrl","posPlay","hashtag","author","nickname","profileImgUrl","member","isMembers","isLike","page","is_last","reducers","GET_POST","state","action","payload","result","SHIFT_POST","push","GET_POST_DETAIL","MODAL_STATUS","LIKE_OK","idx","findIndex","p","DELETE_POST","splice","SEARCH_POST","EDIT_POST","SET_TRILS_MYPOST","getMyTrilsPost","dispatch","getState","history","access_token","localStorage","getItem","api","fetch","method","headers","Accept","Authorization","then","res","json","results","catch","err","console","log","writepost","video","tags","formData","FormData","append","map","body","status","removeItem","alert","ok","replace","msg","searchPost","keyword","LikeOrDate","last","setPost","getPost","trils","filterPost","getPostDetail","postId","send_like","like","actions","TrilsActions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\nimport { logOut } from \"./user\";\n\nconst trilseSlice = createSlice({\n  name: \"trils\",\n  initialState: {\n    data: [],\n    modal: false,\n    detail: {\n      information: {\n        id: 0,\n        likeNum: 0,\n        modifiedAt: \"2021-05-20 00:00\",\n        videoType: \"m3u8\",\n        videoUrl: \"\",\n        posPlay: true,\n        hashtag: [\"트리포트\"],\n      },\n      author: {\n        nickname: \"트리포트\",\n        profileImgUrl:\n          \"https://d1nogx3a73keco.cloudfront.net/profileImage/20210518170253-tripper_with_logo_kakao.png\",\n      },\n      member: { isMembers: false, isLike: false },\n    },\n    page: 1,\n    is_last: false,\n  },\n  reducers: {\n    GET_POST: (state, action) => {\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n      state.is_last = action.payload.is_last;\n    },\n    SHIFT_POST: (state, action) => {\n      state.data.push(...action.payload.result);\n      state.page = action.payload.page;\n      state.is_last = action.payload.is_last;\n    },\n    GET_POST_DETAIL: (state, action) => {\n      state.modal = action.payload.modal;\n      state.detail = action.payload.result;\n    },\n    MODAL_STATUS: (state, action) => {\n      state.modal = action.payload;\n    },\n    LIKE_OK: (state, action) => {\n      const idx = state.data.findIndex(\n        (p) => p.information.id === action.payload.information.id\n      );\n      state.data[idx] = action.payload;\n      state.detail = action.payload;\n    },\n    DELETE_POST: (state, action) => {\n      const idx = state.data.findIndex(\n        (p) => p.information.id === action.payload\n      );\n      if (idx !== -1) {\n        state.data.splice(idx, 1);\n      }\n    },\n    SEARCH_POST: (state, action) => {\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n      state.is_last = action.payload.is_last;\n    },\n    EDIT_POST: (state, action) => {\n      const idx = state.data.findIndex(\n        (p) => p.information.id === action.payload.id\n      );\n      state.data[idx].information.hashtag = action.payload.hashtag;\n      state.detail.information.hashtag = action.payload.hashtag;\n    },\n    SET_TRILS_MYPOST: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\n// Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\nconst getMyTrilsPost = () => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/posts/member`;\n\n    fetch(api, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch(SET_TRILS_MYPOST(data.results));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst writepost = (video, tags) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"file\", video);\n    tags.map((p, idx) => formData.append(\"hashtag\", p));\n    const api = `${config}/api/posts`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n      body: formData,\n    };\n    fetch(api, data)\n      .then((result) => {\n        if (result.status === 401) {\n          localStorage.removeItem(\"access_token\");\n          localStorage.removeItem(\"refresh_token\");\n          localStorage.removeItem(\"userInfo\");\n          dispatch(logOut());\n          alert(\"로그인 시간이 만료되었습니다. 다시 로그인해주세요.\");\n          history.push(\"/login\");\n        }\n        return result.json();\n      })\n      .then((result) => {\n        if (result.ok) {\n          alert(\"정상적으로 작성되었습니다.\");\n          history.replace(\"/\");\n        } else {\n          alert(result.msg);\n        }\n      })\n      .catch((err) => alert(\"업로드 중 에러가 발생했습니다.\", err));\n  };\n};\n\nconst searchPost = (keyword = \"\", LikeOrDate = \"createdAt\", page = 1) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        const results = {\n          result: result.results,\n          page: page + 1,\n          is_last: result.last,\n        };\n        dispatch(SEARCH_POST(results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst setPost = (keyword = \"\", LikeOrDate = \"likeNum\", page = 1) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=1&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        const results = {\n          result: result.results,\n          page: page + 1,\n          is_last: result.last,\n        };\n        dispatch(GET_POST(results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst getPost = (keyword = \"\", LikeOrDate = \"likeNum\") => {\n  return function (dispatch, getState, { history }) {\n    const page = getState().trils.page;\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        const results = {\n          result: result.results,\n          page: page + 1,\n          is_last: result.last,\n        };\n        if (page === 1) {\n          dispatch(GET_POST(results));\n        } else {\n          dispatch(SHIFT_POST(results));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst filterPost = (keyword = \"\", LikeOrDate = \"likeNum\", page = 1) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=1&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        const results = {\n          result: result.results,\n          page: page + 1,\n          is_last: result.last,\n        };\n        dispatch(GET_POST(results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst getPostDetail = (postId, modal = true) => {\n  return function (dispatch, getState, { history }) {\n    dispatch(MODAL_STATUS(false));\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts/detail/${postId}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        const results = {\n          result: result.results,\n          modal: modal,\n        };\n        dispatch(GET_POST_DETAIL(results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst send_like = (postId, like) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/posts/like/${postId}`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        console.log(result)\n        if (result.status === 401) {\n          localStorage.removeItem(\"access_token\");\n          localStorage.removeItem(\"refresh_token\");\n          localStorage.removeItem(\"userInfo\");\n          dispatch(logOut());\n          alert(\"로그인 시간이 만료되었습니다. 다시 로그인해주세요.\");\n          history.push(\"/login\");\n        }\n        return result.json();\n      })\n      .then((result) => {\n        console.log(result)\n        if (result.ok) {\n          dispatch(LIKE_OK(result.results));\n        } else {\n          alert(result.msg);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const {\n  GET_POST,\n  SHIFT_POST,\n  GET_POST_DETAIL,\n  MODAL_STATUS,\n  LIKE_OK,\n  DELETE_POST,\n  SEARCH_POST,\n  EDIT_POST,\n  SET_TRILS_MYPOST\n} = trilseSlice.actions;\n\nexport const TrilsActions = {\n  writepost,\n  getPost,\n  getPostDetail,\n  send_like,\n  searchPost,\n  setPost,\n  filterPost,\n  getMyTrilsPost,\n};\n\nexport default trilseSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}