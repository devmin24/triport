{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/Category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = e => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n\n    history.push(`/${e.target.id}`); // 클릭 시 페이지 이동\n  };\n\n  React.useEffect(e => {\n    if (currentClick !== null) {\n      let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n      // console.log(current);\n\n      current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n    }\n\n    if (prevClick !== null) {\n      // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n      let prev = document.getElementById(prevClick);\n      prev.style.opacity = \"0.7\";\n    }\n\n    setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n  }, [currentClick]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sns, {\n      id: \"post\",\n      onClick: GetClick,\n      children: \"SNS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      id: \"board\",\n      onClick: GetClick,\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"KRxPmchl6IaEqYX8ta3dfyi0B8g=\");\n\n_c = Category;\nexport default Category;\nconst Sns = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n_c2 = Sns;\nconst Board = styled.a`\n  cursor: pointer;\n\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n_c3 = Board;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"Sns\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/Category.js"],"names":["React","styled","history","Category","currentClick","setCurrentClick","useState","prevClick","setPrevClick","GetClick","e","target","id","push","useEffect","current","document","getElementById","style","opacity","prev","Sns","a","Board"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,KAAK,CAACM,QAAN,CAAe,IAAf,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,IAAf,CAAlC;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtBL,IAAAA,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,EAAV,CAAf,CADsB,CACQ;;AAC9BV,IAAAA,OAAO,CAACW,IAAR,CAAc,IAAGH,CAAC,CAACC,MAAF,CAASC,EAAG,EAA7B,EAFsB,CAEW;AAClC,GAHD;;AAKAZ,EAAAA,KAAK,CAACc,SAAN,CACGJ,CAAD,IAAO;AACL,QAAIN,YAAY,KAAK,IAArB,EAA2B;AACzB,UAAIW,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBb,YAAxB,CAAd,CADyB,CAC4B;AACrD;;AACAW,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,GAAxB,CAHyB,CAGI;AAC9B;;AAED,QAAIZ,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA,UAAIa,IAAI,GAAGJ,QAAQ,CAACC,cAAT,CAAwBV,SAAxB,CAAX;AACAa,MAAAA,IAAI,CAACF,KAAL,CAAWC,OAAX,GAAqB,KAArB;AACD;;AACDX,IAAAA,YAAY,CAACJ,YAAD,CAAZ,CAZK,CAYuB;AAC7B,GAdH,EAeE,CAACA,YAAD,CAfF;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,OAAO,EAAEK,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,OAAO,EAAEA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArCD;;GAAMN,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf;AAEA,MAAMkB,GAAG,GAAGpB,MAAM,CAACqB,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,G;AAWN,MAAME,KAAK,GAAGtB,MAAM,CAACqB,CAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMC,K","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { history } from \"../redux/configureStore\";\n\nconst Category = () => {\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = (e) => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n    history.push(`/${e.target.id}`); // 클릭 시 페이지 이동\n  };\n\n  React.useEffect(\n    (e) => {\n      if (currentClick !== null) {\n        let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n        // console.log(current);\n        current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n      }\n\n      if (prevClick !== null) {\n        // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n        let prev = document.getElementById(prevClick);\n        prev.style.opacity = \"0.7\";\n      }\n      setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n    },\n    [currentClick]\n  );\n\n  return (\n    <React.Fragment>\n      <Sns id=\"post\" onClick={GetClick}>\n        SNS\n      </Sns>\n      <Board id=\"board\" onClick={GetClick}>\n        게시판\n      </Board>\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\nconst Sns = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst Board = styled.a`\n  cursor: pointer;\n\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}