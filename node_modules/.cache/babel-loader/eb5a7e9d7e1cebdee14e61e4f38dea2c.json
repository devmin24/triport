{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityScroll = props => {\n  _s();\n\n  const {\n    callNext,\n    is_next\n  } = props;\n\n  const handleScroll = _.throttle(() => {\n    const {\n      innerHeight\n    } = window;\n    const {\n      scrollHeight\n    } = document.body;\n    const scrollTop = document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 100) {\n      callNext();\n    }\n  }, 300);\n\n  React.useEffect(() => {\n    if (!is_next) {\n      window.addEventListener('scroll', handleScroll);\n    } else {\n      window.removeEventListener('scroll', handleScroll);\n    }\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [is_next]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.children\n  }, void 0, false);\n};\n\n_s(InfinityScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InfinityScroll;\nexport default InfinityScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityScroll\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/shared/InfinityScroll.js"],"names":["React","_","InfinityScroll","props","callNext","is_next","handleScroll","throttle","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","useEffect","addEventListener","removeEventListener","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBF,KAA9B;;AAEA,QAAMG,YAAY,GAAGL,CAAC,CAACM,QAAF,CAAW,MAAM;AAElC,UAAM;AAACC,MAAAA;AAAD,QAAgBC,MAAtB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAiBC,QAAQ,CAACC,IAAhC;AAEA,UAAMC,SAAS,GAAIF,QAAQ,CAACG,eAAT,IAA4BH,QAAQ,CAACG,eAAT,CAAyBD,SAAtD,IAAoEF,QAAQ,CAACC,IAAT,CAAcC,SAApG;;AAEA,QAAGH,YAAY,GAAGF,WAAf,GAA6BK,SAA7B,GAAyC,GAA5C,EAAiD;AAC7CT,MAAAA,QAAQ;AACX;AAEJ,GAXoB,EAWlB,GAXkB,CAArB;;AAaAJ,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClB,QAAG,CAACV,OAAJ,EAAY;AACRI,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCV,YAAlC;AACH,KAFD,MAEO;AACHG,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCX,YAArC;AACH;;AACD,WAAO,MAAMG,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCX,YAArC,CAAb;AACH,GAPD,EAOG,CAACD,OAAD,CAPH;AASA,sBACI;AAAA,cACKF,KAAK,CAACe;AADX,mBADJ;AAKH,CA9BD;;GAAMhB,c;;KAAAA,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst InfinityScroll = (props) => {\r\n    const { callNext, is_next } = props;\r\n\r\n    const handleScroll = _.throttle(() => {\r\n\r\n        const {innerHeight} = window;\r\n        const {scrollHeight} = document.body;\r\n\r\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\r\n \r\n        if(scrollHeight - innerHeight - scrollTop < 100) {\r\n            callNext();\r\n        }\r\n        \r\n    }, 300);\r\n\r\n    React.useEffect(() => {\r\n        if(!is_next){\r\n            window.addEventListener('scroll', handleScroll);\r\n        } else {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [is_next]);\r\n\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InfinityScroll;"]},"metadata":{},"sourceType":"module"}