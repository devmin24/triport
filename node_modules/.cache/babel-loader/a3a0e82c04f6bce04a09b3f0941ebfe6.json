{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/parkminkyung/Desktop/git/triport/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/parkminkyung/Desktop/git/triport/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2;import React from\"react\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Category=function Category(props){var history=props.history;var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),currentClick=_React$useState2[0],setCurrentClick=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),prevClick=_React$useState4[0],setPrevClick=_React$useState4[1];var GetClick=function GetClick(e){setCurrentClick(e.target.id);// 해당 엘리먼트의 id값\nvar pathname=history.location.pathname;if(pathname===\"\".concat(e.target.id)){history.replace(\"\".concat(e.target.id));}else{history.push(\"\".concat(e.target.id));}};React.useEffect(function(e){if(currentClick!==null){var current=document.getElementById(currentClick);// getElementById : id값으로 엘리먼트 찾아옴.\n// console.log(current);\ncurrent.style.opacity=\"1\";// 찾아온 엘리먼트에 style 속성 먹이기\n}if(prevClick!==null){// 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\nvar prev=document.getElementById(prevClick);prev.style.opacity=\"0.7\";}setPrevClick(currentClick);// 클릭한 id 값을 prevClick에 저장한다.\n},[currentClick]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Category1,{id:\"/\",onClick:GetClick,children:\"Trils\"}),/*#__PURE__*/_jsx(Category1,{id:\"/trilog\",onClick:GetClick,children:\"Trilog\"}),/*#__PURE__*/_jsx(Category2,{id:\"/about\",onClick:GetClick,children:\"About\"})]});};export default Category;var Category1=styled.a(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  color: #2b61e1;\\n  margin-right: 4rem;\\n  opacity: 0.7;\\n\\n  :hover {\\n    opacity: 1;\\n  }\\n  @media (max-width: 1270px) {\\n    margin-right: 2rem;\\n  }\\n\\n  @media (max-width: 980px) {\\n    margin-right: 1.5rem;\\n    font-size: 0.8rem;\\n  }\\n  @media (max-width: 768px) {\\n    margin-right: 1.5rem;\\n    font-size: 0.8rem;\\n  }\\n  @media (max-width: 600px) {\\n    margin-right: 1rem;\\n    font-size: 0.8rem;\\n  }\\n  @media (max-width: 375px) {\\n    font-size: 0.8rem;\\n    margin-right: 1rem;\\n  }\\n\"])));var Category2=styled.a(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  color: #2b61e1;\\n  opacity: 0.7;\\n\\n  :hover {\\n    opacity: 1;\\n  }\\n  @media (max-width: 1270px) {\\n    margin-right: 2rem;\\n  }\\n  @media (max-width: 980px) {\\n    margin-right: 1.5rem;\\n    font-size: 0.8rem;\\n  }\\n  @media (max-width: 768px) {\\n    margin-right: 1rem;\\n    font-size: 0.8rem;\\n  }\\n  @media (max-width: 600px) {\\n    margin-right: 1rem;\\n    font-size: 0.8rem;\\n  }\\n  @media (max-width: 540px) {\\n    font-size: 0.8rem;\\n    margin-right: 0;\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/Category.js"],"names":["React","styled","Category","props","history","useState","currentClick","setCurrentClick","prevClick","setPrevClick","GetClick","e","target","id","pathname","location","replace","push","useEffect","current","document","getElementById","style","opacity","prev","Category1","a","Category2"],"mappings":"iXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,IAClBC,CAAAA,OADkB,CACND,KADM,CAClBC,OADkB,qBAEcJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAFd,oDAEnBC,YAFmB,qBAELC,eAFK,0CAGQP,KAAK,CAACK,QAAN,CAAe,IAAf,CAHR,qDAGnBG,SAHmB,qBAGRC,YAHQ,qBAK1B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBJ,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,EAAV,CAAf,CAA8B;AAC9B,GAAMC,CAAAA,QAAQ,CAAGV,OAAO,CAACW,QAAR,CAAiBD,QAAlC,CACA,GAAIA,QAAQ,aAAQH,CAAC,CAACC,MAAF,CAASC,EAAjB,CAAZ,CAAmC,CACjCT,OAAO,CAACY,OAAR,WAAmBL,CAAC,CAACC,MAAF,CAASC,EAA5B,GACD,CAFD,IAEO,CACLT,OAAO,CAACa,IAAR,WAAgBN,CAAC,CAACC,MAAF,CAASC,EAAzB,GACD,CACF,CARD,CAUAb,KAAK,CAACkB,SAAN,CACE,SAACP,CAAD,CAAO,CACL,GAAIL,YAAY,GAAK,IAArB,CAA2B,CACzB,GAAIa,CAAAA,OAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwBf,YAAxB,CAAd,CAAqD;AACrD;AACAa,OAAO,CAACG,KAAR,CAAcC,OAAd,CAAwB,GAAxB,CAA6B;AAC9B,CAED,GAAIf,SAAS,GAAK,IAAlB,CAAwB,CACtB;AACA,GAAIgB,CAAAA,IAAI,CAAGJ,QAAQ,CAACC,cAAT,CAAwBb,SAAxB,CAAX,CACAgB,IAAI,CAACF,KAAL,CAAWC,OAAX,CAAqB,KAArB,CACD,CACDd,YAAY,CAACH,YAAD,CAAZ,CAA4B;AAC7B,CAdH,CAeE,CAACA,YAAD,CAfF,EAkBA,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,SAAD,EAAW,EAAE,CAAC,GAAd,CAAkB,OAAO,CAAEI,QAA3B,mBADF,cAIE,KAAC,SAAD,EAAW,EAAE,CAAC,SAAd,CAAwB,OAAO,CAAEA,QAAjC,oBAJF,cAOE,KAAC,SAAD,EAAW,EAAE,CAAC,QAAd,CAAuB,OAAO,CAAEA,QAAhC,mBAPF,GADF,CAaD,CA9CD,CAgDA,cAAeR,CAAAA,QAAf,CAEA,GAAMuB,CAAAA,SAAS,CAAGxB,MAAM,CAACyB,CAAV,8kBAAf,CA+BA,GAAMC,CAAAA,SAAS,CAAG1B,MAAM,CAACyB,CAAV,kjBAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Category = (props) => {\n  const { history } = props;\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = (e) => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n    const pathname = history.location.pathname;\n    if (pathname === `${e.target.id}`) {\n      history.replace(`${e.target.id}`);\n    } else {\n      history.push(`${e.target.id}`);\n    }\n  };\n\n  React.useEffect(\n    (e) => {\n      if (currentClick !== null) {\n        let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n        // console.log(current);\n        current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n      }\n\n      if (prevClick !== null) {\n        // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n        let prev = document.getElementById(prevClick);\n        prev.style.opacity = \"0.7\";\n      }\n      setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n    },\n    [currentClick]\n  );\n\n  return (\n    <React.Fragment>\n      <Category1 id=\"/\" onClick={GetClick}>\n        Trils\n      </Category1>\n      <Category1 id=\"/trilog\" onClick={GetClick}>\n        Trilog\n      </Category1>\n      <Category2 id=\"/about\" onClick={GetClick}>\n        About\n      </Category2>\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 1270px) {\n    margin-right: 2rem;\n  }\n\n  @media (max-width: 980px) {\n    margin-right: 1.5rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 768px) {\n    margin-right: 1.5rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 600px) {\n    margin-right: 1rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 375px) {\n    font-size: 0.8rem;\n    margin-right: 1rem;\n  }\n`;\n\nconst Category2 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 1270px) {\n    margin-right: 2rem;\n  }\n  @media (max-width: 980px) {\n    margin-right: 1.5rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 768px) {\n    margin-right: 1rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 600px) {\n    margin-right: 1rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 540px) {\n    font-size: 0.8rem;\n    margin-right: 0;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}