{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/MapContent.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapContent = props => {\n  _s();\n\n  const {\n    address\n  } = props;\n  React.useEffect(() => {\n    console.log(address);\n    mapscript();\n  }, [address]);\n\n  const mapscript = () => {\n    const infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    const container = document.getElementById(\"Mymap\");\n    const options = {\n      center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n      level: 3\n    }; //map\n\n    const map = new kakao.maps.Map(container, options); // 장소 검색 객체를 생성합니다\n\n    const ps = new kakao.maps.services.Places(); // 키워드로 장소를 검색합니다\n\n    ps.keywordSearch(address, placesSearchCB); // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (var i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        } // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n        map.setBounds(bounds);\n      }\n    } // 지도에 마커를 표시하는 함수입니다\n\n\n    function displayMarker(place) {\n      // 마커를 생성하고 지도에 표시합니다\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      }); // 마커에 클릭이벤트를 등록합니다\n\n      kakao.maps.event.addListener(marker, 'click', function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n        infowindow.setContent('<div style=\"padding:5px;font-size:17px;\">' + place.place_name + '</div>');\n        infowindow.open(map, marker);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MapBlock, {\n    id: \"Mymap\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapContent;\nconst MapBlock = styled.div`\n    width: 100%;\n    height: 500px;\n`;\n_c2 = MapBlock;\nexport default MapContent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapContent\");\n$RefreshReg$(_c2, \"MapBlock\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/MapContent.js"],"names":["React","styled","MapContent","props","address","useEffect","console","log","mapscript","infowindow","kakao","maps","InfoWindow","zIndex","container","document","getElementById","options","center","LatLng","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","y","x","setBounds","place","marker","Marker","position","event","addListener","setContent","place_name","open","MapBlock","div"],"mappings":"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","sourcesContent":["/*global kakao*/ \r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MapContent = (props) => {\r\n\r\n    const { address } = props;\r\n\r\n    React.useEffect(() => {\r\n        console.log(address);\r\n        mapscript();\r\n    }, [address]);\r\n\r\n    const mapscript = () => {\r\n        const infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n        const container = document.getElementById(\"Mymap\");\r\n\r\n        const options = {\r\n          center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\r\n          level: 3,\r\n        };\r\n\r\n        //map\r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 장소 검색 객체를 생성합니다\r\n        const ps = new kakao.maps.services.Places(); \r\n\r\n        // 키워드로 장소를 검색합니다\r\n        ps.keywordSearch(address, placesSearchCB);\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가합니다\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (var i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n\r\n        // 지도에 마커를 표시하는 함수입니다\r\n        function displayMarker(place) {\r\n            \r\n            // 마커를 생성하고 지도에 표시합니다\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n\r\n            // 마커에 클릭이벤트를 등록합니다\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:17px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n            });\r\n        }\r\n    };\r\n\r\n    return(\r\n        <MapBlock id=\"Mymap\"></MapBlock>\r\n    );\r\n};\r\n\r\nconst MapBlock = styled.div`\r\n    width: 100%;\r\n    height: 500px;\r\n`;\r\n\r\nexport default MapContent;"]},"metadata":{},"sourceType":"module"}