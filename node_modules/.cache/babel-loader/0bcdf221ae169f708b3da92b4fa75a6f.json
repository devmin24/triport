{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/Video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = ({\n  url\n}) => {\n  _s();\n\n  const [isVideoPlaying, setisVideoPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const vidRef = useRef();\n\n  const onVideoClick = () => {\n    if (isVideoPlaying) {\n      vidRef.current.pause();\n      setisVideoPlaying(false);\n    } else {\n      vidRef.current.play();\n      setisVideoPlaying(true);\n    }\n  };\n\n  useEffect(() => {\n    const scroll = document.getElementById(\"video-container\");\n\n    if (scroll) {\n      scroll.addEventListener(\"scroll\", () => {\n        vidRef.current.pause();\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VideoCards, {\n    children: /*#__PURE__*/_jsxDEV(VideoPlay, {\n      onClick: onVideoClick,\n      ref: vidRef,\n      src: url // muted={true}\n      ,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Video, \"lZTHixjur75OQ8Lyd3jYn4jX2Bo=\");\n\n_c = Video;\nconst VideoCards = styled.div`\n  position: relative;\n  display: flex;\n`;\n_c2 = VideoCards;\nconst VideoPlay = styled.video`\n  display: flex;\n  height: 32rem;\n  width: 18rem;\n  border-radius: 20px;\n`;\n_c3 = VideoPlay;\nexport default Video;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"VideoCards\");\n$RefreshReg$(_c3, \"VideoPlay\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/Video.js"],"names":["React","useRef","useState","useEffect","styled","Slider","Video","url","isVideoPlaying","setisVideoPlaying","volume","setVolume","vidRef","onVideoClick","current","pause","play","scroll","document","getElementById","addEventListener","VideoCards","div","VideoPlay","video"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACzB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAMU,MAAM,GAAGX,MAAM,EAArB;;AAEA,QAAMY,YAAY,GAAG,MAAM;AACzB,QAAIL,cAAJ,EAAoB;AAClBI,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAf;AACAN,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHD,MAGO;AACLG,MAAAA,MAAM,CAACE,OAAP,CAAeE,IAAf;AACAP,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GARD;;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAf;;AACA,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtCR,QAAAA,MAAM,CAACE,OAAP,CAAeC,KAAf;AACD,OAFD;AAGD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,OAAO,EAAEF,YADX;AAEE,MAAA,GAAG,EAAED,MAFP;AAGE,MAAA,GAAG,EAAEL,GAHP,CAIE;AAJF;AAKE,MAAA,IAAI;AALN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1CD;;GAAMD,K;;KAAAA,K;AA4CN,MAAMe,UAAU,GAAGjB,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA,CAHA;MAAMD,U;AAKN,MAAME,SAAS,GAAGnB,MAAM,CAACoB,KAAM;AAC/B;AACA;AACA;AACA;AACA,CALA;MAAMD,S;AAON,eAAejB,KAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst Video = ({ url }) => {\n  const [isVideoPlaying, setisVideoPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n\n  const vidRef = useRef();\n\n  const onVideoClick = () => {\n    if (isVideoPlaying) {\n      vidRef.current.pause();\n      setisVideoPlaying(false);\n    } else {\n      vidRef.current.play();\n      setisVideoPlaying(true);\n    }\n  };\n\n  useEffect(() => {\n    const scroll = document.getElementById(\"video-container\");\n    if (scroll) {\n      scroll.addEventListener(\"scroll\", () => {\n        vidRef.current.pause();\n      });\n    }\n  }, []);\n\n  return (\n    <VideoCards>\n      <VideoPlay\n        onClick={onVideoClick}\n        ref={vidRef}\n        src={url}\n        // muted={true}\n        loop\n      />\n      {/* <Slider\n        min={0}\n        max={vidRef.current.duration}\n        step={0.1}\n        value={vidRef.current.currentTime}\n      /> */}\n    </VideoCards>\n  );\n};\n\nconst VideoCards = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst VideoPlay = styled.video`\n  display: flex;\n  height: 32rem;\n  width: 18rem;\n  border-radius: 20px;\n`;\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}