{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { produce } from 'immer'; // 불변성 유지\n\nimport { config } from \"./config\";\n/* Trilog - 트릴로그 */\n\nconst trilogSlice = createSlice({\n  name: \"trilog\",\n  initialState: {\n    main: {\n      list: [],\n      is_last: false,\n      page: 1\n    },\n    detail: {\n      information: {\n        id: 1,\n        title: '',\n        description: '',\n        address: '',\n        likeNum: 0,\n        commentNum: 0,\n        modifiedAt: '2011-01-01 12:00:00'\n      },\n      author: {\n        nickname: 'Triport',\n        profileImgUrl: ''\n      },\n      member: {\n        isLike: false,\n        isMember: false\n      }\n    },\n    parent_comment: {\n      list: [],\n      is_last: false,\n      page: 1\n    },\n    child_comment: {\n      list: []\n    }\n  },\n  reducers: {\n    setTrilogMainAdd: (state, action) => produce(state, draft => {\n      draft.main.list = [...draft.main.list, ...action.payload.results];\n      draft.main.is_last = action.payload.last;\n    }),\n    setTrilogMain: (state, action) => produce(state, draft => {\n      draft.main.list = action.payload.results;\n      draft.main.is_last = action.payload.last;\n    }),\n    setTrilogMainPage: (state, action) => produce(state, draft => {\n      draft.main.page = action.payload;\n    }),\n    setTrilogLike: (state, action) => produce(state, draft => {\n      // 게시물을 찾아서 isMembers 바꿈\n      let idx = draft.main.list.findIndex(e => e.information.id === action.payload);\n      draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\n    }),\n    setTrilogParentCommentPage: (state, action) => produce(state, draft => {\n      draft.parent_comment.page = action.payload;\n    }),\n    setTrilogDetail: (state, action) => produce(state, draft => {\n      draft.detail = action.payload.results;\n    }),\n    setTrilogParentComment: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = action.payload.results;\n      draft.parent_comment.is_last = action.payload.last;\n    }),\n    addTrilogParentCommentScroll: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\n      draft.parent_comment.is_last = action.payload.last;\n    }),\n    setTrilogChildComment: (state, action) => produce(state, draft => {\n      const comment = {\n        parent_id: action.payload.parent_id,\n        list: action.payload.results,\n        is_last: action.payload.last,\n        page: 1\n      };\n      draft.child_comment.list = [...draft.child_comment.list, comment];\n    }),\n    setTrilogDetailLike: (state, action) => produce(state, draft => {\n      if (draft.detail.member.isLike) {\n        draft.detail.information.likeNum -= 1;\n      } else {\n        draft.detail.information.likeNum += 1;\n      }\n\n      draft.detail.member.isLike = !draft.detail.member.isLike;\n    }),\n    addTrilogParentComment: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\n      draft.detail.information.commentNum += 1;\n    }),\n    setTrilogParentCommentLike: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload);\n\n      if (draft.parent_comment.list[idx].user.isLike) {\n        draft.parent_comment.list[idx].commentParent.likeNum -= 1;\n        draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\n      } else {\n        draft.parent_comment.list[idx].commentParent.likeNum += 1;\n        draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\n      }\n    }),\n    setTrilogChildCommentLike: (state, action) => produce(state, draft => {\n      draft.child_comment.list.forEach((val, index) => {\n        if (val.id === action.payload) {\n          console.log('skip', val);\n        }\n      });\n    })\n  }\n});\n\nconst getTrilogMain = (filter, keyword) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = getState().trilog.main.page;\n    fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (page === 1) {\n        dispatch(setTrilogMain(data));\n      } else {\n        console.log('Add');\n        dispatch(setTrilogMainAdd(data));\n      }\n\n      if (!data.last) {\n        dispatch(setTrilogMainPage(page + 1));\n      } else {\n        dispatch(setTrilogMainPage(1));\n      }\n    }).catch(err => console.log(err, \"메인 error\"));\n  };\n};\n\nconst getTrilogMainFilter = (filter, keyword) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = 1;\n    fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (page === 1) {\n        dispatch(setTrilogMain(data));\n      } else {\n        dispatch(setTrilogMainAdd(data));\n      }\n\n      if (!data.last) {\n        dispatch(setTrilogMainPage(page + 1));\n      } else {\n        dispatch(setTrilogMainPage(1));\n      }\n    }).catch(err => console.log(err, \"메인 필터 error\"));\n  };\n};\n\nconst getTrilogDetail = id => {\n  return async function (dispatch, getState, {\n    history\n  }) {\n    const page = getState().trilog.parent_comment.page;\n    const access_token = localStorage.getItem(\"access_token\");\n    const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => data).catch(err => console.log(err, 'trilog detail'));\n    const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (!data.last) {\n        dispatch(setTrilogParentCommentPage(page + 1));\n      } else {\n        dispatch(setTrilogParentCommentPage(1));\n      }\n\n      return data;\n    }).catch(err => console.log(err, 'trilog parent comment'));\n    dispatch(setTrilogDetail(detail));\n    dispatch(setTrilogParentComment(comment));\n  };\n};\n\nconst addTrilog = trilog => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n\n    if (trilog.is_edit) {\n      fetch(`${config}/api/boards/${trilog.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        },\n        body: JSON.stringify({\n          title: trilog.title,\n          address: trilog.address,\n          description: trilog.description,\n          imageUrlList: trilog.imageUrlList\n        })\n      }).then(res => res.json()).then(data => {\n        alert(data.msg);\n        history.replace('/trilog');\n      }).catch(err => console.log(err, 'Trilog Edit'));\n    } else {\n      fetch('${config}/api/boards/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        },\n        body: JSON.stringify({\n          title: trilog.title,\n          address: trilog.address,\n          description: trilog.description,\n          imageUrlList: trilog.imageUrlList\n        })\n      }).then(res => res.json()).then(data => {\n        alert(data.msg);\n        history.replace('/trilog');\n      }).catch(err => console.log(err, 'Trilog Add'));\n    }\n  };\n};\n\nconst setLikeTrilog = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/like/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        alert('로그인을 먼저 하세요!');\n      } else {\n        dispatch(setTrilogLike(id));\n      }\n    }).catch(err => console.log(err, 'trilog like'));\n  };\n};\n\nconst setLikeTrilogDetail = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/like/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        alert('로그인을 먼저 하세요!');\n      } else {\n        dispatch(setTrilogDetailLike());\n      }\n    }).catch(err => console.log(err, 'trilog detail like'));\n  };\n};\n\nconst getParentCommentScroll = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = getState().trilog.parent_comment.page;\n    fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data, 'data');\n\n      if (!data.last) {\n        dispatch(setTrilogParentCommentPage(page + 1));\n      } else {\n        dispatch(setTrilogParentCommentPage(1));\n      }\n\n      dispatch(addTrilogParentCommentScroll(data));\n    }).catch(err => console.log(err, \"부모 댓글 스크롤 error\"));\n  };\n};\n\nconst addParentComment = (id, contents) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: contents\n      })\n    }).then(res => res.json()).then(data => {\n      dispatch(addTrilogParentComment(data));\n      alert('댓글 등록이 완료되었습니다.');\n    }).catch(err => console.log(err, 'add comment trilog'));\n  };\n};\n\nconst getChildComment = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/all/boards/comments/children/${id}?page=1`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      const new_date = { ...data,\n        parent_id: id\n      };\n      dispatch(setTrilogChildComment(new_date));\n    }).catch(err => console.log(err, 'get child comment trilog'));\n  };\n};\n\nconst addChildComment = (id, contents) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/children/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: contents\n      })\n    }).then(res => res.json()).catch(err => console.log(err, 'child comment post'));\n  };\n};\n\nconst setParentCommentLike = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/boards/comments/parents/like/${id}`;\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(setTrilogParentCommentLike(id));\n    }).catch(err => console.log(err, 'comment like'));\n  };\n};\n\nconst setChildCommentLike = (parent_id, id) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/boards/comments/children/like/${parent_id}`;\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(setTrilogChildCommentLike(id));\n    }).catch(err => console.log(err, 'child comment like'));\n  };\n};\n\nconst actionCreators = {\n  getTrilogMain,\n  getTrilogMainFilter,\n  getTrilogDetail,\n  addTrilog,\n  setLikeTrilog,\n  setLikeTrilogDetail,\n  addParentComment,\n  getChildComment,\n  addChildComment,\n  getParentCommentScroll,\n  setParentCommentLike,\n  setChildCommentLike\n};\nexport const {\n  setTrilogMain,\n  setTrilogDetail,\n  setTrilogMainPage,\n  setTrilogMainAdd,\n  setTrilogFilter,\n  setTrilogLike,\n  setTrilogParentComment,\n  setTrilogDetailLike,\n  setTrilogChildComment,\n  addTrilogParentComment,\n  setTrilogParentCommentPage,\n  addTrilogParentCommentScroll,\n  setTrilogParentCommentLike,\n  setTrilogChildCommentLike\n} = trilogSlice.actions;\nexport default trilogSlice.reducer;\nexport { actionCreators };","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trilog.js"],"names":["createSlice","produce","config","trilogSlice","name","initialState","main","list","is_last","page","detail","information","id","title","description","address","likeNum","commentNum","modifiedAt","author","nickname","profileImgUrl","member","isLike","isMember","parent_comment","child_comment","reducers","setTrilogMainAdd","state","action","draft","payload","results","last","setTrilogMain","setTrilogMainPage","setTrilogLike","idx","findIndex","e","setTrilogParentCommentPage","setTrilogDetail","setTrilogParentComment","addTrilogParentCommentScroll","setTrilogChildComment","comment","parent_id","setTrilogDetailLike","addTrilogParentComment","setTrilogParentCommentLike","commentParent","user","setTrilogChildCommentLike","forEach","val","index","console","log","getTrilogMain","filter","keyword","dispatch","getState","history","access_token","localStorage","getItem","trilog","fetch","method","headers","then","res","json","data","catch","err","getTrilogMainFilter","getTrilogDetail","addTrilog","is_edit","body","JSON","stringify","imageUrlList","alert","msg","replace","setLikeTrilog","status","setLikeTrilogDetail","getParentCommentScroll","addParentComment","contents","getChildComment","new_date","addChildComment","setParentCommentLike","api","setChildCommentLike","actionCreators","setTrilogFilter","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { produce } from 'immer'; // 불변성 유지\r\nimport { config } from \"./config\";\r\n\r\n/* Trilog - 트릴로그 */\r\nconst trilogSlice = createSlice({\r\n    name : \"trilog\",\r\n    initialState : {\r\n        main : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1,\r\n        },\r\n        detail : {\r\n            information : {\r\n                id: 1,\r\n                title: '',\r\n                description: '',\r\n                address: '',\r\n                likeNum: 0,\r\n                commentNum: 0,\r\n                modifiedAt: '2011-01-01 12:00:00',\r\n            },\r\n            author: {\r\n                nickname: 'Triport',\r\n                profileImgUrl: '',\r\n            },\r\n            member: {\r\n                isLike: false,\r\n                isMember: false,\r\n            }\r\n        },\r\n        parent_comment : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1\r\n        },\r\n        child_comment : {\r\n            list : [],\r\n        },\r\n    },\r\n    reducers: {\r\n        setTrilogMainAdd : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = [...draft.main.list, ...action.payload.results];\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n\r\n        setTrilogMain : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = action.payload.results;\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n\r\n        setTrilogMainPage : (state, action) => produce(state, (draft) => {\r\n            draft.main.page = action.payload;\r\n        }),\r\n\r\n        setTrilogLike : (state, action) => produce(state, (draft) => {\r\n            // 게시물을 찾아서 isMembers 바꿈\r\n            let idx = draft.main.list.findIndex((e) => e.information.id === action.payload);\r\n            draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\r\n        }),\r\n\r\n        setTrilogParentCommentPage : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.page = action.payload;\r\n        }),\r\n\r\n        setTrilogDetail : (state, action) => produce(state, (draft) => {\r\n            draft.detail = action.payload.results;\r\n        }),\r\n\r\n        setTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = action.payload.results;\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n\r\n        addTrilogParentCommentScroll : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n\r\n        setTrilogChildComment : (state, action) => produce(state, (draft) => {\r\n            const comment = {\r\n                parent_id : action.payload.parent_id,\r\n                list : action.payload.results,\r\n                is_last : action.payload.last,\r\n                page : 1\r\n            };\r\n            draft.child_comment.list = [...draft.child_comment.list, comment];\r\n        }),\r\n\r\n        setTrilogDetailLike : (state, action) => produce(state, (draft) => {\r\n            if(draft.detail.member.isLike){\r\n                draft.detail.information.likeNum -= 1;\r\n            } else {\r\n                draft.detail.information.likeNum += 1;\r\n            }\r\n            \r\n            draft.detail.member.isLike = !draft.detail.member.isLike;\r\n        }),\r\n\r\n        addTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\r\n            draft.detail.information.commentNum += 1;\r\n        }),\r\n\r\n        setTrilogParentCommentLike: (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            if(draft.parent_comment.list[idx].user.isLike){\r\n                draft.parent_comment.list[idx].commentParent.likeNum -= 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            } else {\r\n                draft.parent_comment.list[idx].commentParent.likeNum += 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            }\r\n        }),\r\n\r\n        setTrilogChildCommentLike: (state, action) => produce(state, (draft) => {\r\n            draft.child_comment.list.forEach((val, index) => {\r\n                if(val.id === action.payload) {\r\n                    console.log('skip', val)\r\n                }\r\n            })\r\n        }),\r\n\r\n    },\r\n});\r\n\r\nconst getTrilogMain = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.main.page;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                console.log('Add')\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 error\"));\r\n    };\r\n};\r\n\r\nconst getTrilogMainFilter = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = 1;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 필터 error\"));\r\n    };\r\n};\r\n\r\n\r\nconst getTrilogDetail = (id) => {\r\n    return async function (dispatch, getState, { history }) {\r\n        const page = getState().trilog.parent_comment.page;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n        .catch(err => console.log(err, 'trilog detail'));\r\n\r\n        const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(!data.last) {\r\n                dispatch(setTrilogParentCommentPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogParentCommentPage(1));\r\n            }\r\n            return data;\r\n        })\r\n        .catch(err => console.log(err, 'trilog parent comment'));\r\n\r\n        dispatch(setTrilogDetail(detail));\r\n        dispatch(setTrilogParentComment(comment));\r\n    };\r\n};\r\n\r\nconst addTrilog = (trilog) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        if(trilog.is_edit) {\r\n            fetch(`${config}/api/boards/${trilog.id}`, {\r\n                method: 'PUT',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                alert(data.msg);\r\n                history.replace('/trilog');\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Edit'))\r\n        } else {\r\n            fetch('${config}/api/boards/', {\r\n                method: 'POST',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                alert(data.msg);\r\n                history.replace('/trilog');\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Add'))\r\n        }\r\n    };\r\n};\r\n\r\nconst setLikeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                alert('로그인을 먼저 하세요!');\r\n            } else {\r\n                dispatch(setTrilogLike(id));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog like'));\r\n    };\r\n};\r\n\r\nconst setLikeTrilogDetail = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                alert('로그인을 먼저 하세요!');\r\n            } else {\r\n                dispatch(setTrilogDetailLike());\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog detail like'));\r\n    };\r\n};\r\n\r\nconst getParentCommentScroll = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.parent_comment.page;\r\n        fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {     \r\n            console.log(data, 'data');  \r\n            if(!data.last) {\r\n                dispatch(setTrilogParentCommentPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogParentCommentPage(1));\r\n            }\r\n\r\n            dispatch(addTrilogParentCommentScroll(data));\r\n        })\r\n        .catch(err => console.log(err, \"부모 댓글 스크롤 error\"));\r\n    }\r\n};\r\n\r\nconst addParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(addTrilogParentComment(data));\r\n            alert('댓글 등록이 완료되었습니다.');\r\n        })\r\n        .catch(err => console.log(err, 'add comment trilog'));\r\n    };\r\n};\r\n\r\nconst getChildComment = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n\r\n        fetch(`${config}/api/all/boards/comments/children/${id}?page=1`, {\r\n            method : 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            const new_date = { ...data, parent_id : id }\r\n            dispatch(setTrilogChildComment(new_date));\r\n        })\r\n        .catch(err => console.log(err, 'get child comment trilog'));\r\n    };\r\n};\r\n\r\nconst addChildComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n\r\n        fetch(`${config}/api/boards/comments/children/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .catch(err => console.log(err, 'child comment post'));\r\n\r\n    };\r\n};\r\n\r\nconst setParentCommentLike = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/comments/parents/like/${id}`;\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(setTrilogParentCommentLike(id));\r\n        })\r\n        .catch(err => console.log(err, 'comment like'));\r\n    };\r\n};\r\n\r\nconst setChildCommentLike = (parent_id, id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/comments/children/like/${parent_id}`;\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(setTrilogChildCommentLike(id));\r\n        })\r\n        .catch(err => console.log(err, 'child comment like'));\r\n    };\r\n};\r\n\r\nconst actionCreators = {\r\n    getTrilogMain,\r\n    getTrilogMainFilter,\r\n    getTrilogDetail,\r\n    addTrilog,\r\n    setLikeTrilog,\r\n    setLikeTrilogDetail,\r\n    addParentComment,\r\n    getChildComment,\r\n    addChildComment,\r\n    getParentCommentScroll,\r\n    setParentCommentLike,\r\n    setChildCommentLike,\r\n};\r\n\r\nexport const { \r\n    setTrilogMain, \r\n    setTrilogDetail, \r\n    setTrilogMainPage, \r\n    setTrilogMainAdd, \r\n    setTrilogFilter,\r\n    setTrilogLike,\r\n    setTrilogParentComment, \r\n    setTrilogDetailLike, \r\n    setTrilogChildComment, \r\n    addTrilogParentComment, \r\n    setTrilogParentCommentPage, \r\n    addTrilogParentCommentScroll, \r\n    setTrilogParentCommentLike, \r\n    setTrilogChildCommentLike } = trilogSlice.actions;\r\nexport default trilogSlice.reducer;\r\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}