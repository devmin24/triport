{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst profileimgSlice = createSlice({\n  name: \"profileimg\",\n  initialState: {\n    user_img: \"https://i.ibb.co/MDKhN7F/kakao-11.jpg\"\n  },\n  reducers: {\n    SET_PREVIEW: (state, action) => {\n      state.user_img = action.payload;\n    }\n  }\n});\n\nconst updateProfileimg = (preview, name, interest, img) => {\n  return function (dispatch) {\n    //프로필 이미지 수정한 게 없다면?\n    if (!img) {\n      dispatch(updateProfile(preview, name, interest));\n      return;\n    } //프로필 이미지 수정했다면?\n\n\n    let formData = new FormData(); // 폼데이터로 저장\n\n    formData.append(\"file\", img);\n    const img_data = {\n      url: \"/api/upload/\",\n      method: \"POST\",\n      data: formData\n    };\n    axios(img_data).then(res => {\n      dispatch(updateProfile(res.data, name, interest));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport const {\n  SET_PREVIEW\n} = profileimgSlice.actions;\nexport const reduxprofile = {};\nexport default profileimgSlice.reducer;","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/profileimg.js"],"names":["createSlice","profileimgSlice","name","initialState","user_img","reducers","SET_PREVIEW","state","action","payload","updateProfileimg","preview","interest","img","dispatch","updateProfile","formData","FormData","append","img_data","url","method","data","axios","then","res","catch","err","console","log","actions","reduxprofile","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,eAAe,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AADE,GAFoB;AAKlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;AACD;AAHO;AALwB,CAAD,CAAnC;;AAYA,MAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUT,IAAV,EAAgBU,QAAhB,EAA0BC,GAA1B,KAAkC;AACzD,SAAO,UAAUC,QAAV,EAAoB;AACzB;AACA,QAAI,CAACD,GAAL,EAAU;AACRC,MAAAA,QAAQ,CAACC,aAAa,CAACJ,OAAD,EAAUT,IAAV,EAAgBU,QAAhB,CAAd,CAAR;AACA;AACD,KALwB,CAOzB;;;AACA,QAAII,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CARyB,CASzB;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,GAAxB;AACA,UAAMM,QAAQ,GAAG;AACfC,MAAAA,GAAG,EAAE,cADU;AAEfC,MAAAA,MAAM,EAAE,MAFO;AAGfC,MAAAA,IAAI,EAAEN;AAHS,KAAjB;AAKAO,IAAAA,KAAK,CAACJ,QAAD,CAAL,CACGK,IADH,CACSC,GAAD,IAAS;AACbX,MAAAA,QAAQ,CAACC,aAAa,CAACU,GAAG,CAACH,IAAL,EAAWpB,IAAX,EAAiBU,QAAjB,CAAd,CAAR;AACD,KAHH,EAIGc,KAJH,CAIUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KANH;AAOD,GAvBD;AAwBD,CAzBD;;AA2BA,OAAO,MAAM;AAAErB,EAAAA;AAAF,IAAkBL,eAAe,CAAC6B,OAAxC;AAEP,OAAO,MAAMC,YAAY,GAAG,EAArB;AAEP,eAAe9B,eAAe,CAAC+B,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst profileimgSlice = createSlice({\n  name: \"profileimg\",\n  initialState: {\n    user_img: \"https://i.ibb.co/MDKhN7F/kakao-11.jpg\",\n  },\n  reducers: {\n    SET_PREVIEW: (state, action) => {\n      state.user_img = action.payload;\n    },\n  },\n});\n\nconst updateProfileimg = (preview, name, interest, img) => {\n  return function (dispatch) {\n    //프로필 이미지 수정한 게 없다면?\n    if (!img) {\n      dispatch(updateProfile(preview, name, interest));\n      return;\n    }\n\n    //프로필 이미지 수정했다면?\n    let formData = new FormData();\n    // 폼데이터로 저장\n    formData.append(\"file\", img);\n    const img_data = {\n      url: \"/api/upload/\",\n      method: \"POST\",\n      data: formData,\n    };\n    axios(img_data)\n      .then((res) => {\n        dispatch(updateProfile(res.data, name, interest));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const { SET_PREVIEW } = profileimgSlice.actions;\n\nexport const reduxprofile = {};\n\nexport default profileimgSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}