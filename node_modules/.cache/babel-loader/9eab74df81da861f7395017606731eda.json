{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardWriteMap.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardWriteMap = props => {\n  _s();\n\n  const {\n    keyword,\n    setAddress,\n    drag\n  } = props;\n  React.useEffect(() => {\n    mapscript();\n  }, [keyword]);\n\n  const setLocation = location => {\n    setAddress(location);\n  };\n\n  const mapscript = () => {\n    const infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    const container = document.getElementById(\"Mymap\");\n    const options = {\n      center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n      draggable: drag,\n      level: 5\n    }; //map\n\n    const map = new kakao.maps.Map(container, options); // 장소 검색 객체를 생성합니다\n\n    const ps = new kakao.maps.services.Places(); // 키워드로 장소를 검색합니다\n\n    if (keyword !== \"\") ps.keywordSearch(keyword, placesSearchCB); // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (var i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        } // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n        map.setBounds(bounds);\n      }\n    } // 지도에 마커를 표시하는 함수입니다\n\n\n    function displayMarker(place) {\n      // 마커를 생성하고 지도에 표시합니다\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      }); // 마커에 클릭이벤트를 등록합니다\n\n      kakao.maps.event.addListener(marker, 'click', function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n        infowindow.setContent('<div style=\"display:flex; justify-content:center; width:200px;\"><a href=\"' + place.place_url + '\" target=\"_blank\" style=\"padding:5px;font-size:14px;\">' + place.place_name + '</a></div>');\n        setLocation(place.address_name);\n        infowindow.open(map, marker);\n        alert('위치 설정 완료');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MapBlock, {\n    id: \"Mymap\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BoardWriteMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = BoardWriteMap;\nconst MapBlock = styled.div`\n    width: 100%;\n    height: 400px;\n`;\n_c2 = MapBlock;\nexport default BoardWriteMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardWriteMap\");\n$RefreshReg$(_c2, \"MapBlock\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardWriteMap.js"],"names":["React","styled","BoardWriteMap","props","keyword","setAddress","drag","useEffect","mapscript","setLocation","location","infowindow","kakao","maps","InfoWindow","zIndex","container","document","getElementById","options","center","LatLng","draggable","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","y","x","setBounds","place","marker","Marker","position","event","addListener","setContent","place_url","place_name","address_name","open","alert","MapBlock","div"],"mappings":"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","sourcesContent":["/*global kakao*/ \r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BoardWriteMap = (props) => {\r\n\r\n    const { keyword, setAddress ,drag } = props;\r\n\r\n    React.useEffect(() => {\r\n        mapscript();\r\n    }, [keyword]);\r\n\r\n    const setLocation = (location) => {\r\n        setAddress(location);\r\n    };\r\n\r\n    const mapscript = () => {\r\n        const infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n        const container = document.getElementById(\"Mymap\");\r\n\r\n        const options = {\r\n          center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\r\n          draggable : drag,\r\n          level: 5,\r\n        };\r\n\r\n        //map\r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 장소 검색 객체를 생성합니다\r\n        const ps = new kakao.maps.services.Places(); \r\n\r\n        // 키워드로 장소를 검색합니다\r\n        if(keyword !== \"\")\r\n            ps.keywordSearch(keyword, placesSearchCB);\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가합니다\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (var i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n\r\n        // 지도에 마커를 표시하는 함수입니다\r\n        function displayMarker(place) {\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n\r\n            // 마커에 클릭이벤트를 등록합니다\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n                infowindow.setContent('<div style=\"display:flex; justify-content:center; width:200px;\"><a href=\"' + place.place_url +'\" target=\"_blank\" style=\"padding:5px;font-size:14px;\">'+ place.place_name + '</a></div>');\r\n                setLocation(place.address_name);\r\n                infowindow.open(map, marker);\r\n                alert('위치 설정 완료');\r\n            });\r\n        }\r\n    };\r\n\r\n    return(\r\n        <MapBlock id=\"Mymap\"></MapBlock>\r\n    );\r\n};\r\n\r\nconst MapBlock = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n`;\r\n\r\nexport default BoardWriteMap;"]},"metadata":{},"sourceType":"module"}