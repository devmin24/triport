{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\nconst trilseSlice = createSlice({\n  name: \"trils\",\n  initialState: {\n    data: [],\n    modal: false,\n    detail: [],\n    page: 1\n  },\n  reducers: {\n    GET_POST: (state, action) => {\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n    },\n    SHIFT_POST: (state, action) => {\n      state.data.push(...action.payload.result);\n      state.page = action.payload.page;\n    },\n    GET_POST_DETAIL: (state, action) => {\n      state.modal = true;\n      state.detail = action.payload;\n    },\n    CLOSE_MODAL: (state, action) => {\n      state.modal = false;\n    },\n    LIKE_OK: (state, action) => {\n      const idx = state.data.findIndex(p => p.information.id === action.payload.information.id);\n      state.data[idx] = action.payload;\n      state.detail = action.payload;\n    },\n    DELETE_POST: (state, action) => {\n      const idx = state.data.findIndex(p => p.information.id === action.payload);\n\n      if (idx !== -1) {\n        state.data.splice(idx, 1);\n      }\n    },\n    SEARCH_POST: (state, action) => {\n      console.log(action.payload);\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n    }\n  }\n});\n\nconst writepost = (video, tags) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"file\", video);\n    tags.map((p, idx) => formData.append(\"hashtag\", p));\n    const api = `${config}/api/posts`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`\n      },\n      body: formData\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      if (result.msg === \"포스팅 완료!\") {\n        alert(\"정상적으로 작성되었습니다.\");\n        history.replace(\"/\");\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst searchPost = (keyword = \"\", LikeOrDate = \"modifiedAt\", page = 1) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      const results = {\n        result: result.results,\n        page: page + 1\n      };\n      dispatch(SEARCH_POST(results));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst getPost = (keyword = \"\", LikeOrDate = \"likeNum\", page = 1) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    console.log(api);\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      console.log(result);\n      const results = {\n        result: result.results,\n        page: page + 1\n      };\n\n      if (page === 1) {\n        dispatch(GET_POST(results));\n      } else {\n        dispatch(SHIFT_POST(results));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst getPostDetail = postId => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts/detail/${postId}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      dispatch(GET_POST_DETAIL(result.results));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst send_like = (postId, like) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/posts/like/${postId}`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`\n      }\n    };\n    fetch(api, data).then(result => {\n      return result.json();\n    }).then(result => {\n      if (result.ok) {\n        dispatch(LIKE_OK(result.results));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nexport const {\n  GET_POST,\n  SHIFT_POST,\n  GET_POST_DETAIL,\n  CLOSE_MODAL,\n  LIKE_OK,\n  DELETE_POST,\n  SEARCH_POST\n} = trilseSlice.actions;\nexport const TrilsActions = {\n  writepost,\n  getPost,\n  getPostDetail,\n  send_like,\n  searchPost\n};\nexport default trilseSlice.reducer;","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trils.js"],"names":["createSlice","config","trilseSlice","name","initialState","data","modal","detail","page","reducers","GET_POST","state","action","payload","result","SHIFT_POST","push","GET_POST_DETAIL","CLOSE_MODAL","LIKE_OK","idx","findIndex","p","information","id","DELETE_POST","splice","SEARCH_POST","console","log","writepost","video","tags","dispatch","getState","history","refresh_token","localStorage","getItem","access_token","formData","FormData","append","map","api","method","headers","Authorization","body","fetch","then","json","msg","alert","replace","catch","err","searchPost","keyword","LikeOrDate","results","getPost","getPostDetail","postId","send_like","like","ok","actions","TrilsActions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { config } from \"./config\";\n\nconst trilseSlice = createSlice({\n  name: \"trils\",\n  initialState: {\n    data: [],\n    modal: false,\n    detail: [],\n    page: 1,\n  },\n  reducers: {\n    GET_POST: (state, action) => {\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n    },\n    SHIFT_POST: (state, action) => {\n      state.data.push(...action.payload.result);\n      state.page = action.payload.page;\n    },\n    GET_POST_DETAIL: (state, action) => {\n      state.modal = true;\n      state.detail = action.payload;\n    },\n    CLOSE_MODAL: (state, action) => {\n      state.modal = false;\n    },\n    LIKE_OK: (state, action) => {\n      const idx = state.data.findIndex(\n        (p) => p.information.id === action.payload.information.id\n      );\n      state.data[idx] = action.payload;\n      state.detail = action.payload;\n    },\n    DELETE_POST: (state, action) => {\n      const idx = state.data.findIndex(\n        (p) => p.information.id === action.payload\n      );\n      if (idx !== -1) {\n        state.data.splice(idx, 1);\n      }\n    },\n    SEARCH_POST: (state, action) => {\n      console.log(action.payload);\n      state.data = action.payload.result;\n      state.page = action.payload.page;\n    },\n  },\n});\n\nconst writepost = (video, tags) => {\n  return function (dispatch, getState, { history }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"file\", video);\n    tags.map((p, idx) => formData.append(\"hashtag\", p));\n    const api = `${config}/api/posts`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n      body: formData,\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (result.msg === \"포스팅 완료!\") {\n          alert(\"정상적으로 작성되었습니다.\");\n          history.replace(\"/\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst searchPost = (keyword = \"\", LikeOrDate = \"modifiedAt\", page = 1) => {\n  return function (dispatch, getState, { history }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        const results = {\n          result: result.results,\n          page: page + 1,\n        };\n        dispatch(SEARCH_POST(results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst getPost = (keyword = \"\", LikeOrDate = \"likeNum\", page = 1) => {\n  return function (dispatch, getState, { history }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts?page=${page}&filter=${LikeOrDate}&keyword=${keyword}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    console.log(api)\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        console.log(result);\n        const results = {\n          result: result.results,\n          page: page + 1,\n        };\n        if (page === 1) {\n          dispatch(GET_POST(results));\n        } else {\n          dispatch(SHIFT_POST(results));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst getPostDetail = (postId) => {\n  return function (dispatch, getState, { history }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/all/posts/detail/${postId}`;\n    const data = {\n      method: \"GET\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        dispatch(GET_POST_DETAIL(result.results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nconst send_like = (postId, like) => {\n  return function (dispatch, getState, { history }) {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/posts/like/${postId}`;\n    const data = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n    };\n    fetch(api, data)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (result.ok) {\n          dispatch(LIKE_OK(result.results));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const {\n  GET_POST,\n  SHIFT_POST,\n  GET_POST_DETAIL,\n  CLOSE_MODAL,\n  LIKE_OK,\n  DELETE_POST,\n  SEARCH_POST,\n} = trilseSlice.actions;\n\nexport const TrilsActions = {\n  writepost,\n  getPost,\n  getPostDetail,\n  send_like,\n  searchPost,\n};\n\nexport default trilseSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}