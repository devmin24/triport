{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { produce } from 'immer'; // 불변성 유지\n\nimport { config } from \"./config\";\nimport Swal from \"sweetalert2\";\n/* Trilog - 트릴로그 */\n\nconst trilogSlice = createSlice({\n  name: \"trilog\",\n  initialState: {\n    main: {\n      list: [],\n      is_last: false,\n      page: 1,\n      filter: 'likeNum'\n    },\n    detail: {},\n    parent_comment: {\n      list: [],\n      is_last: false,\n      page: 1\n    },\n    loading: {\n      main_loading: true,\n      detail_loading: true\n    }\n  },\n  reducers: {\n    // Trilog 메인 페이지 - 내용 로딩 여부\n    setMainLoading: (state, action) => produce(state, draft => {\n      draft.loading.main_loading = action.payload;\n    }),\n    // Trilog 상세 페이지 - 내용 로딩 여부\n    setDetailLoading: (state, action) => produce(state, draft => {\n      draft.loading.detail_loading = action.payload;\n    }),\n    // Trilog 메인 페이지 - 무한 스크롤 더 가져오기\n    setTrilogMainAdd: (state, action) => produce(state, draft => {\n      draft.main.list = [...draft.main.list, ...action.payload.results];\n      draft.main.is_last = action.payload.last;\n    }),\n    // Trilog 수정 페이지 - 게시글 수정\n    setTrilogMainEdit: (state, action) => produce(state, draft => {\n      if (draft.main.list.length > 0) {\n        let idx = draft.main.list.findIndex(e => e.information.id === parseInt(action.payload.id));\n        draft.main.list[idx].information.title = action.payload.title;\n        draft.main.list[idx].information.address = action.payload.address;\n        draft.main.list[idx].information.description = action.payload.description;\n\n        if (action.payload.imageUrlList.length !== 0) {\n          draft.main.list[idx].information.thumbNailUrl = action.payload.imageUrlList[0].imageFilePath;\n        } else {\n          draft.main.list[idx].information.thumbNailUrl = '';\n        }\n      }\n    }),\n    // Trilog 메인 페이지 - 게시글 조회\n    setTrilogMain: (state, action) => produce(state, draft => {\n      draft.main.list = action.payload.results;\n      draft.main.is_last = action.payload.last;\n    }),\n    // Trilog 메인 페이지 - 필터 설정\n    setTrilogMainFilter: (state, action) => produce(state, draft => {\n      draft.main.filter = action.payload;\n    }),\n    // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\n    setTrilogMainPage: (state, action) => produce(state, draft => {\n      draft.main.page = action.payload;\n    }),\n    // Trilog 메인 페이지 - 게시글 좋아요\n    setTrilogLike: (state, action) => produce(state, draft => {\n      let idx = draft.main.list.findIndex(e => e.information.id === action.payload);\n      draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\n\n      if (draft.main.list[idx].member.isLike) {\n        draft.main.list[idx].information.likeNum += 1;\n      } else {\n        draft.main.list[idx].information.likeNum -= 1;\n      }\n    }),\n    // Trilog 상세 페이지 - 게시물 삭제\n    removeTrilogDetail: (state, action) => produce(state, draft => {\n      draft.main.list = draft.main.list.filter(e => e.information.id !== parseInt(action.payload));\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\n    setTrilogParentCommentPage: (state, action) => produce(state, draft => {\n      draft.parent_comment.page = action.payload;\n    }),\n    // Trilog 상세 페이지 - 해당 게시글 조회\n    setTrilogDetail: (state, action) => produce(state, draft => {\n      draft.detail = action.payload.results;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 조회\n    setTrilogParentComment: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = action.payload.results;\n      draft.parent_comment.is_last = action.payload.last;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\n    addTrilogParentCommentScroll: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\n      draft.parent_comment.is_last = action.payload.last;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 수정\n    editTrilogParentComment: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload.results.commentParent.id);\n      draft.parent_comment.list[idx].commentParent.contents = action.payload.results.commentParent.contents;\n      draft.parent_comment.list[idx].commentParent.createdAt = action.payload.results.commentParent.createdAt;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 삭제\n    removeTrilogParentComment: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload);\n      draft.parent_comment.list.splice(idx, 1);\n    }),\n    // Trilog 상세 페이지 - 게시글 좋아요\n    setTrilogDetailLike: (state, action) => produce(state, draft => {\n      if (draft.detail.member.isLike) {\n        draft.detail.information.likeNum -= 1;\n      } else {\n        draft.detail.information.likeNum += 1;\n      }\n\n      draft.detail.member.isLike = !draft.detail.member.isLike;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 작성\n    addTrilogParentComment: (state, action) => produce(state, draft => {\n      draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\n      draft.detail.information.commentNum += 1;\n    }),\n    // Trilog 상세 페이지 - 부모 댓글 좋아요\n    setTrilogParentCommentLike: (state, action) => produce(state, draft => {\n      let idx = draft.parent_comment.list.findIndex(e => e.commentParent.id === action.payload);\n\n      if (draft.parent_comment.list[idx].user.isLike) {\n        draft.parent_comment.list[idx].commentParent.likeNum -= 1;\n        draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\n      } else {\n        draft.parent_comment.list[idx].commentParent.likeNum += 1;\n        draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\n      }\n    })\n  }\n}); // Trilog 메인 게시물 조회\n\nconst getTrilogMain = (filter, keyword) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    dispatch(setMainLoading(true));\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = getState().trilog.main.page;\n    fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (page === 1) {\n        dispatch(setTrilogMain(data));\n      } else {\n        dispatch(setTrilogMainAdd(data));\n      }\n\n      if (!data.last) {\n        dispatch(setTrilogMainPage(page + 1));\n      } else {\n        dispatch(setTrilogMainPage(1));\n      }\n    }).catch(err => console.log(err, \"메인 error\"));\n    dispatch(setMainLoading(false));\n  };\n}; // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\n\n\nconst getTrilogMainFilter = (filter, keyword) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    dispatch(setMainLoading(true));\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = 1;\n    fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (page === 1) {\n        dispatch(setTrilogMain(data));\n      } else {\n        dispatch(setTrilogMainAdd(data));\n      }\n\n      if (!data.last) {\n        dispatch(setTrilogMainPage(page + 1));\n      } else {\n        dispatch(setTrilogMainPage(1));\n      }\n    }).catch(err => console.log(err, \"메인 필터 error\"));\n    dispatch(setMainLoading(false));\n    dispatch(setTrilogMainFilter(filter));\n  };\n}; // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\n\n\nconst getTrilogMainMyPage = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/boards/member`;\n    fetch(api, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(setTrilogMain(data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 좋아요한 게시물 조회\n\n\nconst getTrilogMainMyPageLike = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/boards/member/like`;\n    fetch(api, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      dispatch(setTrilogMain(data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // Trilog 게시물 상세 조회\n\n\nconst getTrilogDetail = id => {\n  return async function (dispatch, getState, {\n    history\n  }) {\n    dispatch(setDetailLoading(true));\n    const page = getState().trilog.parent_comment.page;\n    const access_token = localStorage.getItem(\"access_token\");\n    const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => data).catch(err => console.log(err, 'trilog detail'));\n    const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (!data.last) {\n        dispatch(setTrilogParentCommentPage(page + 1));\n      } else {\n        dispatch(setTrilogParentCommentPage(1));\n      }\n\n      return data;\n    }).catch(err => console.log(err, 'trilog parent comment'));\n    dispatch(setTrilogDetail(detail));\n    dispatch(setTrilogParentComment(comment));\n    dispatch(setDetailLoading(false));\n  };\n}; // Trilog 메인 게시물 등록\n\n\nconst addTrilog = trilog => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const filter = getState().trilog.main.filter;\n    const access_token = localStorage.getItem(\"access_token\");\n\n    if (trilog.is_edit) {\n      fetch(`${config}/api/boards/${trilog.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        },\n        body: JSON.stringify({\n          title: trilog.title,\n          address: trilog.address,\n          description: trilog.description,\n          imageUrlList: trilog.imageUrlList\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.status === 401) {\n          Swal.fire({\n            title: \"로그인\",\n            text: \"로그인을 먼저 해주세요.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"로그인하기\",\n            cancelButtonText: \"닫기\"\n          }).then(result => {\n            if (result.isConfirmed) {\n              history.push(\"/login\");\n            }\n          });\n        } else if (data.status === 200) {\n          Swal.fire({\n            title: data.msg,\n            icon: \"success\"\n          });\n          window.scrollTo(0, 0);\n          dispatch(setTrilogMainEdit(trilog));\n          history.push('/trilog');\n        } else {\n          Swal.fire({\n            title: data.msg,\n            icon: \"warning\"\n          });\n        }\n      }).catch(err => console.log(err, 'Trilog Edit'));\n    } else {\n      fetch(`${config}/api/boards/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `${access_token}`\n        },\n        body: JSON.stringify({\n          title: trilog.title,\n          address: trilog.address,\n          description: trilog.description,\n          imageUrlList: trilog.imageUrlList\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.status === 401) {\n          Swal.fire({\n            title: \"로그인\",\n            text: \"로그인을 먼저 해주세요.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"로그인하기\",\n            cancelButtonText: \"닫기\"\n          }).then(result => {\n            if (result.isConfirmed) {\n              history.push(\"/login\");\n            }\n          });\n        } else if (data.status === 200) {\n          Swal.fire({\n            title: data.msg,\n            icon: \"success\",\n            showCancelButton: false,\n            confirmButtonColor: \"#3085d6\",\n            confirmButtonText: \"확인\"\n          }).then(result => {\n            if (result.isConfirmed && data.subMsg !== \"no change\") {\n              Swal.fire({\n                title: \"🎉축하드려요🎉\",\n                html: `🥳 당신의 등급은 ${data.subMsg}! <br/> 등급이 궁금하다면 마이페이지에 가보세요!`,\n                icon: \"success\"\n              });\n            }\n          });\n          window.scrollTo(0, 0);\n          dispatch(setTrilogMainPage(1));\n          dispatch(setTrilogMainFilter(\"likeNum\"));\n          dispatch(getTrilogMain(\"likeNum\", \"\"));\n          history.push('/trilog');\n        } else {\n          Swal.fire({\n            title: data.msg,\n            icon: \"warning\"\n          });\n        }\n      }).catch(err => console.log(err, 'Trilog Add'));\n    }\n  };\n}; // Trilog 메인 게시물 삭제\n\n\nconst removeTrilog = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else if (data.status === 200) {\n        dispatch(removeTrilogDetail(id));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n        history.replace('/trilog');\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => console.log(err, 'Trilog Delete'));\n  };\n}; // Trilog 메인 게시물 좋아요\n\n\nconst setLikeTrilog = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/like/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else {\n        dispatch(setTrilogLike(id));\n      }\n    }).catch(err => console.log(err, 'trilog like'));\n  };\n}; // Trilog 상세 게시물 좋아요\n\n\nconst setLikeTrilogDetail = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/like/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else {\n        dispatch(setTrilogDetailLike());\n      }\n    }).catch(err => console.log(err, 'trilog detail like'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 더 보기\n\n\nconst getParentCommentScroll = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const page = getState().trilog.parent_comment.page;\n    fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else if (data.status === 200) {\n        if (!data.last) {\n          dispatch(setTrilogParentCommentPage(page + 1));\n        } else {\n          dispatch(setTrilogParentCommentPage(1));\n        }\n\n        dispatch(addTrilogParentCommentScroll(data));\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => console.log(err, \"parent comment scroll error\"));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 추가\n\n\nconst addParentComment = (id, contents) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: contents\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else if (data.status === 200) {\n        dispatch(addTrilogParentComment(data));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => console.log(err, 'add comment trilog'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 수정\n\n\nconst editParentComment = (id, contents) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      },\n      body: JSON.stringify({\n        contents: contents\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else if (data.status === 200) {\n        dispatch(editTrilogParentComment(data));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => console.log(err, 'edit comment trilog'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 삭제\n\n\nconst removeParentComment = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    fetch(`${config}/api/boards/comments/parents/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else if (data.status === 200) {\n        dispatch(removeTrilogParentComment(id));\n        Swal.fire({\n          title: data.msg,\n          icon: \"success\"\n        });\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => console.log(err, 'remove comment trilog'));\n  };\n}; // Trilog 상세 게시물 - 부모 댓글 좋아요\n\n\nconst setParentCommentLike = id => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    const api = `${config}/api/boards/comments/parents/like/${id}`;\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `${access_token}`\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 401) {\n        Swal.fire({\n          title: \"로그인\",\n          text: \"로그인을 먼저 해주세요.\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"로그인하기\",\n          cancelButtonText: \"닫기\"\n        }).then(result => {\n          if (result.isConfirmed) {\n            history.push(\"/login\");\n          }\n        });\n      } else if (data.status === 200) {\n        dispatch(setTrilogParentCommentLike(id));\n      } else {\n        Swal.fire({\n          title: data.msg,\n          icon: \"warning\"\n        });\n      }\n    }).catch(err => console.log(err, 'comment like'));\n  };\n};\n\nconst actionCreators = {\n  getTrilogMain,\n  // Trilog 메인 게시물 조회\n  getTrilogMainFilter,\n  // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\n  getTrilogMainMyPage,\n  // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\n  getTrilogMainMyPageLike,\n  // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 좋아요한 게시물 조회\n  getTrilogDetail,\n  // Trilog 게시물 상세 조회\n  addTrilog,\n  // Trilog 메인 게시물 등록\n  removeTrilog,\n  // Trilog 메인 게시물 삭제\n  setLikeTrilog,\n  // Trilog 메인 게시물 좋아요\n  setLikeTrilogDetail,\n  // Trilog 상세 게시물 좋아요\n  getParentCommentScroll,\n  // Trilog 상세 게시물 - 부모 댓글 더 보기\n  addParentComment,\n  // Trilog 상세 게시물 - 부모 댓글 추가\n  editParentComment,\n  // Trilog 상세 게시물 - 부모 댓글 수정\n  removeParentComment,\n  // Trilog 상세 게시물 - 부모 댓글 삭제\n  setParentCommentLike // Trilog 상세 게시물 - 부모 댓글 좋아요\n\n};\nexport const {\n  setMainLoading,\n  // Trilog 메인 페이지 - 내용 로딩 여부\n  setDetailLoading,\n  // Trilog 상세 페이지 - 내용 로딩 여부\n  setTrilogMainAdd,\n  // Trilog 메인 페이지 - 무한 스크롤 더 가져오기\n  setTrilogMainEdit,\n  // Trilog 수정 페이지 - 게시글 수정\n  setTrilogMain,\n  // Trilog 메인 페이지 - 게시글 조회\n  setTrilogMainFilter,\n  // Trilog 메인 페이지 - 필터 설정\n  setTrilogMainPage,\n  // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\n  setTrilogLike,\n  // Trilog 메인 페이지 - 게시글 좋아요\n  removeTrilogDetail,\n  // Trilog 상세 페이지 - 게시물 삭제\n  setTrilogParentCommentPage,\n  // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\n  setTrilogDetail,\n  // Trilog 상세 페이지 - 해당 게시글 조회\n  setTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 조회\n  addTrilogParentCommentScroll,\n  // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\n  editTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 수정\n  removeTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 삭제\n  setTrilogDetailLike,\n  // Trilog 상세 페이지 - 게시글 좋아요\n  addTrilogParentComment,\n  // Trilog 상세 페이지 - 부모 댓글 작성\n  setTrilogParentCommentLike // Trilog 상세 페이지 - 부모 댓글 좋아요\n\n} = trilogSlice.actions;\nexport default trilogSlice.reducer;\nexport { actionCreators };","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trilog.js"],"names":["createSlice","produce","config","Swal","trilogSlice","name","initialState","main","list","is_last","page","filter","detail","parent_comment","loading","main_loading","detail_loading","reducers","setMainLoading","state","action","draft","payload","setDetailLoading","setTrilogMainAdd","results","last","setTrilogMainEdit","length","idx","findIndex","e","information","id","parseInt","title","address","description","imageUrlList","thumbNailUrl","imageFilePath","setTrilogMain","setTrilogMainFilter","setTrilogMainPage","setTrilogLike","member","isLike","likeNum","removeTrilogDetail","setTrilogParentCommentPage","setTrilogDetail","setTrilogParentComment","addTrilogParentCommentScroll","editTrilogParentComment","commentParent","contents","createdAt","removeTrilogParentComment","splice","setTrilogDetailLike","addTrilogParentComment","commentNum","setTrilogParentCommentLike","user","getTrilogMain","keyword","dispatch","getState","history","access_token","localStorage","getItem","trilog","fetch","method","headers","then","res","json","data","catch","err","console","log","getTrilogMainFilter","getTrilogMainMyPage","api","Accept","Authorization","getTrilogMainMyPageLike","getTrilogDetail","comment","addTrilog","is_edit","body","JSON","stringify","status","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","push","msg","window","scrollTo","subMsg","html","removeTrilog","replace","setLikeTrilog","setLikeTrilogDetail","getParentCommentScroll","addParentComment","editParentComment","removeParentComment","setParentCommentLike","actionCreators","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { produce } from 'immer'; // 불변성 유지\r\nimport { config } from \"./config\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* Trilog - 트릴로그 */\r\nconst trilogSlice = createSlice({\r\n    name : \"trilog\",\r\n    initialState : {\r\n        main : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1,\r\n            filter : 'likeNum',\r\n        },\r\n        detail : {},\r\n        parent_comment : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1\r\n        },\r\n        loading : {\r\n            main_loading : true,\r\n            detail_loading : true,\r\n        }\r\n    },\r\n    reducers: {\r\n        // Trilog 메인 페이지 - 내용 로딩 여부\r\n        setMainLoading : (state, action) => produce(state, (draft) => {\r\n            draft.loading.main_loading = action.payload;\r\n        }),\r\n        // Trilog 상세 페이지 - 내용 로딩 여부\r\n        setDetailLoading : (state, action) => produce(state, (draft) => {\r\n            draft.loading.detail_loading = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 무한 스크롤 더 가져오기\r\n        setTrilogMainAdd : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = [...draft.main.list, ...action.payload.results];\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 수정 페이지 - 게시글 수정\r\n        setTrilogMainEdit : (state, action) => produce(state, (draft) => {\r\n            if(draft.main.list.length > 0) {\r\n                let idx = draft.main.list.findIndex((e) => e.information.id === parseInt(action.payload.id));\r\n                draft.main.list[idx].information.title = action.payload.title;\r\n                draft.main.list[idx].information.address = action.payload.address;\r\n                draft.main.list[idx].information.description = action.payload.description;\r\n    \r\n                if(action.payload.imageUrlList.length !== 0) {\r\n                    draft.main.list[idx].information.thumbNailUrl = action.payload.imageUrlList[0].imageFilePath;\r\n                } else {\r\n                    draft.main.list[idx].information.thumbNailUrl = '';\r\n                }\r\n            }\r\n        }),\r\n        // Trilog 메인 페이지 - 게시글 조회\r\n        setTrilogMain : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = action.payload.results;\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 메인 페이지 - 필터 설정\r\n        setTrilogMainFilter : (state, action) => produce(state, (draft) => {\r\n            draft.main.filter = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\r\n        setTrilogMainPage : (state, action) => produce(state, (draft) => {\r\n            draft.main.page = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 게시글 좋아요\r\n        setTrilogLike : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.main.list.findIndex((e) => e.information.id === action.payload);\r\n            draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\r\n            if(draft.main.list[idx].member.isLike) {\r\n                draft.main.list[idx].information.likeNum += 1;\r\n            } else {\r\n                draft.main.list[idx].information.likeNum -= 1;\r\n            }\r\n        }),\r\n        // Trilog 상세 페이지 - 게시물 삭제\r\n        removeTrilogDetail : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = draft.main.list.filter((e) => e.information.id !== parseInt(action.payload));\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\r\n        setTrilogParentCommentPage : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.page = action.payload;\r\n        }),\r\n        // Trilog 상세 페이지 - 해당 게시글 조회\r\n        setTrilogDetail : (state, action) => produce(state, (draft) => {\r\n            draft.detail = action.payload.results;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 조회\r\n        setTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = action.payload.results;\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\r\n        addTrilogParentCommentScroll : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 수정\r\n        editTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload.results.commentParent.id);\r\n            draft.parent_comment.list[idx].commentParent.contents = action.payload.results.commentParent.contents;\r\n            draft.parent_comment.list[idx].commentParent.createdAt = action.payload.results.commentParent.createdAt;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 삭제\r\n        removeTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            draft.parent_comment.list.splice(idx, 1);\r\n        }),\r\n        // Trilog 상세 페이지 - 게시글 좋아요\r\n        setTrilogDetailLike : (state, action) => produce(state, (draft) => {\r\n            if(draft.detail.member.isLike){\r\n                draft.detail.information.likeNum -= 1;\r\n            } else {\r\n                draft.detail.information.likeNum += 1;\r\n            }\r\n            \r\n            draft.detail.member.isLike = !draft.detail.member.isLike;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 작성\r\n        addTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\r\n            draft.detail.information.commentNum += 1;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 좋아요\r\n        setTrilogParentCommentLike: (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            if(draft.parent_comment.list[idx].user.isLike){\r\n                draft.parent_comment.list[idx].commentParent.likeNum -= 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            } else {\r\n                draft.parent_comment.list[idx].commentParent.likeNum += 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            }\r\n        }),\r\n    },\r\n});\r\n\r\n// Trilog 메인 게시물 조회\r\nconst getTrilogMain = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        dispatch(setMainLoading(true));\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.main.page;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 error\"));\r\n        dispatch(setMainLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 조회 - 필터 및 검색 적용시\r\nconst getTrilogMainFilter = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        dispatch(setMainLoading(true));\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = 1;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 필터 error\"));\r\n\r\n        dispatch(setMainLoading(false));\r\n        dispatch(setTrilogMainFilter(filter));\r\n    };\r\n};\r\n\r\n// Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\r\nconst getTrilogMainMyPage = () => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/member`;\r\n    \r\n        fetch(api, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization: `${access_token}`,\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            dispatch(setTrilogMain(data));\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n};\r\n\r\n// Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 좋아요한 게시물 조회\r\nconst getTrilogMainMyPageLike = () => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/member/like`;\r\n    \r\n        fetch(api, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization: `${access_token}`,\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            dispatch(setTrilogMain(data));\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n};\r\n\r\n// Trilog 게시물 상세 조회\r\nconst getTrilogDetail = (id) => {\r\n    return async function (dispatch, getState, { history }) {\r\n        dispatch(setDetailLoading(true));\r\n        const page = getState().trilog.parent_comment.page;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n        .catch(err => console.log(err, 'trilog detail'));\r\n\r\n        const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(!data.last) {\r\n                dispatch(setTrilogParentCommentPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogParentCommentPage(1));\r\n            }\r\n            return data;\r\n        })\r\n        .catch(err => console.log(err, 'trilog parent comment'));\r\n\r\n        dispatch(setTrilogDetail(detail));\r\n        dispatch(setTrilogParentComment(comment));\r\n        dispatch(setDetailLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 등록\r\nconst addTrilog = (trilog) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const filter = getState().trilog.main.filter;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        if(trilog.is_edit) {\r\n            fetch(`${config}/api/boards/${trilog.id}`, {\r\n                method: 'PUT',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.status === 401) {\r\n                    Swal.fire({\r\n                        title: \"로그인\",\r\n                        text: \"로그인을 먼저 해주세요.\",\r\n                        icon: \"warning\",\r\n                        showCancelButton: true,\r\n                        confirmButtonColor: \"#3085d6\",\r\n                        cancelButtonColor: \"#d33\",\r\n                        confirmButtonText: \"로그인하기\",\r\n                        cancelButtonText: \"닫기\",\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            history.push(\"/login\");\r\n                        }\r\n                    });\r\n                } else if(data.status === 200) {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"success\",\r\n                    });\r\n                    window.scrollTo(0, 0);\r\n                    dispatch(setTrilogMainEdit(trilog));\r\n                    history.push('/trilog');\r\n                } else {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Edit'))\r\n        } else {\r\n            fetch(`${config}/api/boards/`, {\r\n                method: 'POST',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.status === 401) {\r\n                    Swal.fire({\r\n                        title: \"로그인\",\r\n                        text: \"로그인을 먼저 해주세요.\",\r\n                        icon: \"warning\",\r\n                        showCancelButton: true,\r\n                        confirmButtonColor: \"#3085d6\",\r\n                        cancelButtonColor: \"#d33\",\r\n                        confirmButtonText: \"로그인하기\",\r\n                        cancelButtonText: \"닫기\",\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            history.push(\"/login\");\r\n                        }\r\n                    });\r\n                } else if(data.status === 200) {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"success\",\r\n                        showCancelButton: false,\r\n                        confirmButtonColor: \"#3085d6\",\r\n                        confirmButtonText: \"확인\"\r\n                    }).then((result) => {\r\n                        if(result.isConfirmed && data.subMsg !== \"no change\") {\r\n                            Swal.fire({\r\n                                title: \"🎉축하드려요🎉\",\r\n                                html: `🥳 당신의 등급은 ${data.subMsg}! <br/> 등급이 궁금하다면 마이페이지에 가보세요!`,\r\n                                icon: \"success\"\r\n                            })\r\n                        }\r\n                    });\r\n                    window.scrollTo(0, 0);\r\n                    dispatch(setTrilogMainPage(1));\r\n                    dispatch(setTrilogMainFilter(\"likeNum\"));\r\n                    dispatch(getTrilogMain(\"likeNum\", \"\"));\r\n                    history.push('/trilog');\r\n                } else {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Add'))\r\n        }\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 삭제\r\nconst removeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(removeTrilogDetail(id));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n                history.replace('/trilog');\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'Trilog Delete'))\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 좋아요\r\nconst setLikeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else {\r\n                dispatch(setTrilogLike(id));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog like'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 좋아요\r\nconst setLikeTrilogDetail = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else {\r\n                dispatch(setTrilogDetailLike());\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog detail like'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 더 보기\r\nconst getParentCommentScroll = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.parent_comment.page;\r\n        fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                if(!data.last) {\r\n                    dispatch(setTrilogParentCommentPage(page + 1));\r\n                } else {\r\n                    dispatch(setTrilogParentCommentPage(1));\r\n                }\r\n    \r\n                dispatch(addTrilogParentCommentScroll(data));\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"parent comment scroll error\"));\r\n    }\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 추가\r\nconst addParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(addTrilogParentComment(data));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err, 'add comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 수정\r\nconst editParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(editTrilogParentComment(data));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'edit comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 삭제\r\nconst removeParentComment = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(removeTrilogParentComment(id));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'remove comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 좋아요\r\nconst setParentCommentLike = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/comments/parents/like/${id}`;\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(setTrilogParentCommentLike(id));\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'comment like'));\r\n    };\r\n};\r\n\r\n\r\nconst actionCreators = {\r\n    getTrilogMain, // Trilog 메인 게시물 조회\r\n    getTrilogMainFilter, // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\r\n    getTrilogMainMyPage, // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\r\n    getTrilogMainMyPageLike, // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 좋아요한 게시물 조회\r\n    getTrilogDetail, // Trilog 게시물 상세 조회\r\n    addTrilog, // Trilog 메인 게시물 등록\r\n    removeTrilog, // Trilog 메인 게시물 삭제\r\n    setLikeTrilog, // Trilog 메인 게시물 좋아요\r\n    setLikeTrilogDetail, // Trilog 상세 게시물 좋아요\r\n    getParentCommentScroll, // Trilog 상세 게시물 - 부모 댓글 더 보기\r\n    addParentComment, // Trilog 상세 게시물 - 부모 댓글 추가\r\n    editParentComment, // Trilog 상세 게시물 - 부모 댓글 수정\r\n    removeParentComment, // Trilog 상세 게시물 - 부모 댓글 삭제\r\n    setParentCommentLike, // Trilog 상세 게시물 - 부모 댓글 좋아요\r\n};\r\n\r\nexport const { \r\n    setMainLoading, // Trilog 메인 페이지 - 내용 로딩 여부\r\n    setDetailLoading, // Trilog 상세 페이지 - 내용 로딩 여부\r\n    setTrilogMainAdd, // Trilog 메인 페이지 - 무한 스크롤 더 가져오기\r\n    setTrilogMainEdit, // Trilog 수정 페이지 - 게시글 수정\r\n    setTrilogMain, // Trilog 메인 페이지 - 게시글 조회\r\n    setTrilogMainFilter, // Trilog 메인 페이지 - 필터 설정\r\n    setTrilogMainPage, // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\r\n    setTrilogLike, // Trilog 메인 페이지 - 게시글 좋아요\r\n    removeTrilogDetail, // Trilog 상세 페이지 - 게시물 삭제\r\n    setTrilogParentCommentPage, // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\r\n    setTrilogDetail, // Trilog 상세 페이지 - 해당 게시글 조회\r\n    setTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 조회\r\n    addTrilogParentCommentScroll, // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\r\n    editTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 수정\r\n    removeTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 삭제\r\n    setTrilogDetailLike, // Trilog 상세 페이지 - 게시글 좋아요\r\n    addTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 작성\r\n    setTrilogParentCommentLike, // Trilog 상세 페이지 - 부모 댓글 좋아요\r\n} = trilogSlice.actions;\r\nexport default trilogSlice.reducer;\r\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}