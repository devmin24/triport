{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { produce } from \"immer\"; // http://13.209.8.146\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    email: \"\",\n    password: \"\",\n    ok: true\n  },\n  reducers: {\n    SET_USER: (state, action) => produce(state, draft => {\n      state.user = action.payload;\n    })\n  }\n}); // 로그인 여부 체크\n\nconst loginCheckDB = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const one_user = {\n      email: \"\",\n      password: \"\"\n    };\n    dispatch(SET_USER(one_user));\n  };\n}; // 회원가입\n\n\nconst signupDB = (email, pwd, pwdcheck, nickname) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const API = \"http://13.209.8.146/auth/signup\";\n    fetch(API, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pwd,\n        passwordCheck: pwdcheck,\n        nickname: nickname\n      })\n    }).then(() => {\n      console.log(\"회원가입 성공\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst actionCreators = {\n  loginCheckDB,\n  signupDB\n};\nexport const {\n  SET_USER\n} = userSlice.actions;\nexport default userSlice.reducer;\nexport { actionCreators };","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/user.js"],"names":["createSlice","produce","userSlice","name","initialState","email","password","ok","reducers","SET_USER","state","action","draft","user","payload","loginCheckDB","dispatch","getState","history","one_user","signupDB","pwd","pwdcheck","nickname","API","fetch","method","headers","Accept","body","JSON","stringify","passwordCheck","then","console","log","catch","err","actionCreators","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,EAAE,EAAE;AAHQ,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KACRV,OAAO,CAACS,KAAD,EAASE,KAAD,IAAW;AACxBF,MAAAA,KAAK,CAACG,IAAN,GAAaF,MAAM,CAACG,OAApB;AACD,KAFM;AAFD;AAPkB,CAAD,CAA7B,C,CAeA;;AACA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAA2C;AAChD,UAAMC,QAAQ,GAAG;AACfd,MAAAA,KAAK,EAAE,EADQ;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAjB;AAIAU,IAAAA,QAAQ,CAACP,QAAQ,CAACU,QAAD,CAAT,CAAR;AACD,GAND;AAOD,CARD,C,CAUA;;;AACA,MAAMC,QAAQ,GAAG,CAACf,KAAD,EAAQgB,GAAR,EAAaC,QAAb,EAAuBC,QAAvB,KAAoC;AACnD,SAAO,UAAUP,QAAV,EAAoBC,QAApB,EAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAA2C;AAChD,UAAMM,GAAG,GAAG,iCAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFA;AAMTC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB1B,QAAAA,KAAK,EAAEA,KADY;AAEnBC,QAAAA,QAAQ,EAAEe,GAFS;AAGnBW,QAAAA,aAAa,EAAEV,QAHI;AAInBC,QAAAA,QAAQ,EAAEA;AAJS,OAAf;AANG,KAAN,CAAL,CAaGU,IAbH,CAaQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAfH,EAgBGC,KAhBH,CAgBUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAlBH;AAmBD,GArBD;AAsBD,CAvBD;;AAyBA,MAAMC,cAAc,GAAG;AACrBvB,EAAAA,YADqB;AAErBK,EAAAA;AAFqB,CAAvB;AAKA,OAAO,MAAM;AAAEX,EAAAA;AAAF,IAAeP,SAAS,CAACqC,OAA/B;AACP,eAAerC,SAAS,CAACsC,OAAzB;AAEA,SAASF,cAAT","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { produce } from \"immer\";\n\n// http://13.209.8.146\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    email: \"\",\n    password: \"\",\n    ok: true,\n  },\n  reducers: {\n    SET_USER: (state, action) =>\n      produce(state, (draft) => {\n        state.user = action.payload;\n      }),\n  },\n});\n\n// 로그인 여부 체크\nconst loginCheckDB = () => {\n  return function (dispatch, getState, { history }) {\n    const one_user = {\n      email: \"\",\n      password: \"\",\n    };\n    dispatch(SET_USER(one_user));\n  };\n};\n\n// 회원가입\nconst signupDB = (email, pwd, pwdcheck, nickname) => {\n  return function (dispatch, getState, { history }) {\n    const API = \"http://13.209.8.146/auth/signup\";\n    fetch(API, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pwd,\n        passwordCheck: pwdcheck,\n        nickname: nickname,\n      }),\n    })\n      .then(() => {\n        console.log(\"회원가입 성공\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst actionCreators = {\n  loginCheckDB,\n  signupDB,\n};\n\nexport const { SET_USER } = userSlice.actions;\nexport default userSlice.reducer;\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}