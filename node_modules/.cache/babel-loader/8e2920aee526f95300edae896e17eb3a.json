{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst refresh_token = localStorage.getItem(\"refresh_token\");\nconst trilseSlice = createSlice({\n  name: \"trils\",\n  initialState: {\n    data: [],\n    modal: false\n  },\n  reducers: {\n    GET_POST: (state, action) => {\n      console.log(action.payload);\n      state.data = action.payload;\n    }\n  }\n});\n\nconst writepost = (video, tags) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"file\", video);\n    tags.map((p, idx) => formData.append(\"hashtag\", p));\n    const URL = \"http://13.209.8.146/api/posts\";\n    const API = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`\n      },\n      body: formData\n    };\n    fetch(URL, API).then(result => {\n      return result.json();\n    }).then(result => console.log(result)).catch(err => console.log(err));\n  };\n};\n\nconst getPost = token => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const URL = `http://13.209.8.146/api/all/posts?page=1&filter=modifiedAt&keyword=`;\n    const API = {\n      method: \"GET\" // headers: {\n      //   Authorization: `${access_token}`,\n      // },\n\n    };\n    fetch(URL, API).then(result => {\n      return result.json();\n    }).then(result => {\n      console.log(result);\n      dispatch(GET_POST(result.results));\n    }).catch(err => console.log(err));\n  };\n};\n\nexport const {\n  GET_POST\n} = trilseSlice.actions;\nexport const TrilsActions = {\n  writepost,\n  getPost\n};\nexport default trilseSlice.reducer;","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trils.js"],"names":["createSlice","refresh_token","localStorage","getItem","trilseSlice","name","initialState","data","modal","reducers","GET_POST","state","action","console","log","payload","writepost","video","tags","dispatch","getState","history","access_token","formData","FormData","append","map","p","idx","URL","API","method","headers","Authorization","body","fetch","then","result","json","catch","err","getPost","token","results","actions","TrilsActions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB;AAEA,MAAMC,WAAW,GAAGJ,WAAW,CAAC;AAC9BK,EAAAA,IAAI,EAAE,OADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFgB;AAM9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACAJ,MAAAA,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACG,OAApB;AACD;AAJO;AANoB,CAAD,CAA/B;;AAcA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACjC,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAA2C;AAChD,UAAMC,YAAY,GAAGpB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;AACA,QAAIoB,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBR,KAAxB;AACAC,IAAAA,IAAI,CAACQ,GAAL,CAAS,CAACC,CAAD,EAAIC,GAAJ,KAAYL,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BE,CAA3B,CAArB;AACA,UAAME,GAAG,GAAG,+BAAZ;AACA,UAAMC,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,GAAEX,YAAa;AADxB,OAFC;AAKVY,MAAAA,IAAI,EAAEX;AALI,KAAZ;AAOAY,IAAAA,KAAK,CAACN,GAAD,EAAMC,GAAN,CAAL,CACGM,IADH,CACSC,MAAD,IAAY;AAChB,aAAOA,MAAM,CAACC,IAAP,EAAP;AACD,KAHH,EAIGF,IAJH,CAISC,MAAD,IAAYxB,OAAO,CAACC,GAAR,CAAYuB,MAAZ,CAJpB,EAKGE,KALH,CAKUC,GAAD,IAAS3B,OAAO,CAACC,GAAR,CAAY0B,GAAZ,CALlB;AAMD,GAnBD;AAoBD,CArBD;;AAuBA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,SAAO,UAAUvB,QAAV,EAAoBC,QAApB,EAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAA2C;AAChD,UAAMQ,GAAG,GAAI,qEAAb;AACA,UAAMC,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,KADE,CAEV;AACA;AACA;;AAJU,KAAZ;AAMAI,IAAAA,KAAK,CAACN,GAAD,EAAMC,GAAN,CAAL,CACGM,IADH,CACSC,MAAD,IAAY;AAChB,aAAOA,MAAM,CAACC,IAAP,EAAP;AACD,KAHH,EAIGF,IAJH,CAISC,MAAD,IAAY;AAChBxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,MAAZ;AACAlB,MAAAA,QAAQ,CAACT,QAAQ,CAAC2B,MAAM,CAACM,OAAR,CAAT,CAAR;AACD,KAPH,EAQGJ,KARH,CAQUC,GAAD,IAAS3B,OAAO,CAACC,GAAR,CAAY0B,GAAZ,CARlB;AASD,GAjBD;AAkBD,CAnBD;;AAqBA,OAAO,MAAM;AAAE9B,EAAAA;AAAF,IAAeN,WAAW,CAACwC,OAAjC;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1B7B,EAAAA,SAD0B;AAE1ByB,EAAAA;AAF0B,CAArB;AAKP,eAAerC,WAAW,CAAC0C,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst refresh_token = localStorage.getItem(\"refresh_token\");\n\nconst trilseSlice = createSlice({\n  name: \"trils\",\n  initialState: {\n    data: [],\n    modal: false,\n  },\n  reducers: {\n    GET_POST: (state, action) => {\n      console.log(action.payload);\n      state.data = action.payload;\n    },\n  },\n});\n\nconst writepost = (video, tags) => {\n  return function (dispatch, getState, { history }) {\n    const access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"file\", video);\n    tags.map((p, idx) => formData.append(\"hashtag\", p));\n    const URL = \"http://13.209.8.146/api/posts\";\n    const API = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${access_token}`,\n      },\n      body: formData,\n    };\n    fetch(URL, API)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => console.log(result))\n      .catch((err) => console.log(err));\n  };\n};\n\nconst getPost = (token) => {\n  return function (dispatch, getState, { history }) {\n    const URL = `http://13.209.8.146/api/all/posts?page=1&filter=modifiedAt&keyword=`;\n    const API = {\n      method: \"GET\",\n      // headers: {\n      //   Authorization: `${access_token}`,\n      // },\n    };\n    fetch(URL, API)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        console.log(result);\n        dispatch(GET_POST(result.results));\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const { GET_POST } = trilseSlice.actions;\n\nexport const TrilsActions = {\n  writepost,\n  getPost,\n};\n\nexport default trilseSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}