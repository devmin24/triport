[{"/Users/parkminkyung/Desktop/git/triport/src/index.js":"1","/Users/parkminkyung/Desktop/git/triport/src/redux/configureStore.js":"2","/Users/parkminkyung/Desktop/git/triport/src/reportWebVitals.js":"3","/Users/parkminkyung/Desktop/git/triport/src/shared/App.js":"4","/Users/parkminkyung/Desktop/git/triport/src/pages/pages.js":"5","/Users/parkminkyung/Desktop/git/triport/src/pages/NotFound.js":"6","/Users/parkminkyung/Desktop/git/triport/src/components/Header.js":"7","/Users/parkminkyung/Desktop/git/triport/src/pages/SignUp.js":"8","/Users/parkminkyung/Desktop/git/triport/src/pages/Login.js":"9","/Users/parkminkyung/Desktop/git/triport/src/pages/BoardMain.js":"10","/Users/parkminkyung/Desktop/git/triport/src/components/components.js":"11","/Users/parkminkyung/Desktop/git/triport/src/pages/Profile.js":"12","/Users/parkminkyung/Desktop/git/triport/src/components/Footer.js":"13","/Users/parkminkyung/Desktop/git/triport/src/media/svg/Svg.js":"14","/Users/parkminkyung/Desktop/git/triport/src/components/ProfileSideBar.js":"15","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/sidebar.js":"16","/Users/parkminkyung/Desktop/git/triport/src/components/ProfileMyPost.js":"17","/Users/parkminkyung/Desktop/git/triport/src/components/ProfileSetting.js":"18","/Users/parkminkyung/Desktop/git/triport/src/components/ProfileLike.js":"19","/Users/parkminkyung/Desktop/git/triport/src/components/Category.js":"20","/Users/parkminkyung/Desktop/git/triport/src/shared/common.js":"21","/Users/parkminkyung/Desktop/git/triport/src/pages/BoardDetail.js":"22","/Users/parkminkyung/Desktop/git/triport/src/pages/BoardWrite.js":"23","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardCard.js":"24","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardView.js":"25","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardComment.js":"26","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardWriteMap.js":"27","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardDetailMap.js":"28","/Users/parkminkyung/Desktop/git/triport/src/pages/Trils.js":"29","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/user.js":"30","/Users/parkminkyung/Desktop/git/triport/src/shared/InfinityScroll.js":"31","/Users/parkminkyung/Desktop/git/triport/src/components/trils/ProgressBar.js":"32","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetail.js":"33","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trils.js":"34","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardChildComment.js":"35","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trilog.js":"36","/Users/parkminkyung/Desktop/git/triport/src/pages/FindPassword.js":"37","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/config.js":"38","/Users/parkminkyung/Desktop/git/triport/src/shared/Spinner2.js":"39","/Users/parkminkyung/Desktop/git/triport/src/pages/TrilsSearch.js":"40","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/profile.js":"41","/Users/parkminkyung/Desktop/git/triport/src/shared/OAuth2RedirectHandler.js":"42","/Users/parkminkyung/Desktop/git/triport/src/shared/OAuth2LogoutHandler.js":"43","/Users/parkminkyung/Desktop/git/triport/src/pages/TrilsWrite.js":"44","/Users/parkminkyung/Desktop/git/triport/src/components/trils/Video.js":"45","/Users/parkminkyung/Desktop/git/triport/src/pages/About.js":"46","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetailTutorial.js":"47","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsTutorial.js":"48","/Users/parkminkyung/Desktop/git/triport/src/shared/TrillsInfinityScroll.js":"49","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetailM.js":"50","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetailTutorialM.js":"51","/Users/parkminkyung/Desktop/git/triport/src/shared/Spinner.js":"52","/Users/parkminkyung/Desktop/git/triport/src/components/PostVideo.js":"53","/Users/parkminkyung/Desktop/git/triport/src/pages/TrilsMemberPost.js":"54"},{"size":535,"mtime":1619492146302,"results":"55","hashOfConfig":"56"},{"size":928,"mtime":1621702860482,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":1619492146304,"results":"58","hashOfConfig":"56"},{"size":3119,"mtime":1622037842829,"results":"59","hashOfConfig":"56"},{"size":271,"mtime":1621217408817,"results":"60","hashOfConfig":"56"},{"size":1020,"mtime":1620785323508,"results":"61","hashOfConfig":"56"},{"size":15727,"mtime":1622012223055,"results":"62","hashOfConfig":"56"},{"size":11864,"mtime":1622104254035,"results":"63","hashOfConfig":"56"},{"size":5536,"mtime":1622104254034,"results":"64","hashOfConfig":"56"},{"size":7485,"mtime":1621647073069,"results":"65","hashOfConfig":"56"},{"size":462,"mtime":1620696910989,"results":"66","hashOfConfig":"56"},{"size":1113,"mtime":1621602522593,"results":"67","hashOfConfig":"56"},{"size":872,"mtime":1621957647791,"results":"68","hashOfConfig":"56"},{"size":18098,"mtime":1621254352370,"results":"69","hashOfConfig":"56"},{"size":4809,"mtime":1621957647792,"results":"70","hashOfConfig":"56"},{"size":700,"mtime":1619844934700,"results":"71","hashOfConfig":"56"},{"size":4907,"mtime":1621957642439,"results":"72","hashOfConfig":"56"},{"size":10844,"mtime":1622104254033,"results":"73","hashOfConfig":"56"},{"size":4836,"mtime":1621957642439,"results":"74","hashOfConfig":"56"},{"size":2536,"mtime":1621590914877,"results":"75","hashOfConfig":"56"},{"size":557,"mtime":1621674700959,"results":"76","hashOfConfig":"56"},{"size":8421,"mtime":1621603979708,"results":"77","hashOfConfig":"56"},{"size":10663,"mtime":1622012217012,"results":"78","hashOfConfig":"56"},{"size":4350,"mtime":1621603979622,"results":"79","hashOfConfig":"56"},{"size":437,"mtime":1621217351576,"results":"80","hashOfConfig":"56"},{"size":11727,"mtime":1621921427793,"results":"81","hashOfConfig":"56"},{"size":2939,"mtime":1620350526670,"results":"82","hashOfConfig":"56"},{"size":2051,"mtime":1621217408798,"results":"83","hashOfConfig":"56"},{"size":11898,"mtime":1622104361456,"results":"84","hashOfConfig":"56"},{"size":10249,"mtime":1622104254036,"results":"85","hashOfConfig":"56"},{"size":933,"mtime":1620913881027,"results":"86","hashOfConfig":"56"},{"size":762,"mtime":1621858808676,"results":"87","hashOfConfig":"56"},{"size":18162,"mtime":1622104361452,"results":"88","hashOfConfig":"56"},{"size":10839,"mtime":1622104361457,"results":"89","hashOfConfig":"56"},{"size":6841,"mtime":1621921427792,"results":"90","hashOfConfig":"56"},{"size":33043,"mtime":1622012217013,"results":"91","hashOfConfig":"56"},{"size":2693,"mtime":1622104254034,"results":"92","hashOfConfig":"56"},{"size":58,"mtime":1621476081272,"results":"93","hashOfConfig":"56"},{"size":846,"mtime":1620805443574,"results":"94","hashOfConfig":"56"},{"size":10308,"mtime":1622037842825,"results":"95","hashOfConfig":"56"},{"size":9449,"mtime":1622104254036,"results":"96","hashOfConfig":"56"},{"size":520,"mtime":1620913888195,"results":"97","hashOfConfig":"56"},{"size":502,"mtime":1620962114223,"results":"98","hashOfConfig":"56"},{"size":10683,"mtime":1622104361456,"results":"99","hashOfConfig":"56"},{"size":10683,"mtime":1622037842823,"results":"100","hashOfConfig":"56"},{"size":22827,"mtime":1621844074240,"results":"101","hashOfConfig":"56"},{"size":12835,"mtime":1622104361455,"results":"102","hashOfConfig":"56"},{"size":8783,"mtime":1621858808679,"results":"103","hashOfConfig":"56"},{"size":910,"mtime":1621510560999,"results":"104","hashOfConfig":"56"},{"size":17168,"mtime":1622104361453,"results":"105","hashOfConfig":"56"},{"size":15312,"mtime":1622104361455,"results":"106","hashOfConfig":"56"},{"size":1004,"mtime":1621920715274,"results":"107","hashOfConfig":"56"},{"size":10615,"mtime":1621957642438,"results":"108","hashOfConfig":"56"},{"size":10311,"mtime":1622037842824,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"gn3wys",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"112"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"112"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/parkminkyung/Desktop/git/triport/src/index.js",[],["241","242"],"/Users/parkminkyung/Desktop/git/triport/src/redux/configureStore.js",["243","244"],"import { combineReducers, compose } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport trilog from \"redux/modules/trilog\";\r\nimport Sidebar from \"redux/modules/sidebar\";\r\nimport Profile from \"redux/modules/profile\";\r\nimport User from \"redux/modules/user\";\r\nimport Thrils from \"redux/modules/trils\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  trilog: trilog,\r\n  sidebar: Sidebar,\r\n  profile: Profile,\r\n  user: User,\r\n  trils: Thrils,\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [thunk.withExtraArgument({ history: history })],\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","/Users/parkminkyung/Desktop/git/triport/src/reportWebVitals.js",[],"/Users/parkminkyung/Desktop/git/triport/src/shared/App.js",["245","246","247","248","249"],"/Users/parkminkyung/Desktop/git/triport/src/pages/pages.js",[],"/Users/parkminkyung/Desktop/git/triport/src/pages/NotFound.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/Header.js",["250","251","252","253","254"],"import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Logo } from \"media/svg/Svg\";\n\nimport grade1 from \"media/svg/등급1.svg\";\nimport grade2 from \"media/svg/등급2.svg\";\nimport grade3 from \"media/svg/등급3.svg\";\nimport ximage from \"media/image/X.png\";\n\nimport Category from \"components/Category\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const { history } = props;\n\n  const clickRef = useRef();\n\n  const handleMenu = () => {\n    if (clickRef.current.style.display === \"none\") {\n      clickRef.current.style.display = \"block\";\n    } else {\n      clickRef.current.style.display = \"none\";\n    }\n  };\n\n  const user = useSelector((state) => state.user);\n  const profile = useSelector((state) => state.profile);\n\n  const gradeImg = () => {\n    if (user.memberGrade === \"TRAVELER\") {\n      return grade1;\n    }\n    if (user.memberGrade === \"TRAVEL_EDITOR\") {\n      return grade2;\n    }\n    if (user.memberGrade === \"TRAVEL_MASTER\") {\n      return grade3;\n    }\n  };\n\n  // 카카오 로그아웃\n  const KAKAO_LOGOUT_URL =\n    \"https://kauth.kakao.com/oauth/logout?client_id=b30e166ade03d146889e1b012679fcf6&logout_redirect_uri=https://triport.kr/auth/logout\";\n  //\"https://kauth.kakao.com/oauth/logout?client_id=b30e166ade03d146889e1b012679fcf6&logout_redirect_uri=http://localhost:3000/auth/logout\";\n\n  if (user.is_login === true) {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            position: \"sticky\",\n            top: \"0\",\n            zIndex: \"50\",\n            backgroundColor: \"#fff\",\n          }}\n        >\n          {/* 모바일 버전 햄버거메뉴 상세페이지 */}\n          <MobileDiv ref={clickRef}>\n            <div style={{ backgroundColor: \"#FFF\", zIndex: \"9999\" }}>\n              <MenuWrap>\n                <RowWrap>\n                  <div onClick={handleMenu}>\n                    <CancleButton />\n                  </div>\n\n                  <LogoWrapper2>\n                    <Logo />\n                  </LogoWrapper2>\n                </RowWrap>\n                <MenuLine />\n                <MobileName>{profile.nickname}</MobileName>\n                <Category1\n                  onClick={() => {\n                    history.push(\"/\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  Trils\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"trilog\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  Trilog\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"/about\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  About\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"/profile\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  마이페이지\n                </Category1>\n                <Br />\n                <Category1 href={KAKAO_LOGOUT_URL}>로그아웃</Category1>\n                <Br />\n              </MenuWrap>\n            </div>\n          </MobileDiv>\n\n          {/* 모바일 버전 */}\n          <Wrap>\n            <Mobile>\n              <MenuButton onClick={handleMenu}>\n                <Bar></Bar>\n                <Bar></Bar>\n                <Bar></Bar>\n              </MenuButton>\n            </Mobile>\n            <LogoWrapper\n              onClick={() => {\n                const pathname = history.location.pathname;\n                if (pathname === `/`) {\n                  history.replace(`/`);\n                } else {\n                  history.push(`/`);\n                }\n              }}\n            >\n              <Logo />\n            </LogoWrapper>\n            <Mobile>\n              <Image\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n                url={profile.user_img}\n              />\n            </Mobile>\n\n            {/* 데스크탑 버전 */}\n            <LeftWrap>\n              <Category history={history} />\n            </LeftWrap>\n            <RightWrap>\n              <Image\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n                url={profile.user_img}\n              />\n              {/* <Grade url={gradeImg} /> */}\n              <Nickname>{profile.nickname}</Nickname>\n\n              <MyOrLogin\n                onClick={() => {\n                  const pathname = history.location.pathname;\n\n                  if (pathname === \"/profile\") {\n                  } else {\n                    history.push(\"/profile\");\n                  }\n                }}\n              >\n                마이페이지\n              </MyOrLogin>\n\n              {/* 카카오 로그아웃 URL로 이동 -> OAuth2LogoutHandler(카카오 로그아웃, 일반 로그아웃 둘 다 적용) 컴포넌트 로드 */}\n              <LogoutOrSignUp href={KAKAO_LOGOUT_URL}>로그아웃</LogoutOrSignUp>\n            </RightWrap>\n          </Wrap>\n          <Line />\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            position: \"sticky\",\n            top: \"0\",\n            zIndex: \"50\",\n            backgroundColor: \"#fff\",\n          }}\n        >\n          {/* 모바일 버전 햄버거메뉴 상세페이지 */}\n          <MobileDiv ref={clickRef}>\n            <div style={{ backgroundColor: \"#FFF\", zIndex: \"9999\" }}>\n              <MenuWrap>\n                <RowWrap>\n                  <div onClick={handleMenu}>\n                    <CancleButton />\n                  </div>\n\n                  <LogoWrapper2>\n                    <Logo />\n                  </LogoWrapper2>\n                </RowWrap>\n                <MenuLine />\n\n                <Category1\n                  onClick={() => {\n                    history.push(\"/\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  Trils\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"/trilog\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  Trilog\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"/about\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  About\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"/login\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  로그인\n                </Category1>\n                <Br />\n                <Category1\n                  onClick={() => {\n                    history.push(\"/signup\");\n                    clickRef.current.style.display = \"none\";\n                  }}\n                >\n                  회원가입\n                </Category1>\n                <Br />\n              </MenuWrap>\n            </div>\n          </MobileDiv>\n\n          {/* 모바일 버전 */}\n          <Wrap>\n            <Mobile>\n              <MenuButton onClick={handleMenu}>\n                <Bar></Bar>\n                <Bar></Bar>\n                <Bar></Bar>\n              </MenuButton>\n            </Mobile>\n            <LogoWrapper\n              onClick={() => {\n                const pathname = history.location.pathname;\n                if (pathname === \"/\") {\n                  window.location.reload();\n                } else {\n                  history.push(\"/\");\n                }\n              }}\n            >\n              <Logo />\n            </LogoWrapper>\n            <Mobile>\n              <MyOrLogin\n                style={{ marginTop: \"0.5rem\" }}\n                onClick={() => {\n                  const pathname = history.location.pathname;\n                  if (pathname === \"/login\") {\n                    window.location.reload();\n                  } else {\n                    history.push(\"/login\");\n                  }\n                }}\n              >\n                로그인\n              </MyOrLogin>\n            </Mobile>\n\n            {/* 데스크탑 버전 */}\n\n            <LeftWrap>\n              <Category history={history} />\n            </LeftWrap>\n            <RightWrap>\n              <MyOrLogin\n                onClick={() => {\n                  const pathname = history.location.pathname;\n                  if (pathname === \"/login\") {\n                    window.location.reload();\n                  } else {\n                    history.push(\"/login\");\n                  }\n                }}\n              >\n                로그인\n              </MyOrLogin>\n              <LogoutOrSignUp\n                onClick={() => {\n                  const pathname = history.location.pathname;\n                  if (pathname === \"/signup\") {\n                    window.location.reload();\n                  } else {\n                    history.push(\"/signup\");\n                  }\n                }}\n              >\n                회원가입\n              </LogoutOrSignUp>\n            </RightWrap>\n          </Wrap>\n          <Line />\n        </div>\n      </React.Fragment>\n    );\n  }\n};\n\nHeader.defaultProps = {\n  ok: false,\n  nickname: \"닉네임예시\",\n};\n\nexport default Header;\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100vw;\n  margin: 0px;\n  height: 5rem;\n  background-color: #ffffff;\n  background-size: cover;\n  align-items: center;\n`;\n\nconst LeftWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: \"paybooc-Bold\";\n  width: 50% auto;\n  margin: 0px auto;\n  margin-left: 5rem;\n\n  @media (max-width: 980px) {\n    margin-left: 3rem;\n  }\n  @media (max-width: 768px) {\n    margin-left: 2rem;\n  }\n\n  @media (max-width: 600px) {\n    margin-left: 1rem;\n  }\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst RightWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 30% auto;\n  align-items: center;\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst Line = styled.div`\n  width: 100vw;\n  height: 5px;\n  background: #89acff;\n  opacity: 1;\n  margin-bottom: 5rem;\n`;\n\nconst LogoWrapper = styled.div`\n  margin-left: 2rem;\n  cursor: pointer;\n  & svg {\n    width: 12rem;\n  }\n  @media (max-width: 980px) {\n    margin-left: 0.5rem;\n    & svg {\n      width: 8rem;\n    }\n  }\n  @media (max-width: 768px) {\n    margin-left: 0.5rem;\n    & svg {\n      width: 8rem;\n    }\n  }\n  @media (max-width: 600px) {\n    margin-left: 0.5rem;\n    & svg {\n      width: 7rem;\n    }\n  }\n  @media (max-width: 540px) {\n    margin-left: 0.5rem;\n    & svg {\n      width: 8rem;\n      margin-top: 0.5rem;\n    }\n  }\n`;\n\nconst MyOrLogin = styled.button`\n  cursor: pointer;\n  background-color: #2b61e1;\n  color: #ffffff;\n  border: 1px solid #2b61e1;\n  border-radius: 5px;\n  padding: 0.3rem;\n  margin-left: 2rem;\n  margin-right: 1.5rem;\n  width: 5rem;\n  height: 1.7rem;\n\n  @media (max-width: 980px) {\n    font-size: 0.5rem;\n    margin-left: 0.1rem;\n    margin-right: 0.5rem;\n    width: 3.5rem;\n  }\n  @media (max-width: 768px) {\n    font-size: 0.5rem;\n    margin-left: 0.1rem;\n    margin-right: 0.5rem;\n    width: 3.5rem;\n  }\n  @media (max-width: 600px) {\n    font-size: 0.6rem;\n    margin-left: 0.8rem;\n    margin-right: 0.5rem;\n    width: 3.5rem;\n  }\n  @media (max-width: 540px) {\n    font-size: 0.6rem;\n    margin-left: 0.8rem;\n    margin-right: 0.5rem;\n    width: 3.5rem;\n  }\n`;\n\nconst LogoutOrSignUp = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: #ffffff;\n  border: 1px solid #989898;\n  border-radius: 5px;\n  padding: 0.3rem;\n  width: 4.5rem;\n  height: 1rem;\n  margin-right: 2rem;\n  padding-bottom: 0.4rem;\n  font-size: 0.9rem;\n  text-decoration: none;\n  &:visited {\n    color: #5a5a5a;\n  }\n  @media (max-width: 980px) {\n    font-size: 0.5rem;\n    width: 3rem;\n  }\n  @media (max-width: 768px) {\n    font-size: 0.5rem;\n    width: 3rem;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.5rem;\n    width: 3rem;\n    margin-right: 0.5rem;\n  }\n  @media (max-width: 540px) {\n    font-size: 0.5rem;\n    width: 3rem;\n    margin-right: 0rem;\n  }\n`;\n\nconst Nickname = styled.div`\n  width: 5rem;\n  margin-right: 2rem;\n  margin-top: -0.3rem;\n  font-size: 1rem;\n  font-weight: 800;\n  @media (max-width: 768px) {\n    margin-top: 0.1rem;\n    margin-right: 0;\n    font-size: 0.8rem;\n    width: 4rem;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.5rem;\n    width: 3rem;\n  }\n  @media (max-width: 540px) {\n    font-size: 0.7rem;\n    width: 3.5rem;\n  }\n`;\n\nconst Image = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n  border-radius: 1.2rem;\n  border: 1px solid #2b61e1;\n  box-shadow: 0px 3px 6px #00000029;\n  background-position: center;\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  margin-right: 0.5rem;\n\n  @media (max-width: 1270px) {\n    width: 2rem;\n    height: 2rem;\n  }\n  @media (max-width: 768px) {\n    width: 2rem;\n    height: 2rem;\n  }\n  @media (max-width: 540px) {\n    margin: 0px auto;\n    margin-top: 0.3rem;\n  }\n`;\n\nconst Grade = styled.div`\n  width: 1.5rem;\n  height: 1.5rem;\n  background-position: center;\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  margin: 0px auto;\n  margin-top: -0.3rem;\n  margin-right: 0.2rem;\n`;\n\n// 모바일용 반응형\n\nconst Mobile = styled.div`\n  display: none;\n  @media (max-width: 540px) {\n    width: 5rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nconst MenuButton = styled.div`\n  display: none;\n  @media (max-width: 540px) {\n    display: flex;\n    flex-direction: column;\n    width: 3rem;\n    height: auto;\n    margin: 0px auto;\n    margin-top: 0.8rem;\n  }\n`;\n\nconst Bar = styled.div`\n  width: 25px;\n  height: 3px;\n  margin: 0px;\n  margin-bottom: 7px;\n  background-color: #2b61e1;\n  border-radius: 5px;\n`;\n\nconst MobileDiv = styled.div`\n  position: absolute;\n  display: none;\n  height: 100%;\n  background-color: #fff;\n  z-index: 50;\n`;\n\nconst MenuWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  height: 100%;\n  z-index: 999;\n`;\n\nconst RowWrap = styled.div`\n  @media (max-width: 540px) {\n    display: flex;\n    flex-direction: row;\n    width: auto;\n    height: 5rem;\n  }\n`;\n\nconst CancleButton = styled.div`\n  width: 2rem;\n  height: 2rem;\n  background-image: url(${ximage});\n  background-size: cover;\n  margin-top: 1.5rem;\n  margin-left: 1rem;\n`;\n\nconst LogoWrapper2 = styled.div`\n  margin-top: 2rem;\n  margin-left: 10rem;\n  cursor: pointer;\n  & svg {\n    width: 8rem;\n  }\n  @media (max-width: 540px) {\n    margin-left: 5rem;\n  }\n`;\n\nconst MobileName = styled.div`\n  font-family: \"paybooc-Bold\";\n\n  padding: 1rem;\n`;\n\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  padding: 1rem;\n  text-decoration: none;\n`;\n\nconst Br = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #89acff;\n`;\n\nconst MenuLine = styled.div`\n  width: 100vw;\n  height: 5px;\n  background: #89acff;\n  opacity: 1;\n`;\n","/Users/parkminkyung/Desktop/git/triport/src/pages/SignUp.js",[],"/Users/parkminkyung/Desktop/git/triport/src/pages/Login.js",[],"/Users/parkminkyung/Desktop/git/triport/src/pages/BoardMain.js",["255","256"],"import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { history } from \"redux/configureStore\";\r\nimport { Plus } from \"media/svg/Svg\";\r\nimport { BoardCard } from \"components/components\";\r\nimport InfinityScroll from \"shared/InfinityScroll\";\r\nimport { actionCreators as TrilogActions } from \"redux/modules/trilog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Tripper from \"media/image/triport_airplane.png\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst BoardMain = (props) => {\r\n  const dispatch = useDispatch();\r\n  const is_login = useSelector((state) => state.user.is_login); // 로그인 여부\r\n  const trilog = useSelector((state) => state.trilog.main.list); // 게시글 정보\r\n  const is_last = useSelector((state) => state.trilog.main.is_last); // 무한 스크롤 - 다음 게시글이 있나 여부\r\n  const filter_type = useSelector((state) => state.trilog.main.filter); // 필터\r\n  const filterRef = React.useRef(filter_type); // 필터 - 좋아요순, 최신순\r\n  const keyword = React.useRef(); // 검색어\r\n\r\n  /* 필터 기능 - 좋아요순 최신순 */\r\n  const tabToggle = () => {\r\n    const tab = document.getElementById(\"FilterTab\");\r\n    const like = document.getElementById(\"LikeText\");\r\n    const newest = document.getElementById(\"NewestText\");\r\n\r\n    if (filter_type === \"createdAt\") {\r\n      // 좋아요순\r\n      tab.style.left = \"0%\";\r\n      like.style.color = \"#fff\";\r\n      newest.style.color = \"#89ACFF\";\r\n      dispatch(\r\n        TrilogActions.getTrilogMainFilter(\"likeNum\", keyword.current.value)\r\n      );\r\n    } else {\r\n      // 최신순\r\n      tab.style.left = \"50%\";\r\n      like.style.color = \"#89ACFF\";\r\n      newest.style.color = \"#fff\";\r\n      dispatch(\r\n        TrilogActions.getTrilogMainFilter(\"createdAt\", keyword.current.value)\r\n      );\r\n    }\r\n\r\n    filterRef.current = filter_type;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(TrilogActions.getTrilogMain(\"likeNum\", \"\"));\r\n  }, []);\r\n\r\n  const scroll = () => {\r\n    const filter_scroll = filterRef.current;\r\n\r\n    if (filter_scroll === \"likeNum\") {\r\n      // 좋아요순\r\n      dispatch(TrilogActions.getTrilogMain(\"likeNum\", \"\"));\r\n    } else {\r\n      // 최신순\r\n      dispatch(TrilogActions.getTrilogMain(\"createdAt\", \"\"));\r\n    }\r\n  };\r\n\r\n  const searchTrilog = () => {\r\n    dispatch(\r\n      TrilogActions.getTrilogMainFilter(filter_type, keyword.current.value)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BoardMainContainer>\r\n      {is_login ? (\r\n        <FloatingButton\r\n          onClick={() => {\r\n            history.push(\"/trilog/write\");\r\n          }}\r\n        >\r\n          <Plus />\r\n        </FloatingButton>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <SearchContainer>\r\n        <SearchWrapper>\r\n          <Search\r\n            type=\"text\"\r\n            placeholder=\"검색어를 입력하세요.\"\r\n            ref={keyword}\r\n            onKeyPress={(e) => {\r\n              if (window.event.keyCode === 13) {\r\n                searchTrilog();\r\n              }\r\n            }}\r\n          />\r\n          <SearchIcon onClick={searchTrilog} />\r\n        </SearchWrapper>\r\n      </SearchContainer>\r\n      <FilterContainer>\r\n        <Filter>\r\n          <Background id=\"FilterTab\" type={filter_type} />\r\n          <LikeFilter onClick={tabToggle} type={filter_type}>\r\n            <span id=\"LikeText\">좋아요순</span>\r\n          </LikeFilter>\r\n          <NewestFilter onClick={tabToggle} type={filter_type}>\r\n            <span id=\"NewestText\">최신순</span>\r\n          </NewestFilter>\r\n        </Filter>\r\n        <MoveTripper>\r\n          <img src={Tripper} />\r\n        </MoveTripper>\r\n      </FilterContainer>\r\n      <CardContainer>\r\n        {trilog.length === 0 ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <InfinityScroll callNext={scroll} is_next={is_last}>\r\n              {trilog.map((val, idx) => {\r\n                return (\r\n                  <Fade bottom key={idx}>\r\n                    <BoardCard data={val} margin=\"50px 15px 0 15px\" />\r\n                  </Fade>\r\n                );\r\n              })}\r\n            </InfinityScroll>\r\n          </>\r\n        )}\r\n      </CardContainer>\r\n    </BoardMainContainer>\r\n  );\r\n};\r\n\r\nconst BoardMainContainer = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n\r\n  @media (max-width: 1270px) {\r\n    width: 850px;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 500px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\n  width: 40.625rem;\r\n  border: 1px solid rgb(43, 97, 225, 0.6);\r\n  border-radius: 5px;\r\n  outline: none;\r\n  padding: 0.75rem 1.25rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0px 3px 6px #00000029;\r\n\r\n  & svg {\r\n    fill: rgb(43, 97, 225);\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    width: 490px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 384px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst Search = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  width: 38rem;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row-reverse;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 50%;\r\n  height: 100%;\r\n  left: ${(props) => (props.type === \"likeNum\" ? \"0;\" : \"50%;\")};\r\n  background: #2b61e1 0% 0% no-repeat padding-box;\r\n  border-radius: 5px;\r\n  transition: left 0.5s;\r\n`;\r\n\r\nconst LikeFilter = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  & span {\r\n    font-family: \"paybooc-Bold\";\r\n    font-size: 14px;\r\n    letter-spacing: 0px;\r\n    color: ${(props) => (props.type === \"likeNum\" ? \"#fff;\" : \"#89ACFF;\")};\r\n    z-index: 10;\r\n    transition: color 0.3s;\r\n  }\r\n`;\r\n\r\nconst NewestFilter = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  & span {\r\n    font-family: \"paybooc-Bold\";\r\n    font-size: 14px;\r\n    letter-spacing: 0px;\r\n    color: ${(props) => (props.type === \"likeNum\" ? \"#89ACFF;\" : \"#fff;\")};\r\n    z-index: 10;\r\n    transition: color 0.3s;\r\n  }\r\n`;\r\n\r\nconst Filter = styled.div`\r\n  position: relative;\r\n  width: 14.125rem;\r\n  height: 2.5rem;\r\n  background: #f4f4f4 0% 0% no-repeat padding-box;\r\n  box-shadow: 0px 3px 6px #00000029;\r\n  border-radius: 5px;\r\n  display: flex;\r\n`;\r\n\r\nconst CardContainer = styled.div`\r\n  width: 100%;\r\n  margin: 0 0 4.2rem 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst FloatingButton = styled.div`\r\n  position: fixed;\r\n  bottom: 5%;\r\n  right: 3%;\r\n  width: 3.125rem;\r\n  height: 3.125rem;\r\n  cursor: pointer;\r\n  z-index: 99;\r\n\r\n  & svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    fill: #2b61e1;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    bottom: 10%;\r\n    right: 3%;\r\n  }\r\n`;\r\n\r\nconst Move = keyframes`\r\n  0% {\r\n    transform : translateX(-1500%);\r\n  }\r\n  100% {\r\n    transform : translateX(0%);\r\n  }\r\n`;\r\n\r\nconst MoveTripper = styled.div`\r\n  animation: ${Move} 5s;\r\n  margin: 0 1rem 0 0;\r\n  & img {\r\n    width: 4rem;\r\n  }\r\n`;\r\n\r\nexport default BoardMain;\r\n","/Users/parkminkyung/Desktop/git/triport/src/components/components.js",[],"/Users/parkminkyung/Desktop/git/triport/src/pages/Profile.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/Footer.js",[],"/Users/parkminkyung/Desktop/git/triport/src/media/svg/Svg.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/ProfileSideBar.js",[],"/Users/parkminkyung/Desktop/git/triport/src/redux/modules/sidebar.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/ProfileMyPost.js",["257","258","259","260","261","262"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Video from \"components/PostVideo\";\nimport TrilsDetail from \"../components/trils/TrilsDetail\";\nimport { BoardCard } from \"components/components\";\n\nimport { history } from \"redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as TrilogActions } from \"redux/modules/trilog\";\nimport { TrilsActions } from \"redux/modules/trils\";\nimport { Fragment } from \"react\";\n\nconst ProfileMyPost = () => {\n  const dispatch = useDispatch();\n  const mytrils_post = useSelector((state) => state.trils.data);\n  const mytrilog_post = useSelector((state) => state.trilog.main.list);\n  const [trilsindex, setTrilsIndex] = useState(4);\n  const [trilogindex, setTrilogIndex] = useState(5);\n\n  const modal = useSelector((state) => state.trils.modal);\n\n  React.useEffect(() => {\n    dispatch(TrilsActions.getMyTrilsPost());\n    dispatch(TrilogActions.getTrilogMainMyPage());\n  }, []);\n\n  return (\n    <React.Fragment>\n      {modal ? <TrilsDetail history={history} /> : null}\n      <ColumnWrap>\n        <Wrap>\n          <ColumnWrap>\n            <Div>\n              <Title>Trils</Title>\n            </Div>\n            <Postlist type=\"trils\">\n              {!mytrils_post || mytrils_post.length === 0 ? (\n                <Text>내 Trils가 없습니다.</Text>\n              ) : (\n                <>\n                  {mytrils_post.map((p, idx) => {\n                    return (\n                      <Fragment key={idx}>\n                        <Video {...p}  history={history} />\n                      </Fragment>\n                    );\n                  })}\n                </>\n              )}\n            </Postlist>\n            <Br />\n          </ColumnWrap>\n        </Wrap>\n\n        <ColumnWrap>\n          <Wrap style={{ marginBottom: \"5rem\" }}>\n            <ColumnWrap>\n              <Div>\n                <Title>Trilog</Title>\n              </Div>\n              <Postlist type=\"trilog\">\n                {!mytrilog_post || mytrilog_post.length === 0 ? (\n                  <Text>내 Trilog가 없습니다.</Text>\n                ) : (\n                  <>\n                    {mytrilog_post.map((val, idx) => {\n                      const index = idx + 1;\n                      if (idx <= trilogindex) {\n                        if (index % 5 === 0) {\n                          return (\n                            <BoardCard data={val} margin=\"50px 20px 50px 0\" />\n                          );\n                        } else {\n                          return (\n                            <BoardCard data={val} margin=\"50px 20px 50px 0\" />\n                          );\n                        }\n                      }\n                    })}\n                  </>\n                )}\n              </Postlist>\n            </ColumnWrap>\n          </Wrap>\n        </ColumnWrap>\n      </ColumnWrap>\n    </React.Fragment>\n  );\n};\n\nexport default ProfileMyPost;\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-family: \"paybooc-Bold\";\n  width: 100vw;\n`;\n\nconst ColumnWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  @media (max-width: 540px) {\n    justify-content: center;\n  }\n`;\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 85%;\n  margin: 0 auto;\n  @media (max-width: 540px) {\n    margin-left: 3rem;\n  }\n`;\n\nconst Title = styled.div`\n  width: 8rem;\n  color: #2b61e1;\n  margin-left: 1rem;\n  margin-bottom: 3rem;\n  font-size: 1.2rem;\n\n  @media (max-width: 1270px) {\n    font-size: 1rem;\n    width: 6rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 3.5rem;\n  height: 1.5rem;\n  border: 1px solid #989898;\n  border-radius: 5px;\n  background-color: #ffffff;\n  padding: 0.2rem;\n  margin-right: 5rem;\n  cursor: pointer;\n  @media (max-width: 540px) {\n    margin-right: 2rem;\n  }\n`;\n\nconst Br = styled.div`\n  width: 80%;\n  height: 3rem;\n  margin: 0 auto;\n  margin-bottom: 3rem;\n  border-bottom: 3px solid #89acff;\n  @media (max-width: 540px) {\n    margin-left: 2.5rem;\n    width: 85%;\n  }\n  @media (max-width: 375px) {\n    margin-left: 2rem;\n    width: 85%;\n  }\n`;\n\nconst Postlist = styled.div`\n  display: grid;\n  grid-gap: 32px;\n  padding: 16px;\n  grid-auto-flow: column;\n  grid-auto-columns: ${(props) =>\n    props.type === \"trils\" ? \"minmax(400px, 400px)\" : \"minmax(224px, 224px)\"};\n  overflow-x: auto;\n  width: 80%;\n  margin: 0 auto;\n  @media (max-width: 540px) {\n    width: 95%;\n    /* margin-left: 2rem; */\n    /* justify-content: center; */\n  }\n\n  @media (max-width: 540px) {\n    width: 85%;\n    /* margin-left: 2rem; */\n    /* justify-content: center; */\n  }\n  @media (max-width: 375px) {\n    /* margin-left: 2rem; */\n    width: 85%;\n    /* justify-content: center; */\n  }\n`;\n\nconst Text = styled.div`\n  margin-left: 6rem;\n`;\n","/Users/parkminkyung/Desktop/git/triport/src/components/ProfileSetting.js",["263","264","265"],"/Users/parkminkyung/Desktop/git/triport/src/components/ProfileLike.js",["266","267","268","269","270","271"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Video from \"components/PostVideo\";\nimport { BoardCard } from \"components/components\";\nimport TrilsDetail from \"../components/trils/TrilsDetail\";\n\nimport { history } from \"redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TrilsActions } from \"redux/modules/trils\";\nimport { actionCreators as TrilogActions } from \"redux/modules/trilog\";\n\nimport { Fragment } from \"react\";\n\nconst ProfileLike = () => {\n  const dispatch = useDispatch();\n  const liketrils_post = useSelector((state) => state.trils.data);\n  const liketrilog_post = useSelector((state) => state.trilog.main.list);\n  const [trilsindex, setTrilsIndex] = useState(4);\n  const [trilogindex, setTrilogIndex] = useState(5);\n\n  const modal = useSelector((state) => state.trils.modal);\n\n  React.useEffect(() => {\n    dispatch(TrilsActions.getMyTrilsLikePost());\n    dispatch(TrilogActions.getTrilogMainMyPageLike());\n  }, []);\n\n  return (\n    <React.Fragment>\n      {modal ? <TrilsDetail history={history} /> : null}\n      <ColumnWrap>\n        <Wrap>\n          <ColumnWrap>\n            <Div>\n              <Title>Trils</Title>\n            </Div>\n            <Postlist type=\"trils\">\n              {!liketrils_post || liketrils_post.length === 0 ? (\n                <Text>내가 좋아하는 Trils가 없습니다.</Text>\n              ) : (\n                <>\n                  {liketrils_post.map((p, idx) => {\n                    return (\n                      <Fragment key={idx}>\n                        <Video {...p} history={history} />\n                      </Fragment>\n                    );\n                  })}\n                </>\n              )}\n            </Postlist>\n            <Br />\n          </ColumnWrap>\n        </Wrap>\n\n        <ColumnWrap>\n          <Wrap style={{ marginBottom: \"5rem\" }}>\n            <ColumnWrap>\n              <Div>\n                <Title>Trilog</Title>\n              </Div>\n              <Postlist type=\"trilog\">\n                {!liketrilog_post || liketrilog_post.length === 0 ? (\n                  <Text>내가 좋아하는 Trilog가 없습니다.</Text>\n                ) : (\n                  <>\n                    {liketrilog_post.map((val, idx) => {\n                      const index = idx + 1;\n                      if (idx <= trilogindex) {\n                        if (index % 5 === 0) {\n                          return <BoardCard data={val} margin=\"50px 0 50px 0\" />;\n                        } else {\n                          return <BoardCard data={val} margin=\"50px 0 50px 0\" />;\n                        }\n                      }\n                    })}\n                  </>\n                )}\n              </Postlist>\n            </ColumnWrap>\n          </Wrap>\n        </ColumnWrap>\n      </ColumnWrap>\n    </React.Fragment>\n  );\n};\n\nexport default ProfileLike;\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-family: \"paybooc-Bold\";\n  width: 100vw;\n`;\n\nconst ColumnWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  @media (max-width: 540px) {\n    justify-content: center;\n  }\n`;\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 85%;\n  margin: 0 auto;\n  @media (max-width: 540px) {\n    margin-left: 3rem;\n  }\n`;\n\nconst Title = styled.div`\n  width: 8rem;\n  color: #2b61e1;\n  margin-left: 1rem;\n  margin-bottom: 3rem;\n  font-size: 1.2rem;\n\n  @media (max-width: 1270px) {\n    font-size: 1rem;\n    width: 6rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 3.5rem;\n  height: 1.5rem;\n  border: 1px solid #989898;\n  border-radius: 5px;\n  background-color: #ffffff;\n  padding: 0.2rem;\n  margin-right: 5rem;\n  cursor: pointer;\n  @media (max-width: 540px) {\n    margin-right: 2rem;\n  }\n`;\n\nconst Br = styled.div`\n  width: 80%;\n  height: 3rem;\n  margin: 0 auto;\n  margin-bottom: 3rem;\n  border-bottom: 3px solid #89acff;\n  @media (max-width: 540px) {\n    margin-left: 2.5rem;\n    width: 85%;\n  }\n  @media (max-width: 375px) {\n    margin-left: 2rem;\n    width: 85%;\n  }\n`;\n\nconst Postlist = styled.div`\n  display: grid;\n  grid-gap: 32px;\n  padding: 16px;\n  grid-auto-flow: column;\n  grid-auto-columns: ${(props) =>\n    props.type === \"trils\" ? \"minmax(400px, 400px)\" : \"minmax(224px, 224px)\"};\n  overflow-x: auto;\n  width: 80%;\n  margin: 0 auto;\n  @media (max-width: 540px) {\n    width: 95%;\n    /* margin-left: 2rem; */\n    /* justify-content: center; */\n  }\n\n  @media (max-width: 540px) {\n    width: 85%;\n    /* margin-left: 2rem; */\n    /* justify-content: center; */\n  }\n  @media (max-width: 375px) {\n    /* margin-left: 2rem; */\n    width: 85%;\n    /* justify-content: center; */\n  }\n`;\n\nconst Text = styled.div`\n  margin-left: 6rem;\n`;","/Users/parkminkyung/Desktop/git/triport/src/components/Category.js",["272"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Category = (props) => {\n  const { history } = props;\n  const [currentClick, setCurrentClick] = React.useState(null);\n  const [prevClick, setPrevClick] = React.useState(null);\n\n  const GetClick = (e) => {\n    setCurrentClick(e.target.id); // 해당 엘리먼트의 id값\n    const pathname = history.location.pathname;\n    if (pathname === `${e.target.id}`) {\n      history.replace(`${e.target.id}`);\n    } else {\n      history.push(`${e.target.id}`);\n    }\n  };\n\n  React.useEffect(\n    (e) => {\n      if (currentClick !== null) {\n        let current = document.getElementById(currentClick); // getElementById : id값으로 엘리먼트 찾아옴.\n        // console.log(current);\n        current.style.opacity = \"1\"; // 찾아온 엘리먼트에 style 속성 먹이기\n      }\n\n      if (prevClick !== null) {\n        // 직전에 클릭한 카테고리에 원래의 style 속성 먹이기\n        let prev = document.getElementById(prevClick);\n        prev.style.opacity = \"0.7\";\n      }\n      setPrevClick(currentClick); // 클릭한 id 값을 prevClick에 저장한다.\n    },\n    [currentClick]\n  );\n\n  return (\n    <React.Fragment>\n      <Category1 id=\"/\" onClick={GetClick}>\n        Trils\n      </Category1>\n      <Category1 id=\"/trilog\" onClick={GetClick}>\n        Trilog\n      </Category1>\n      <Category2 id=\"/about\" onClick={GetClick}>\n        About\n      </Category2>\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\nconst Category1 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  margin-right: 4rem;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 1270px) {\n    margin-right: 2rem;\n  }\n\n  @media (max-width: 980px) {\n    margin-right: 1.5rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 768px) {\n    margin-right: 1.5rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 600px) {\n    margin-right: 1rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 375px) {\n    font-size: 0.8rem;\n    margin-right: 1rem;\n  }\n`;\n\nconst Category2 = styled.a`\n  cursor: pointer;\n  color: #2b61e1;\n  opacity: 0.7;\n\n  :hover {\n    opacity: 1;\n  }\n  @media (max-width: 1270px) {\n    margin-right: 2rem;\n  }\n  @media (max-width: 980px) {\n    margin-right: 1.5rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 768px) {\n    margin-right: 1rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 600px) {\n    margin-right: 1rem;\n    font-size: 0.8rem;\n  }\n  @media (max-width: 540px) {\n    font-size: 0.8rem;\n    margin-right: 0;\n  }\n`;\n","/Users/parkminkyung/Desktop/git/triport/src/shared/common.js",["273","274"],"// 닉네임 형식\nexport const nameCheck = (name) => {\n  var regExp =\n    /^[._0-9a-zA-Z가-힣]{3,12}$/;\n\n  return regExp.test(name);\n};\n\n// 이메일 형식\nexport const emailCheck = (email) => {\n  var regExp =\n    /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n\n  return regExp.test(email);\n};\n\n// 비밀번호 체크(8자-20자)\nexport const pwdCheck = (pwd) => {\n  var regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[!@#*.*a-zA-z0-9]{8,20}$/; //  8 ~ 20자 영문, 숫자, 특수문자 조합\n\n  return regExp.test(pwd);\n};\n","/Users/parkminkyung/Desktop/git/triport/src/pages/BoardDetail.js",["275","276"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BoardView, BoardComment, BoardDetailMap } from \"components/components\";\r\nimport { LikeFill, LikeEmpty } from \"media/svg/Svg\";\r\nimport { actionCreators as TrilogActions } from 'redux/modules/trilog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { history } from \"redux/configureStore\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BoardDetail = (props) => {\r\n    const id = props.match.params.id; // 상세 게시글 ID\r\n    const dispatch = useDispatch();\r\n\r\n    const is_login = useSelector((state) => state.user.is_login); // 로그인 여부\r\n    const detail = useSelector((state) => state.trilog.detail); // 상세 게시글 정보\r\n    const is_loading = useSelector((state) => state.trilog.loading.detail_loading); // 상세 게시글 로딩 여부\r\n    const comment = useSelector((state) => state.trilog.parent_comment.list); // 부모 댓글\r\n    const is_last = useSelector((state) => state.trilog.parent_comment.is_last); // 부모 댓글 페이징 여부 - 다음 댓글 있나 없나\r\n\r\n    const commentRef = React.useRef('');\r\n\r\n    React.useEffect(() => {\r\n        dispatch(TrilogActions.getTrilogDetail(id));\r\n    }, []);\r\n\r\n    const postParentComment = () => {\r\n        if(!is_login) {\r\n          Swal.fire({\r\n            title: \"로그인\",\r\n            text: \"로그인을 먼저 해주세요.\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"로그인하기\",\r\n            cancelButtonText: \"닫기\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                history.push(\"/login\");\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        dispatch(TrilogActions.addParentComment(id, commentRef.current.value));\r\n        document.getElementById('commentInput').value = ''; // 초기화\r\n    };\r\n\r\n    const hitLike = () => {\r\n        if(!is_login) {\r\n          Swal.fire({\r\n            title: \"로그인\",\r\n            text: \"로그인을 먼저 해주세요.\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"로그인하기\",\r\n            cancelButtonText: \"닫기\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                history.push(\"/login\");\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        dispatch(TrilogActions.setLikeTrilogDetail(id));\r\n    };\r\n\r\n    const getMorecomment = () => {\r\n        dispatch(TrilogActions.getParentCommentScroll(id));\r\n    };\r\n\r\n    const editTrilog = () => {\r\n        history.replace(`/trilog/write/${id}`);\r\n    };\r\n\r\n    const deleteTrilog = () => {\r\n      Swal.fire({\r\n        title: '해당 게시물을 삭제하시겠습니까?',\r\n        showDenyButton: true,\r\n        showCancelButton: false,\r\n        confirmButtonText: `삭제`,\r\n        denyButtonText: `취소`,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          dispatch(TrilogActions.removeTrilog(id));\r\n        }\r\n      });\r\n    };\r\n\r\n    return (\r\n      <DetailContainer>\r\n        {is_loading ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <UserContainer>\r\n              <div>\r\n                <img src={detail.author.profileImgUrl} />\r\n                <span>{detail.author.nickname}</span>\r\n              </div>\r\n              <div>\r\n                <LastUpdate>최초 등록일 : {detail.information.createdAt}</LastUpdate>\r\n                {detail.member.isMembers ? (\r\n                  <>\r\n                    <EditButton type=\"button\" value=\"수정\" onClick={editTrilog} />\r\n                    <DeleteButton type=\"button\" value=\"삭제\" onClick={deleteTrilog} />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </UserContainer>\r\n            <Separator />\r\n            <ToastViewContainer>\r\n              {detail.information.description === \"\" ? (\r\n                <></>\r\n              ) : (\r\n                <BoardView content={detail.information.description} />\r\n              )}\r\n            </ToastViewContainer>\r\n            <MapConatiner>\r\n              {detail.information.address === '지도 마커를 클릭하시면 주소가 여기 표시됩니다.' || detail.information.address === 'seoul' ? (<></>) : (<BoardDetailMap address={detail.information.address} />) }\r\n            </MapConatiner>\r\n            <Separator />\r\n            <LikeCommentContainer>\r\n              <Infomation>\r\n                <span onClick={hitLike}>\r\n                  {detail.member.isLike ? <LikeFill /> : <LikeEmpty />}\r\n                </span>\r\n                <div>\r\n                  <span>좋아요+</span>\r\n                  <LikeCount>{detail.information.likeNum}</LikeCount>\r\n                </div>\r\n                <div>\r\n                  <span>댓글+</span>\r\n                  <CommentCount>{detail.information.commentNum}</CommentCount>\r\n                </div>\r\n              </Infomation>\r\n              <CommentInput>\r\n                <input\r\n                  id=\"commentInput\"\r\n                  type=\"text\"\r\n                  placeholder=\"댓글을 입력하세요.\"\r\n                  ref={commentRef}\r\n                  onKeyPress={(e) => {\r\n                    if (window.event.keyCode === 13) {\r\n                      postParentComment();\r\n                    }\r\n                  }}\r\n                />\r\n              </CommentInput>\r\n              <Separator />\r\n              {comment.map((val, index) => {\r\n                return <BoardComment id={id} comment={val} key={index} />;\r\n              })}\r\n            </LikeCommentContainer>\r\n            {is_last ? (\r\n              <></>\r\n            ) : (\r\n              <ShowMoreComment>\r\n                <span onClick={getMorecomment}>댓글 더 보기</span>\r\n              </ShowMoreComment>\r\n            )}\r\n          </>\r\n        )}\r\n      </DetailContainer>\r\n    );\r\n};\r\n\r\nconst Separator = styled.hr`\r\n  color: #89acff;\r\n  opacity: 0.5;\r\n  margin: 0.75rem 0;\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n\r\n  @media (max-width: 1270px) {\r\n    width: 850px;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 500px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    font-family: AppleSDGothicNeoB;\r\n\r\n    & img {\r\n        width: 2.375rem;\r\n        border-radius: 50%;\r\n        margin-right: .5rem;\r\n    }\r\n\r\n    & div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst LastUpdate = styled.span`\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst LikeCount = styled.span`\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst CommentCount = styled.span``;\r\n\r\nconst ToastViewContainer = styled.div``;\r\n\r\nconst MapConatiner = styled.div``;\r\n\r\nconst LikeCommentContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Infomation = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"AppleSDGothicNeoR\";\r\n\r\n  & svg {\r\n    cursor: pointer;\r\n    width: 3.2rem;\r\n  }\r\n`;\r\n\r\nconst CommentInput = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0.5rem 0;\r\n  width: 100%;\r\n\r\n  & input {\r\n    outline: none;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 40px;\r\n    border: 1px solid rgb(43,97,225,0.6);\r\n    border-radius: 5px;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst ShowMoreComment = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 1.5rem 0 1.5rem 0;\r\n  & span {\r\n      cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditButton = styled.input`\r\n    cursor: pointer;\r\n    background-color: #2b61e1;\r\n    color: #fff;\r\n    border: 1px solid #2b61e1;\r\n    border-radius: 5px;\r\n    padding: .25rem .75rem;\r\n    margin: 0 .5rem;\r\n`;\r\n\r\nconst DeleteButton = styled.input`\r\n    cursor: pointer;\r\n    background-color: #f22d3f;\r\n    border: 1px solid #f22d3f;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    padding: .25rem .75rem;\r\n`;\r\n\r\nexport default BoardDetail;\r\n","/Users/parkminkyung/Desktop/git/triport/src/pages/BoardWrite.js",["277"],"import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport \"codemirror/lib/codemirror.css\"; // Editor's Dependency Style\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\"; // Editor's Style\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport codeSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\nimport \"highlight.js/styles/github.css\";\r\nimport codeSyntaxHighlight from \"@toast-ui/editor-plugin-code-syntax-highlight\";\r\nimport { history } from \"redux/configureStore\";\r\nimport { actionCreators as TrilogActions } from \"redux/modules/trilog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { config } from \"redux/modules/config\";\r\nimport _ from \"lodash\";\r\nimport { BoardWriteMap } from \"components/components\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BoardWrite = (props) => {\r\n  const dispatch = useDispatch();\r\n  const is_loading = useSelector((state) => state.trilog.loading.detail_loading); // 모든 contents가 로드가 됬나 여부\r\n  const detail = useSelector((state) => state.trilog.detail); // 상세 게시글 정보 from Redux\r\n  const id = props.match.params.id; // 상세 게시글 ID\r\n  const is_edit = id ? true : false; // 수정페이지인지 작성페이지인지\r\n\r\n  const data = React.useRef();\r\n\r\n  const [title, setTitle] = React.useState(\"\"); // 제목\r\n  const [address, setAddress] = React.useState(\"지도 마커를 클릭하시면 주소가 여기 표시됩니다.\"); // 주소\r\n  const [keyword, setKeyword] = React.useState(\"관악구청\"); // 지도 검색 키워드\r\n  const [imageUrls, setImageUrls] = React.useState([]); // 사용자가 작성 및 수정시 사용했던 모든 이미지들, 이후 서버에서 사용안한 이미지들 삭제\r\n  const [imgLoading, setImgLoading] = React.useState(false); // 이미지 로딩 시\r\n\r\n  const handleMap = _.debounce((val) => {\r\n    setKeyword(val);\r\n  }, 500);\r\n\r\n  // 게시글 작성 및 수정\r\n  const sendData = async () => {\r\n    if (title === \"\") {\r\n      Swal.fire({\r\n          title: \"제목을 입력하세요.\",\r\n          icon: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const content = data.current.getInstance().getMarkdown();\r\n\r\n    if (content === \"\") {\r\n      Swal.fire({\r\n          title: \"내용을 입력하세요.\",\r\n          icon: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let filter_imageUrls = imageUrls.filter((val) => content.includes(val.imageFilePath)); // 사용안한 이미지 링크들 제거\r\n\r\n    if(is_edit) {\r\n      if(detail.information.imageUrlList.length > 0) {\r\n        const filter_images = detail.information.imageUrlList.filter((val) => content.includes(val.imageFilePath));\r\n        filter_imageUrls = [...filter_images, ...filter_imageUrls];\r\n      } \r\n    }\r\n\r\n    const post = {\r\n      title: title,\r\n      address: address,\r\n      description: content,\r\n      imageUrlList: filter_imageUrls,\r\n      is_edit: is_edit,\r\n      id: id,\r\n    };\r\n\r\n    dispatch(TrilogActions.addTrilog(post));\r\n    setImageUrls([]);\r\n  };\r\n\r\n  // Toast UI Editor에서 사용자가 이미지 추가할때\r\n  const uploadImage = async (blob) => {\r\n    const file_size = blob.size / 1024 / 1024;\r\n\r\n    if (file_size > 10) {\r\n      // 이미지가 10MB보다 크다면\r\n      Swal.fire({\r\n          title: \"각 이미지 용량은 최대 10MB 입니다.\",\r\n          icon: \"warning\",\r\n      });\r\n      return \"failed\";\r\n    }\r\n\r\n    let api = \"\";\r\n\r\n    if (is_edit) {\r\n      api = `${config}/api/boards/image/${id}`;\r\n    } else {\r\n      api = `${config}/api/boards/image`;\r\n    }\r\n\r\n    const access_token = localStorage.getItem(\"access_token\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"imageFile\", blob);\r\n\r\n    setImgLoading(true);\r\n    const url = await fetch(api, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `${access_token}`,\r\n      },\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((error) => console.log(error, \"uploadImage\"));\r\n    setImgLoading(false);\r\n\r\n    if (url.status === 200) {\r\n      setImageUrls((prevState) => [\r\n        ...prevState,\r\n        { imageFilePath: url.results.imageFilePath },\r\n      ]);\r\n      return url.results.imageFilePath;\r\n    } else {\r\n      if (url.status === 401) {\r\n        Swal.fire({\r\n            title: url.msg,\r\n            icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n            title: url.msg,\r\n            icon: \"warning\",\r\n        });\r\n      }\r\n      return \"failed\";\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (is_edit) {\r\n      dispatch(TrilogActions.getTrilogDetail(id));\r\n      if (detail.information !== undefined) {\r\n        setAddress(detail.information.address);\r\n        setTitle(detail.information.title);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <WriteContainer>\r\n      {is_loading && is_edit ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          {imgLoading ? (\r\n            <ImgLoading>\r\n              <LoopIcon />\r\n              <div>⚡조금만 기다려 주세요⚡</div>\r\n            </ImgLoading>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Title margin=\"0 0 1.25rem 0\">\r\n            {is_edit ? (\r\n              <h2 style={{ textAlign: \"center\" }}>Trilog 수정</h2>\r\n            ) : (\r\n              <h2 style={{ textAlign: \"center\" }}>Trilog 작성</h2>\r\n            )}\r\n          </Title>\r\n          <Title margin=\"0 0 1.25rem 0\">\r\n            <span>제목</span>\r\n          </Title>\r\n          <InputContainer>\r\n            <TitleInput\r\n              id=\"title\"\r\n              type=\"text\"\r\n              placeholder=\"제목을 입력해주세요\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </InputContainer>\r\n          <Title margin=\"1.25rem 0 1.25rem 0\">\r\n            <span>위치</span>\r\n          </Title>\r\n          <InputContainer margin=\"0 0 1.5rem 0\">\r\n            <span>여행주소 : </span>\r\n            <Address>{address}</Address>\r\n          </InputContainer>\r\n          <MapContainer>\r\n            <MapInput\r\n              type=\"text\"\r\n              placeholder=\"예) 장소/가게 이름 - 남산, 서울역 or 주소 - 서울시 관악구 관악로 145\"\r\n              onChange={(e) => {\r\n                handleMap(e.target.value);\r\n              }}\r\n            />\r\n            <BoardWriteMap\r\n              keyword={keyword}\r\n              setAddress={setAddress}\r\n              drag={true}\r\n            />\r\n          </MapContainer>\r\n          <Title margin=\"1.25rem 0 1.25rem 0\">\r\n            <span>내용</span>\r\n          </Title>\r\n          <InputContainer>\r\n            <Editor\r\n              previewStyle=\"vertical\"\r\n              height=\"600px\"\r\n              initialEditType=\"wysiwyg\"\r\n              initialValue={is_edit ? detail.information.description : \"\"}\r\n              plugins={[codeSyntax, codeSyntaxHighlight]}\r\n              hooks={{\r\n                addImageBlobHook: async (blob, callback) => {\r\n                  const upload = await uploadImage(blob);\r\n                  if (upload !== \"failed\") {\r\n                    callback(upload, \"alt text\");\r\n                  }\r\n                  return false;\r\n                },\r\n              }}\r\n              ref={data}\r\n            />\r\n          </InputContainer>\r\n          <ButtonContainer>\r\n            <ButtonComplete\r\n              id=\"trilogwrite\"\r\n              onClick={sendData}\r\n            >\r\n              {is_edit ? \"수정완료\" : \"작성완료\"}\r\n            </ButtonComplete>\r\n            <ButtonCancel\r\n              type=\"button\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              취소\r\n            </ButtonCancel>\r\n          </ButtonContainer>\r\n        </>\r\n      )}\r\n    </WriteContainer>\r\n  );\r\n};\r\n\r\nconst WriteContainer = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: 1270px) {\r\n    width: 850px;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 500px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst spin = keyframes`\r\n  100% {\r\n      transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst ImgLoading = styled.div`\r\n  position: fixed;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  z-index: 9999;\r\n  width: 100%;\r\n  min-height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & svg {\r\n    font-size: 7rem;\r\n    fill: rgb(43, 97, 225, 0.8);\r\n    animation: ${spin} 2s linear infinite;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 100%;\r\n  font-family: \"paybooc-Bold\";\r\n  font-size: 15px;\r\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")};\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")};\r\n`;\r\n\r\nconst Address = styled.span`\r\n  font-family: \"AppleSDGothicNeoB\";\r\n`;\r\n\r\nconst MapContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst MapInput = styled.input`\r\n  position: absolute;\r\n  z-index: 2;\r\n  top: 10px;\r\n  left: 10px;\r\n  width: 30.938rem;\r\n  border: 1px solid rgb(43, 97, 225, 0.6);\r\n  border-radius: 5px;\r\n  outline: none;\r\n  padding: 0.75rem 1.25rem;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 15rem;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 10rem;\r\n  }\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  width: 31.563rem;\r\n  border: 1px solid rgb(43, 97, 225, 0.6);\r\n  border-radius: 5px;\r\n  outline: none;\r\n  padding: 0.75rem 1.25rem;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 15rem;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 3.563rem 0 4.2rem 0;\r\n`;\r\n\r\nconst ButtonComplete = styled.button`\r\n  cursor: pointer;\r\n  background: #2b61e1 0% 0% no-repeat padding-box;\r\n  box-shadow: 0px 3px 6px #00000029;\r\n  border: 1px solid #2b61e1;\r\n  border-radius: 5px;\r\n  width: 20.625rem;\r\n  height: 3.063rem;\r\n  color: #fff;\r\n  outline: none;\r\n  margin-right: 6.875rem;\r\n  font-family: \"paybooc-Bold\";\r\n  font-size: 15px;\r\n`;\r\n\r\nconst ButtonCancel = styled.button`\r\n  cursor: pointer;\r\n  background: #707070 0% 0% no-repeat padding-box;\r\n  box-shadow: 0px 3px 6px #00000029;\r\n  border: 1px solid #707070;\r\n  border-radius: 5px;\r\n  width: 20.625rem;\r\n  height: 3.063rem;\r\n  color: #fff;\r\n  outline: none;\r\n  font-family: \"paybooc-Bold\";\r\n  font-size: 15px;\r\n`;\r\n\r\nexport default BoardWrite;\r\n","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardCard.js",["278"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BgImg from \"media/image/trilog_default.jpg\";\r\nimport ProfileImg from \"media/image/triport_airplane.png\";\r\nimport { actionCreators as TrilogActions } from \"redux/modules/trilog\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LikeFill, LikeEmpty } from \"media/svg/Svg\";\r\nimport { history } from \"redux/configureStore\";\r\n\r\nconst BoardCard = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { margin, data } = props; // data = 게시글 객체\r\n    const information = data.information; // 게시글 정보\r\n    const author = data.author; // 글쓴이 정보\r\n    const member = data.member; // 로그인한 유저\r\n    const id = information.id; // 게시글 ID\r\n\r\n    const hitLike = (e) => {\r\n        e.stopPropagation(); // 이벤트 버블링\r\n        dispatch(TrilogActions.setLikeTrilog(id));\r\n    };\r\n\r\n    return(\r\n        <BoardCardContainer margin={ margin } >\r\n            <ImageContainer onClick={() => {history.push(`/trilog/${id}`)}} img={information.thumbNailUrl}>\r\n\r\n            </ImageContainer>\r\n            <ContentContainer>\r\n                <Title onClick={() => {history.push(`/trilog/${id}`)}}>\r\n                    <span>{information.title}</span>\r\n                </Title>\r\n                <UserContainer>\r\n                    <Profile img={author.profileImgUrl}>\r\n                        <div></div>\r\n                        <span>{author.nickname}</span>\r\n                    </Profile>\r\n                    <Likes onClick={hitLike}>\r\n                        { member.isLike ? <LikeFill /> : <LikeEmpty /> }\r\n                        <span>+{information.likeNum}</span>\r\n                    </Likes>\r\n                </UserContainer>\r\n                <Detail>\r\n                    <span>{information.createdAt.split(' ')[0]}</span>\r\n                    <span>{information.createdAt.split(' ')[1]}</span>\r\n                </Detail>\r\n            </ContentContainer>\r\n        </BoardCardContainer>\r\n    );\r\n};\r\n\r\nBoardCard.defaultProps = {\r\n  margin: \"\",\r\n  information: {\r\n    address: \"\",\r\n    description: \"\",\r\n    id: 1,\r\n    modifiedAt: \"1990-01-01 12:00:00\",\r\n    title: \"\",\r\n  },\r\n  author: {\r\n    nickname: \"Triport\",\r\n    profileImgUrl: ProfileImg,\r\n  },\r\n  member: {\r\n    like: false,\r\n  },\r\n};\r\n\r\nconst BoardCardContainer = styled.div`\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  width: 14rem;\r\n  height: 23.063rem;\r\n  transition: all 0.2s ease-in-out;\r\n  box-shadow: 0px 3px 6px #00000029;\r\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")};\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 14rem;\r\n  background: url(${(props) => (props.img === \"\" ? BgImg : props.img)})\r\n    no-repeat center;\r\n  background-size: cover;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  width: 100%;\r\n  height: 1.563rem;\r\n  padding: 0 15px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & div {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    background: url(${(props) => props.img}) no-repeat center;\r\n    background-size: cover;\r\n    border-radius: 50%;\r\n  }\r\n  & span {\r\n    margin-left: 5px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Likes = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n  & svg {\r\n    width: 2.375rem;\r\n  }\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 9.063rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  box-sizing: content-box;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  & span {\r\n    font-size: 12px;\r\n    color: #5a5a5a;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  box-sizing: content-box;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  margin: auto;\r\n  & span {\r\n    font-family: AppleSDGothicNeoB;\r\n    color: #2b61e1;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  box-sizing: content-box;\r\n  text-align: center;\r\n  position: relative;\r\n  padding: 0 0.5rem;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default BoardCard;\r\n","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardView.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardComment.js",["279","280"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CommentLike } from \"media/svg/Svg\";\r\nimport { history } from \"redux/configureStore\";\r\nimport { BoardChildComment } from \"components/components\";\r\nimport { actionCreators as TrilogActions } from 'redux/modules/trilog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { config } from \"redux/modules/config\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BoardComment = (props) => {\r\n    const dispatch = useDispatch();\r\n    const is_login = useSelector((state) => state.user.is_login); // 로그인 체크 여부\r\n\r\n    const { comment } = props; // BoardDetail 컴포넌트로부터 받은 data\r\n\r\n    const commentRef = React.useRef(); // 부모 댓글 추가 시 가져오는 내용\r\n\r\n    const [showReply, setShowReply] = React.useState(false); // 대댓글(자식 댓글) 보여주기 토글\r\n    const [showReplyInput, setShowReplyInput] = React.useState(false); // 답글 작성 토글\r\n    const [data, setData] = React.useState([]); // 대댓글(자식 댓글) 정보\r\n    const [edit, setEdit] = React.useState(false); // 부모 댓글 수정\r\n    const [parentCommentEdit, setParentCommentEdit] = React.useState(''); // Edit일때만 사용\r\n    const [page, setPage] = React.useState(1); // 부모 댓글 페이징\r\n    const [last, setLast] = React.useState(true); // 부모 댓글 페이징 - 다음 댓글 있나 없나 여부\r\n\r\n    const input_id = `commentChildInput${comment.commentParent.id}`;\r\n\r\n    React.useEffect(() => {\r\n      if(comment.commentParent !== undefined) {\r\n        setParentCommentEdit(comment.commentParent.contents);\r\n      }\r\n    }, []);\r\n\r\n    // 대댓글 조회 - 대댓글은 Redux에서 관리안함\r\n    const showReplyComment = () => {\r\n        setShowReply(!showReply);\r\n        \r\n        if(!showReply) {\r\n            const access_token = localStorage.getItem(\"access_token\");\r\n\r\n            fetch(`${config}/api/all/boards/comments/children/${comment.commentParent.id}?page=${page}`, {\r\n                method : 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n              setData(data.results);\r\n\r\n              if(!data.last) {\r\n                setPage(prevState => prevState + 1);\r\n                setLast(data.last);\r\n              }\r\n            })\r\n            .catch(err => console.log(err, 'get child comment trilog'));\r\n        }\r\n    };\r\n    \r\n    const postChildComment = () => {\r\n      if(!is_login) {\r\n          Swal.fire({\r\n            title: \"로그인\",\r\n            text: \"로그인을 먼저 해주세요.\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"로그인하기\",\r\n            cancelButtonText: \"닫기\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n        return;\r\n      }\r\n\r\n      const access_token = localStorage.getItem(\"access_token\");\r\n\r\n      fetch(`${config}/api/boards/comments/children/${comment.commentParent.id}`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json',\r\n              'Authorization': `${access_token}`,\r\n          },\r\n          body: JSON.stringify({\r\n              contents: commentRef.current.value,\r\n          })\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setData(prevState => [...prevState, data.results]);\r\n        if(!showReply) {\r\n          setShowReply(true);\r\n        }\r\n        document.getElementById(input_id).value = '';\r\n\r\n        Swal.fire({\r\n          title: data.msg,\r\n          icon: \"success\",\r\n      });\r\n      })\r\n      .catch(err => console.log(err, 'child comment post'));\r\n    }\r\n\r\n    const hitLike = () => {\r\n      if(!is_login) {\r\n        alert(\"로그인을 먼저 하세요!\");\r\n        return;\r\n      }\r\n      dispatch(TrilogActions.setParentCommentLike(comment.commentParent.id));\r\n    };\r\n\r\n    const getMorecomment = () => {\r\n      const access_token = localStorage.getItem(\"access_token\");\r\n\r\n      fetch(`${config}/api/all/boards/comments/children/${comment.commentParent.id}?page=${page}`, {\r\n          method : 'GET',\r\n          headers : {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json',\r\n              'Authorization': `${access_token}`,\r\n          },\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setData(prevState => [...prevState, ...data.results]);\r\n\r\n        if(!data.last) {\r\n          setPage(prevState => prevState + 1);\r\n          setLast(data.last);\r\n        } else {\r\n          setPage(1);\r\n          setLast(data.last);\r\n        }\r\n      })\r\n      .catch(err => console.log(err, 'get child comment trilog'));\r\n    };\r\n\r\n    const showEdit = () => {\r\n      setEdit(!edit);\r\n    };\r\n\r\n    const editComment = () => {\r\n      setEdit(!edit);\r\n      dispatch(TrilogActions.editParentComment(comment.commentParent.id, parentCommentEdit));\r\n    };\r\n\r\n    const deleteComment =() => {\r\n      Swal.fire({\r\n        title: '해당 댓글을 삭제하시겠습니까?',\r\n        showDenyButton: true,\r\n        showCancelButton: false,\r\n        confirmButtonText: `삭제`,\r\n        denyButtonText: `취소`,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          dispatch(TrilogActions.removeParentComment(comment.commentParent.id));\r\n        }\r\n      });\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <CommentContainer>\r\n          <ParentComment>\r\n            <UserContainer>\r\n              <img src={comment.author.profileImgUrl} />\r\n              <span>{comment.author.nickname}</span>\r\n            </UserContainer>\r\n            <Content>\r\n              {edit ? (\r\n                <>\r\n                  <EditInput\r\n                    type=\"text\"\r\n                    value={parentCommentEdit}\r\n                    onChange={(e) => setParentCommentEdit(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                      if (window.event.keyCode === 13) {\r\n                        editComment();\r\n                      }\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>{comment.commentParent.contents}</div>\r\n                  <Date>{comment.commentParent.createdAt}</Date>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </ParentComment>\r\n          <Likes>\r\n            <LikeSpan>\r\n              <div onClick={hitLike}>\r\n                <CommentLike />\r\n              </div>\r\n              <span>+{comment.commentParent.likeNum}</span>\r\n            </LikeSpan>\r\n            <AddComment onClick={() => setShowReplyInput(!showReplyInput)}>\r\n              답글 작성\r\n            </AddComment>\r\n            {comment.user.isMembers ? (\r\n              <>\r\n                <EditButton\r\n                  type=\"button\"\r\n                  value={edit ? \"취소\" : \"수정\"}\r\n                  onClick={showEdit}\r\n                />\r\n                <DeleteButton\r\n                  type=\"button\"\r\n                  value=\"삭제\"\r\n                  onClick={deleteComment}\r\n                />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Likes>\r\n          <ReplyComment showReplyInput={showReplyInput}>\r\n            <input\r\n              id={input_id}\r\n              type=\"text\"\r\n              placeholder=\"답글 추가...\"\r\n              ref={commentRef}\r\n              onKeyPress={() => {\r\n                if (window.event.keyCode === 13) {\r\n                  postChildComment();\r\n                }\r\n              }}\r\n            />\r\n          </ReplyComment>\r\n        </CommentContainer>\r\n        {comment.commentParent.commentChildNum === 0 ? (\r\n          <></>\r\n        ) : (\r\n          <ShowComment>\r\n            {showReply ? (\r\n              <span onClick={showReplyComment}>댓글 감추기 ▲</span>\r\n            ) : (\r\n              <span onClick={showReplyComment}>\r\n                댓글 보기({comment.commentParent.commentChildNum}) ▼\r\n              </span>\r\n            )}\r\n          </ShowComment>\r\n        )}\r\n        <ReplyContainer showReply={showReply}>\r\n          {data.map((val, index) => {\r\n            return (\r\n              <BoardChildComment\r\n                key={index}\r\n                comment={val}\r\n                parent_id={comment.commentParent.id}\r\n                setData={setData}\r\n              />\r\n            );\r\n          })}\r\n        </ReplyContainer>\r\n        <ShowMoreComment showReply={showReply} last={last}>\r\n          <span onClick={getMorecomment}>└ 대댓글 더 보기</span>\r\n        </ShowMoreComment>\r\n      </>\r\n    );\r\n};\r\n\r\nconst UserContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n  font-family: \"AppleSDGothicNeoB\";\r\n\r\n  & img {\r\n    width: 2.375rem;\r\n    border-radius: 50%;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst ParentComment = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst CommentContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  \r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Likes = styled.div`\r\n  margin: 0.5rem 0 0.5rem 2.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & span {\r\n    width: 65px;\r\n  }\r\n`;\r\n\r\nconst LikeSpan = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & svg {\r\n    cursor: pointer;\r\n    width: 1.2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  & span {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst ShowComment = styled.div`\r\n  margin: 0.5rem 0;\r\n  color: #2b61e1;\r\n\r\n  & span {\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n    margin-left: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst ReplyComment = styled.div`\r\n  display: ${(props) => (props.showReplyInput ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  margin: 1.5rem 0 1.5rem 2.5rem;\r\n\r\n  & input {\r\n    outline: none;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 40px;\r\n    border: 1px solid rgb(43,97,225,0.6);\r\n    border-radius: 5px;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst ReplyContainer = styled.div`\r\n  display: ${(props) => (props.showReply ? \"block\" : \"none\")};\r\n  margin: 0 0 1.5rem 2.5rem;\r\n`;\r\n\r\nconst AddComment = styled.span`\r\n  font-size: 13px;\r\n`;\r\n\r\nconst EditButton = styled.input`\r\n  cursor: pointer;\r\n  background-color: #2b61e1;\r\n  color: #fff;\r\n  border: 1px solid #2b61e1;\r\n  border-radius: 5px;\r\n  padding: .1rem .5rem;\r\n  margin: 0 .5rem;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst DeleteButton = styled.input`\r\n  cursor: pointer;\r\n  background-color: #f22d3f;\r\n  border: 1px solid #f22d3f;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  padding: .1rem .5rem;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst EditInput = styled.input`\r\n  outline: none;\r\n  border: 0;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 1px solid rgb(43,97,225,0.6);\r\n  border-radius: 5px;\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst ShowMoreComment = styled.div`\r\n  width: 100%;\r\n  display: ${(props) => (!props.last ? \"flex\" : \"none\")};\r\n  margin: 0 0 1.5rem 2.5rem;\r\n\r\n  & span {\r\n      cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default BoardComment;\r\n","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardWriteMap.js",["281"],"/*global kakao*/ \r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BoardWriteMap = (props) => {\r\n\r\n    const { keyword, setAddress ,drag } = props;\r\n\r\n    React.useEffect(() => {\r\n        mapscript();\r\n    }, [keyword]);\r\n\r\n    const setLocation = (location) => {\r\n        setAddress(location);\r\n    };\r\n\r\n    const mapscript = () => {\r\n        const infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n        const container = document.getElementById(\"Mymap\");\r\n\r\n        const options = {\r\n          center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\r\n          draggable : drag,\r\n          level: 5,\r\n        };\r\n\r\n        //map\r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 장소 검색 객체를 생성합니다\r\n        const ps = new kakao.maps.services.Places(); \r\n\r\n        // 키워드로 장소를 검색합니다\r\n        if(keyword !== \"\")\r\n            ps.keywordSearch(keyword, placesSearchCB);\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가합니다\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (var i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n\r\n        // 지도에 마커를 표시하는 함수입니다\r\n        function displayMarker(place) {\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n\r\n            // 마커에 클릭이벤트를 등록합니다\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n                infowindow.setContent('<div style=\"display:flex; justify-content:center; width:200px;\"><a href=\"' + place.place_url +'\" target=\"_blank\" style=\"padding:5px;font-size:14px;\">'+ place.place_name + '</a></div>');\r\n                setLocation(place.address_name);\r\n                infowindow.open(map, marker);\r\n                alert('위치 설정 완료');\r\n            });\r\n        }\r\n    };\r\n\r\n    return(\r\n        <MapBlock id=\"Mymap\"></MapBlock>\r\n    );\r\n};\r\n\r\nconst MapBlock = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n`;\r\n\r\nexport default BoardWriteMap;","/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardDetailMap.js",["282"],"/*global kakao*/ \r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BoardDetailMap = (props) => {\r\n    const { address } = props;\r\n\r\n    React.useEffect(() => {\r\n        mapscript();\r\n    }, []);\r\n\r\n    const mapscript = () => {\r\n        const mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n            mapOption = {\r\n                center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n                draggable: false,\r\n                level: 3 // 지도의 확대 레벨\r\n            };  \r\n\r\n        // 지도를 생성합니다    \r\n        const map = new kakao.maps.Map(mapContainer, mapOption); \r\n\r\n        // 주소-좌표 변환 객체를 생성합니다\r\n        const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n        // 주소로 좌표를 검색합니다\r\n        geocoder.addressSearch(address, function(result, status) {\r\n\r\n            // 정상적으로 검색이 완료됐으면 \r\n            if (status === kakao.maps.services.Status.OK) {\r\n                const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n                // 결과값으로 받은 위치를 마커로 표시합니다\r\n                const marker = new kakao.maps.Marker({\r\n                    map: map,\r\n                    position: coords\r\n                });\r\n\r\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n                const infowindow = new kakao.maps.InfoWindow({\r\n                    content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">' + result[0].address_name + '</div>'\r\n                });\r\n                infowindow.open(map, marker);\r\n\r\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n                map.setCenter(coords);\r\n            } \r\n        });    \r\n    };\r\n\r\n    return(\r\n        <MapBlock id=\"map\"></MapBlock>\r\n    );\r\n};\r\n\r\nconst MapBlock = styled.div`\r\n    width: 100%;\r\n    height: 300px;\r\n`;\r\n\r\nexport default BoardDetailMap;","/Users/parkminkyung/Desktop/git/triport/src/pages/Trils.js",["283"],"/Users/parkminkyung/Desktop/git/triport/src/redux/modules/user.js",["284","285"],"/Users/parkminkyung/Desktop/git/triport/src/shared/InfinityScroll.js",["286"],"import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst InfinityScroll = (props) => {\r\n    const { callNext, is_next } = props;\r\n\r\n    const handleScroll = _.throttle(() => {\r\n\r\n        const {innerHeight} = window;\r\n        const {scrollHeight} = document.body;\r\n\r\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\r\n \r\n        if(scrollHeight - innerHeight - scrollTop < 100) {\r\n            callNext();\r\n        }\r\n        \r\n    }, 300);\r\n\r\n    React.useEffect(() => {\r\n        if(!is_next){\r\n            window.addEventListener('scroll', handleScroll);\r\n        } else {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [is_next]);\r\n\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InfinityScroll;","/Users/parkminkyung/Desktop/git/triport/src/components/trils/ProgressBar.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetail.js",[],"/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trils.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/trilog/BoardChildComment.js",["287"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CommentLike } from \"media/svg/Svg\";\r\nimport { config } from \"redux/modules/config\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BoardChildComment = (props) => {\r\n  const { comment, setData } = props; // 부모 댓글 state 변경을 위해 setData 가져옴\r\n  const [likeNum, setLikeNum] = React.useState(comment.commentChild.likeNum); // 자식 댓글 좋아요 여부\r\n  const [edit, setEdit] = React.useState(false); // 자식 댓글 수정 버튼 토글 - input 태그 활성화 여부\r\n  const [childCommentEdit, setChildCommentEdit] = React.useState(comment.commentChild.contents); // 자식 댓글 내용\r\n  const [childCommentDate, setChildCommentDate] = React.useState(comment.commentChild.modifiedAt); // 자식 댓글 등록 시간\r\n\r\n  const hitLike = () => {\r\n    const access_token = localStorage.getItem(\"access_token\");\r\n    const api = `${config}/api/boards/comments/children/like/${comment.commentChild.id}`;\r\n\r\n    fetch(api, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `${access_token}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.msg.includes(\"추가\")) {\r\n          setLikeNum((prevState) => prevState + 1);\r\n        } else {\r\n          setLikeNum((prevState) => prevState - 1);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err, \"child comment like\"));\r\n  };\r\n\r\n  const showEdit = () => {\r\n    setEdit(!edit);\r\n  };\r\n\r\n  const editComment = () => {\r\n    const access_token = localStorage.getItem(\"access_token\");\r\n    fetch(`${config}/api/boards/comments/children/${comment.commentChild.id}`, {\r\n        method : 'PUT',\r\n        headers : {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `${access_token}`,\r\n        },\r\n        body: JSON.stringify({\r\n            contents: childCommentEdit,\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      Swal.fire({\r\n          title: data.msg,\r\n          icon: \"success\",\r\n      });\r\n      setChildCommentDate(data.results.commentChild.modifiedAt);\r\n    })\r\n    .catch(err => console.log(err, 'edit child comment trilog'));\r\n\r\n    setData(prevState => {\r\n      prevState.forEach((val) => {\r\n        if(val.commentChild.id === comment.commentChild.id) {\r\n          val.commentChild.contents = childCommentEdit;\r\n          val.commentChild.modifiedAt = childCommentDate;\r\n        }\r\n      })\r\n      \r\n      return prevState;\r\n    });\r\n\r\n    setEdit(!edit);\r\n  };\r\n\r\n  const deleteComment = () => {\r\n    Swal.fire({\r\n      title: '해당 댓글을 삭제하시겠습니까?',\r\n      showDenyButton: true,\r\n      showCancelButton: false,\r\n      confirmButtonText: `삭제`,\r\n      denyButtonText: `취소`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        setData(prevState => {\r\n          return prevState.filter((val) => val.commentChild.id !== comment.commentChild.id);\r\n        });\r\n  \r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/children/${comment.commentChild.id}`, {\r\n            method : 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            Swal.fire({\r\n              title: data.msg,\r\n              icon: \"success\",\r\n          });\r\n        })\r\n        .catch(err => console.log(err, 'remove child comment trilog'));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ChildComment>\r\n        <UserContainer>\r\n          <img src={comment.author.profileImgUrl} />\r\n          <span>{comment.author.nickname}</span>\r\n        </UserContainer>\r\n        <Content>\r\n          {edit ? (\r\n            <>\r\n              <EditInput\r\n                type=\"text\"\r\n                value={childCommentEdit}\r\n                onChange={(e) => setChildCommentEdit(e.target.value)}\r\n                onKeyPress={() => {\r\n                  if (window.event.keyCode === 13) {\r\n                    editComment();\r\n                  }\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div>{comment.commentChild.contents}</div>\r\n              <Date>{comment.commentChild.modifiedAt}</Date>\r\n            </>\r\n          )}\r\n        </Content>\r\n      </ChildComment>\r\n      <Likes>\r\n        <LikeSpan>\r\n          <div onClick={hitLike}>\r\n            <CommentLike />\r\n          </div>\r\n          <span>+{likeNum}</span>\r\n        </LikeSpan>\r\n        {comment.user.isMembers ? (\r\n          <>\r\n            <EditButton\r\n              type=\"button\"\r\n              value={edit ? \"취소\" : \"수정\"}\r\n              onClick={showEdit}\r\n            />\r\n            <DeleteButton type=\"button\" value=\"삭제\" onClick={deleteComment} />\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Likes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardChildComment;\r\n\r\nconst ChildComment = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n  font-family: \"AppleSDGothicNeoB\";\r\n\r\n  & img {\r\n    width: 2.375rem;\r\n    border-radius: 50%;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  \r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Likes = styled.div`\r\n  margin: 0.5rem 0 0.5rem 2.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & span {\r\n    width: 65px;\r\n  }\r\n`;\r\n\r\nconst LikeSpan = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & svg {\r\n    cursor: pointer;\r\n    width: 1.2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  & span {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst EditButton = styled.input`\r\n  cursor: pointer;\r\n  background-color: #2b61e1;\r\n  color: #fff;\r\n  border: 1px solid #2b61e1;\r\n  border-radius: 5px;\r\n  padding: 0.1rem 0.5rem;\r\n  margin: 0 0.5rem;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst DeleteButton = styled.input`\r\n  cursor: pointer;\r\n  background-color: #f22d3f;\r\n  border: 1px solid #f22d3f;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  padding: 0.1rem 0.5rem;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst EditInput = styled.input`\r\n  outline: none;\r\n  border: 0;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 1px solid rgb(43, 97, 225, 0.6);\r\n  border-radius: 5px;\r\n  padding: 0 1rem;\r\n`;\r\n","/Users/parkminkyung/Desktop/git/triport/src/redux/modules/trilog.js",["288"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { produce } from 'immer'; // 불변성 유지\r\nimport { config } from \"./config\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* Trilog - 트릴로그 */\r\nconst trilogSlice = createSlice({\r\n    name : \"trilog\",\r\n    initialState : {\r\n        main : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1,\r\n            filter : 'likeNum',\r\n        },\r\n        detail : {},\r\n        parent_comment : {\r\n            list : [],\r\n            is_last : false,\r\n            page : 1\r\n        },\r\n        loading : {\r\n            main_loading : true,\r\n            detail_loading : true,\r\n        }\r\n    },\r\n    reducers: {\r\n        // Trilog 메인 페이지 - 내용 로딩 여부\r\n        setMainLoading : (state, action) => produce(state, (draft) => {\r\n            draft.loading.main_loading = action.payload;\r\n        }),\r\n        // Trilog 상세 페이지 - 내용 로딩 여부\r\n        setDetailLoading : (state, action) => produce(state, (draft) => {\r\n            draft.loading.detail_loading = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 무한 스크롤 더 가져오기\r\n        setTrilogMainAdd : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = [...draft.main.list, ...action.payload.results];\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 수정 페이지 - 게시글 수정\r\n        setTrilogMainEdit : (state, action) => produce(state, (draft) => {\r\n            if(draft.main.list.length > 0) {\r\n                let idx = draft.main.list.findIndex((e) => e.information.id === parseInt(action.payload.id));\r\n                draft.main.list[idx].information.title = action.payload.title;\r\n                draft.main.list[idx].information.address = action.payload.address;\r\n                draft.main.list[idx].information.description = action.payload.description;\r\n    \r\n                if(action.payload.imageUrlList.length !== 0) {\r\n                    draft.main.list[idx].information.thumbNailUrl = action.payload.imageUrlList[0].imageFilePath;\r\n                } else {\r\n                    draft.main.list[idx].information.thumbNailUrl = '';\r\n                }\r\n            }\r\n        }),\r\n        // Trilog 메인 페이지 - 게시글 조회\r\n        setTrilogMain : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = action.payload.results;\r\n            draft.main.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 메인 페이지 - 필터 설정\r\n        setTrilogMainFilter : (state, action) => produce(state, (draft) => {\r\n            draft.main.filter = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\r\n        setTrilogMainPage : (state, action) => produce(state, (draft) => {\r\n            draft.main.page = action.payload;\r\n        }),\r\n        // Trilog 메인 페이지 - 게시글 좋아요\r\n        setTrilogLike : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.main.list.findIndex((e) => e.information.id === action.payload);\r\n            draft.main.list[idx].member.isLike = !draft.main.list[idx].member.isLike;\r\n            if(draft.main.list[idx].member.isLike) {\r\n                draft.main.list[idx].information.likeNum += 1;\r\n            } else {\r\n                draft.main.list[idx].information.likeNum -= 1;\r\n            }\r\n        }),\r\n        // Trilog 상세 페이지 - 게시물 삭제\r\n        removeTrilogDetail : (state, action) => produce(state, (draft) => {\r\n            draft.main.list = draft.main.list.filter((e) => e.information.id !== parseInt(action.payload));\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\r\n        setTrilogParentCommentPage : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.page = action.payload;\r\n        }),\r\n        // Trilog 상세 페이지 - 해당 게시글 조회\r\n        setTrilogDetail : (state, action) => produce(state, (draft) => {\r\n            draft.detail = action.payload.results;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 조회\r\n        setTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = action.payload.results;\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\r\n        addTrilogParentCommentScroll : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, ...action.payload.results];\r\n            draft.parent_comment.is_last = action.payload.last;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 수정\r\n        editTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload.results.commentParent.id);\r\n            draft.parent_comment.list[idx].commentParent.contents = action.payload.results.commentParent.contents;\r\n            draft.parent_comment.list[idx].commentParent.createdAt = action.payload.results.commentParent.createdAt;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 삭제\r\n        removeTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            draft.parent_comment.list.splice(idx, 1);\r\n        }),\r\n        // Trilog 상세 페이지 - 게시글 좋아요\r\n        setTrilogDetailLike : (state, action) => produce(state, (draft) => {\r\n            if(draft.detail.member.isLike){\r\n                draft.detail.information.likeNum -= 1;\r\n            } else {\r\n                draft.detail.information.likeNum += 1;\r\n            }\r\n            \r\n            draft.detail.member.isLike = !draft.detail.member.isLike;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 작성\r\n        addTrilogParentComment : (state, action) => produce(state, (draft) => {\r\n            draft.parent_comment.list = [...draft.parent_comment.list, action.payload.results];\r\n            draft.detail.information.commentNum += 1;\r\n        }),\r\n        // Trilog 상세 페이지 - 부모 댓글 좋아요\r\n        setTrilogParentCommentLike: (state, action) => produce(state, (draft) => {\r\n            let idx = draft.parent_comment.list.findIndex((e) => e.commentParent.id === action.payload);\r\n            if(draft.parent_comment.list[idx].user.isLike){\r\n                draft.parent_comment.list[idx].commentParent.likeNum -= 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            } else {\r\n                draft.parent_comment.list[idx].commentParent.likeNum += 1;\r\n                draft.parent_comment.list[idx].user.isLike = !draft.parent_comment.list[idx].user.isLike;\r\n            }\r\n        }),\r\n    },\r\n});\r\n\r\n// Trilog 메인 게시물 조회\r\nconst getTrilogMain = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        dispatch(setMainLoading(true));\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.main.page;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 error\"));\r\n        dispatch(setMainLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 조회 - 필터 및 검색 적용시\r\nconst getTrilogMainFilter = (filter, keyword) => {\r\n    return function (dispatch, getState, { history }) {\r\n        dispatch(setMainLoading(true));\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = 1;\r\n        fetch(`${config}/api/all/boards?page=${page}&filter=${filter}&keyword=${keyword}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(page === 1){\r\n                dispatch(setTrilogMain(data));\r\n            } else {\r\n                dispatch(setTrilogMainAdd(data));\r\n            }\r\n            \r\n            if(!data.last) {\r\n                dispatch(setTrilogMainPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogMainPage(1));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"메인 필터 error\"));\r\n\r\n        dispatch(setMainLoading(false));\r\n        dispatch(setTrilogMainFilter(filter));\r\n    };\r\n};\r\n\r\n// Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\r\nconst getTrilogMainMyPage = () => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/member`;\r\n    \r\n        fetch(api, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization: `${access_token}`,\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            dispatch(setTrilogMain(data));\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n};\r\n\r\n// Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 좋아요한 게시물 조회\r\nconst getTrilogMainMyPageLike = () => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/member/like`;\r\n    \r\n        fetch(api, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization: `${access_token}`,\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            dispatch(setTrilogMain(data));\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n};\r\n\r\n// Trilog 게시물 상세 조회\r\nconst getTrilogDetail = (id) => {\r\n    return async function (dispatch, getState, { history }) {\r\n        dispatch(setDetailLoading(true));\r\n        const page = getState().trilog.parent_comment.page;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const detail = await fetch(`${config}/api/all/boards/detail/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n        .catch(err => console.log(err, 'trilog detail'));\r\n\r\n        const comment = await fetch(`${config}/api/all/boards/comments/parents/${id}?page=1`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(!data.last) {\r\n                dispatch(setTrilogParentCommentPage(page + 1));\r\n            } else {\r\n                dispatch(setTrilogParentCommentPage(1));\r\n            }\r\n            return data;\r\n        })\r\n        .catch(err => console.log(err, 'trilog parent comment'));\r\n\r\n        dispatch(setTrilogDetail(detail));\r\n        dispatch(setTrilogParentComment(comment));\r\n        dispatch(setDetailLoading(false));\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 등록\r\nconst addTrilog = (trilog) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const filter = getState().trilog.main.filter;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        if(trilog.is_edit) {\r\n            fetch(`${config}/api/boards/${trilog.id}`, {\r\n                method: 'PUT',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.status === 401) {\r\n                    Swal.fire({\r\n                        title: \"로그인\",\r\n                        text: \"로그인을 먼저 해주세요.\",\r\n                        icon: \"warning\",\r\n                        showCancelButton: true,\r\n                        confirmButtonColor: \"#3085d6\",\r\n                        cancelButtonColor: \"#d33\",\r\n                        confirmButtonText: \"로그인하기\",\r\n                        cancelButtonText: \"닫기\",\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            history.push(\"/login\");\r\n                        }\r\n                    });\r\n                } else if(data.status === 200) {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"success\",\r\n                    });\r\n                    window.scrollTo(0, 0);\r\n                    dispatch(setTrilogMainEdit(trilog));\r\n                    history.push('/trilog');\r\n                } else {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Edit'))\r\n        } else {\r\n            fetch(`${config}/api/boards/`, {\r\n                method: 'POST',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `${access_token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    title : trilog.title,\r\n                    address : trilog.address,\r\n                    description : trilog.description,\r\n                    imageUrlList : trilog.imageUrlList,\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.status === 401) {\r\n                    Swal.fire({\r\n                        title: \"로그인\",\r\n                        text: \"로그인을 먼저 해주세요.\",\r\n                        icon: \"warning\",\r\n                        showCancelButton: true,\r\n                        confirmButtonColor: \"#3085d6\",\r\n                        cancelButtonColor: \"#d33\",\r\n                        confirmButtonText: \"로그인하기\",\r\n                        cancelButtonText: \"닫기\",\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            history.push(\"/login\");\r\n                        }\r\n                    });\r\n                } else if(data.status === 200) {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"success\",\r\n                        showCancelButton: false,\r\n                        confirmButtonColor: \"#3085d6\",\r\n                        confirmButtonText: \"확인\"\r\n                    }).then((result) => {\r\n                        if(result.isConfirmed && data.subMsg !== \"no change\") {\r\n                            Swal.fire({\r\n                                title: \"🎉축하드려요🎉\",\r\n                                html: `🥳 당신의 등급은 ${data.subMsg}! <br/> 등급이 궁금하다면 마이페이지에 가보세요!`,\r\n                                icon: \"success\"\r\n                            })\r\n                        }\r\n                    });\r\n                    window.scrollTo(0, 0);\r\n                    dispatch(setTrilogMainPage(1));\r\n                    dispatch(setTrilogMainFilter(\"likeNum\"));\r\n                    dispatch(getTrilogMain(\"likeNum\", \"\"));\r\n                    history.push('/trilog');\r\n                } else {\r\n                    Swal.fire({\r\n                        title: data.msg,\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err, 'Trilog Add'))\r\n        }\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 삭제\r\nconst removeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(removeTrilogDetail(id));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n                history.replace('/trilog');\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'Trilog Delete'))\r\n    };\r\n};\r\n\r\n// Trilog 메인 게시물 좋아요\r\nconst setLikeTrilog = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else {\r\n                dispatch(setTrilogLike(id));\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog like'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 좋아요\r\nconst setLikeTrilogDetail = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/like/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401){\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else {\r\n                dispatch(setTrilogDetailLike());\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'trilog detail like'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 더 보기\r\nconst getParentCommentScroll = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const page = getState().trilog.parent_comment.page;\r\n        fetch(`${config}/api/all/boards/comments/parents/${id}?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `${access_token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                if(!data.last) {\r\n                    dispatch(setTrilogParentCommentPage(page + 1));\r\n                } else {\r\n                    dispatch(setTrilogParentCommentPage(1));\r\n                }\r\n    \r\n                dispatch(addTrilogParentCommentScroll(data));\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, \"parent comment scroll error\"));\r\n    }\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 추가\r\nconst addParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(addTrilogParentComment(data));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err, 'add comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 수정\r\nconst editParentComment = (id, contents) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                contents: contents,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(editTrilogParentComment(data));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'edit comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 삭제\r\nconst removeParentComment = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        fetch(`${config}/api/boards/comments/parents/${id}`, {\r\n            method : 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(removeTrilogParentComment(id));\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'remove comment trilog'));\r\n    };\r\n};\r\n\r\n// Trilog 상세 게시물 - 부모 댓글 좋아요\r\nconst setParentCommentLike = (id) => {\r\n    return function (dispatch, getState, { history }) {\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const api = `${config}/api/boards/comments/parents/like/${id}`;\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `${access_token}`,\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.status === 401) {\r\n                Swal.fire({\r\n                    title: \"로그인\",\r\n                    text: \"로그인을 먼저 해주세요.\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"로그인하기\",\r\n                    cancelButtonText: \"닫기\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                });\r\n            } else if(data.status === 200) {\r\n                dispatch(setTrilogParentCommentLike(id));\r\n            } else {\r\n                Swal.fire({\r\n                    title: data.msg,\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        })\r\n        .catch(err => console.log(err, 'comment like'));\r\n    };\r\n};\r\n\r\n\r\nconst actionCreators = {\r\n    getTrilogMain, // Trilog 메인 게시물 조회\r\n    getTrilogMainFilter, // Trilog 메인 게시물 조회 - 필터 및 검색 적용시\r\n    getTrilogMainMyPage, // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 쓴 글 조회\r\n    getTrilogMainMyPageLike, // Trilog 마이 페이지 게시물 조회 - 마이 페이지 내가 좋아요한 게시물 조회\r\n    getTrilogDetail, // Trilog 게시물 상세 조회\r\n    addTrilog, // Trilog 메인 게시물 등록\r\n    removeTrilog, // Trilog 메인 게시물 삭제\r\n    setLikeTrilog, // Trilog 메인 게시물 좋아요\r\n    setLikeTrilogDetail, // Trilog 상세 게시물 좋아요\r\n    getParentCommentScroll, // Trilog 상세 게시물 - 부모 댓글 더 보기\r\n    addParentComment, // Trilog 상세 게시물 - 부모 댓글 추가\r\n    editParentComment, // Trilog 상세 게시물 - 부모 댓글 수정\r\n    removeParentComment, // Trilog 상세 게시물 - 부모 댓글 삭제\r\n    setParentCommentLike, // Trilog 상세 게시물 - 부모 댓글 좋아요\r\n};\r\n\r\nexport const { \r\n    setMainLoading, // Trilog 메인 페이지 - 내용 로딩 여부\r\n    setDetailLoading, // Trilog 상세 페이지 - 내용 로딩 여부\r\n    setTrilogMainAdd, // Trilog 메인 페이지 - 무한 스크롤 더 가져오기\r\n    setTrilogMainEdit, // Trilog 수정 페이지 - 게시글 수정\r\n    setTrilogMain, // Trilog 메인 페이지 - 게시글 조회\r\n    setTrilogMainFilter, // Trilog 메인 페이지 - 필터 설정\r\n    setTrilogMainPage, // Trilog 메인 페이지 - 무한 스크롤 페이지 설정(다음 게시물이 있나 없나)\r\n    setTrilogLike, // Trilog 메인 페이지 - 게시글 좋아요\r\n    removeTrilogDetail, // Trilog 상세 페이지 - 게시물 삭제\r\n    setTrilogParentCommentPage, // Trilog 상세 페이지 - 부모 댓글 페이징 설정(다음 부모 댓글 있나 없나)\r\n    setTrilogDetail, // Trilog 상세 페이지 - 해당 게시글 조회\r\n    setTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 조회\r\n    addTrilogParentCommentScroll, // Trilog 상세 페이지 - 부모 댓글 페이징(다음 부모 댓글 조회)\r\n    editTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 수정\r\n    removeTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 삭제\r\n    setTrilogDetailLike, // Trilog 상세 페이지 - 게시글 좋아요\r\n    addTrilogParentComment, // Trilog 상세 페이지 - 부모 댓글 작성\r\n    setTrilogParentCommentLike, // Trilog 상세 페이지 - 부모 댓글 좋아요\r\n} = trilogSlice.actions;\r\nexport default trilogSlice.reducer;\r\nexport { actionCreators };","/Users/parkminkyung/Desktop/git/triport/src/pages/FindPassword.js",["289"],"/Users/parkminkyung/Desktop/git/triport/src/redux/modules/config.js",[],"/Users/parkminkyung/Desktop/git/triport/src/shared/Spinner2.js",[],"/Users/parkminkyung/Desktop/git/triport/src/pages/TrilsSearch.js",["290","291","292","293"],"/Users/parkminkyung/Desktop/git/triport/src/redux/modules/profile.js",["294"],"/Users/parkminkyung/Desktop/git/triport/src/shared/OAuth2RedirectHandler.js",["295","296"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner2\";\n\nconst OAuth2RedirectHandler = (props) => {\n  const dispatch = useDispatch();\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n  console.log(code);\n\n  React.useEffect(async () => {\n    await dispatch(userActions.kakaoLogin(code));\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default OAuth2RedirectHandler;\n","/Users/parkminkyung/Desktop/git/triport/src/shared/OAuth2LogoutHandler.js",["297"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner2\";\nimport { history } from \"redux/configureStore\";\n\nconst OAuth2LogoutHandler = (props) => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(userActions.kakaoLogout());\n    dispatch(userActions.logout());\n    history.replace(\"/\");\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default OAuth2LogoutHandler;\n","/Users/parkminkyung/Desktop/git/triport/src/pages/TrilsWrite.js",["298","299"],"/Users/parkminkyung/Desktop/git/triport/src/components/trils/Video.js",["300","301"],"/Users/parkminkyung/Desktop/git/triport/src/pages/About.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React from \"react\";\r\nimport \"shared/scss/About.scss\";\r\nimport styled from \"styled-components\";\r\nimport { Logo, Play, LikeFill } from \"media/svg/Svg\";\r\nimport Tripper from \"media/image/about-tripper.jpg\";\r\nimport TrilsImage1 from \"media/image/about-trils.jpg\";\r\nimport TrilsImage2 from \"media/image/about-trils2.jpg\";\r\nimport Park from \"media/image/park2.png\";\r\nimport Hoon from \"media/image/hoon.png\";\r\nimport Chan from \"media/image/chan.jpg\";\r\nimport Jin from \"media/image/jin.png\";\r\nimport Min from \"media/image/min.png\";\r\nimport Jisoo from \"media/image/jisoo.png\";\r\nimport Yoon from \"media/image/yoon.png\";\r\nimport Sally from \"media/image/Sally.png\";\r\nimport Fred from \"media/image/Fred.png\";\r\nimport Trilog2 from \"media/image/Trilog_detail.png\";\r\n\r\nconst About = () => {\r\n  const lazyLoad = (target) => {\r\n    const io = new IntersectionObserver((e, o) => {\r\n      e.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          const img = entry.target; // DOM\r\n          const src = img.getAttribute(\"data-lazy\");\r\n          img.setAttribute(\"src\", src);\r\n          o.disconnect();\r\n        }\r\n      });\r\n    });\r\n    io.observe(target);\r\n  };\r\n\r\n  const parallax = (target) => {\r\n    const io = new IntersectionObserver((e, o) => {\r\n      e.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          const div = entry.target; // DOM\r\n          const arr = div.classList;\r\n\r\n          if (arr.contains(\"up\")) {\r\n            div.classList.add(\"showUp\");\r\n          } else if (arr.contains(\"left\")) {\r\n            div.classList.add(\"showLeft\");\r\n          } else {\r\n            div.classList.add(\"showRight\");\r\n          }\r\n\r\n          o.disconnect();\r\n        }\r\n      });\r\n    });\r\n    io.observe(target);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const imgs = document.querySelectorAll(\"img\");\r\n    imgs.forEach(lazyLoad);\r\n\r\n    const targets = document.querySelectorAll(\".animate\");\r\n    targets.forEach(parallax);\r\n  }, []);\r\n\r\n  return (\r\n    <AboutContainer>\r\n      <IntroWrapper>\r\n        <LogoWrapper>\r\n          <Logo />\r\n        </LogoWrapper>\r\n        <Description>\r\n          <div>무작정 어디론가 떠나 힐링 하고 싶은데,</div>\r\n          <div>어디로 가야 할지 고민 중이신가요?</div>\r\n          <div>여행을 좋아하는, 여행을 가고 싶은, TRAVELER!</div>\r\n          <div>\r\n            바로 여러분을 위한 공간, <span>TRIPORT✈️</span>입니다.\r\n          </div>\r\n        </Description>\r\n        <TripperWrapper className=\"animate up\">\r\n          <img data-lazy={Tripper} />\r\n        </TripperWrapper>\r\n      </IntroWrapper>\r\n      <TrilsWrapper>\r\n        <CenterWrapper>\r\n          <TitleWrapper>\r\n            <span>Trils</span>\r\n          </TitleWrapper>\r\n          <DivideWrapper>\r\n            <LeftWrapper>\r\n              <Info>\r\n                <div>짜릿했던 순간!</div>\r\n                <div>\r\n                  생생한 영상을 <span>Trils</span>에 올려주세요.\r\n                </div>\r\n                <div>영상 속 여행이 궁금하다면, 💙를 눌러보세요!</div>\r\n                <div>\r\n                  <span>Trilog</span>에 여행 이야기가 올라올지도 몰라요..!😄\r\n                </div>\r\n              </Info>\r\n              <CardWrapper className=\"animate left\">\r\n                <User>\r\n                  <img data-lazy={Sally} />\r\n                  <span>Sally</span>\r\n                </User>\r\n                <TrilsCard url={TrilsImage2}>\r\n                  <Play />\r\n                </TrilsCard>\r\n                <LikeWrapper>\r\n                  <LikeFill />\r\n                  <span>좋아요+13</span>\r\n                  <Tag>#제주도</Tag>\r\n                  <Tag>#힐링</Tag>\r\n                  <Tag>#떠나자</Tag>\r\n                </LikeWrapper>\r\n              </CardWrapper>\r\n            </LeftWrapper>\r\n            <RightWrapper>\r\n              <CardWrapper className=\"animate right\">\r\n                <User>\r\n                  <img data-lazy={Fred} />\r\n                  <span>Fred</span>\r\n                </User>\r\n                <TrilsCard url={TrilsImage1}>\r\n                  <Play />\r\n                </TrilsCard>\r\n                <LikeWrapper>\r\n                  <LikeFill />\r\n                  <span>좋아요+7</span>\r\n                  <Tag>#강원도</Tag>\r\n                  <Tag>#캠핑</Tag>\r\n                  <Tag>#노을</Tag>\r\n                </LikeWrapper>\r\n              </CardWrapper>\r\n            </RightWrapper>\r\n          </DivideWrapper>\r\n        </CenterWrapper>\r\n      </TrilsWrapper>\r\n      <TrilogWrapper>\r\n        <CenterWrapper>\r\n          <TitleWrapper>\r\n            <span>Trilog</span>\r\n          </TitleWrapper>\r\n          <Info>\r\n            <div>특별했던 여행!</div>\r\n            <div>그 이야기를 글과 사진, 지도로 담을 수 있어요.</div>\r\n            <div>\r\n              <span>'나만의 여행'</span>과 정보를 자세히 공유할 수 있답니다!\r\n            </div>\r\n            <div>멋진 기억을 TRAVELER들과 추억해보시기 바랍니다.🥰</div>\r\n          </Info>\r\n          <ImgWrapper className=\"animate up\">\r\n            <img data-lazy={Trilog2} />\r\n          </ImgWrapper>\r\n        </CenterWrapper>\r\n      </TrilogWrapper>\r\n      <MemberWrapper>\r\n        <CenterWrapper>\r\n          <TitleWrapper>\r\n            <span>Triport 팀 소개</span>\r\n          </TitleWrapper>\r\n          <SectionWrapper>\r\n            <span>리더</span>\r\n          </SectionWrapper>\r\n          <div>\r\n            <MemberCard className=\"animate right\">\r\n              <MemberImg data-lazy={Park} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>박은진</Name>\r\n                  <FeatureTag>로그인</FeatureTag>\r\n                  <FeatureTag>회원가입</FeatureTag>\r\n                  <FeatureTag>마이페이지</FeatureTag>\r\n                  <FeatureTag>AWS</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  차근차근 생각을 실천하는 백엔드 개발자 박은진입니다!😊 <br />\r\n                  TRIPORT 프로젝트를 통해 서비스의 기획, 코드 구성과 인프라에\r\n                  대한 고민을 하나씩 이루는 재미를 알아가고 있습니다. 성장의\r\n                  계기가된 팀에서, 좋은 팀원들과 특별한 이야기를 담은 TRIPORT✈️\r\n                  많이 이용해 주세요! BUG, VOC 등 피드백은 언제나\r\n                  감사드립니다.🙏🏻\r\n                  <br />\r\n                  Have a good TRIPORT!💙\r\n                </div>\r\n                <div>\r\n                  <BlueTag>github:</BlueTag>{\" \"}\r\n                  <a href=\"https://github.com/iamzin\" target=\"_blank\">\r\n                    https://github.com/iamzin\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>blog:</BlueTag>{\" \"}\r\n                  <a href=\"https://iamzin.github.io/\" target=\"_blank\">\r\n                    https://iamzin.github.io/\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> eunzin.park@gmail.com\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n            <MemberCard className=\"animate right\">\r\n              <MemberImg data-lazy={Hoon} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>김병훈</Name>\r\n                  <FeatureTag>Trils</FeatureTag>\r\n                  <FeatureTag>채널톡</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  프론트엔드 개발자 김병훈입니다. 여행을 좋아하는 사람 중\r\n                  하나로써 영상과 사진을 업로드하고 다른 사람들의 글도 보면서 그\r\n                  다음 여행할 때 여행지를 참고하거나 눈으로 힐링할 수 있으면\r\n                  좋을 것 같다는 취지로 이 프로젝트를 진행하게 되었습니다.\r\n                  감사합니다.\r\n                </div>\r\n                <div>\r\n                  <BlueTag>github:</BlueTag>{\" \"}\r\n                  <a href=\"https://github.com/kbyunghoon\" target=\"_blank\">\r\n                    https://github.com/kbyunghoon\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>blog:</BlueTag>{\" \"}\r\n                  <a href=\"https://velog.io/@kbhoon\" target=\"_blank\">\r\n                    https://velog.io/@kbhoon\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> kbhthl11@gmail.com\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n          </div>\r\n          <SectionWrapper>\r\n            <span>프론트엔드</span>\r\n          </SectionWrapper>\r\n          <div>\r\n            <MemberCard className=\"animate left\">\r\n              <MemberImg data-lazy={Chan} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>정찬엽</Name>\r\n                  <FeatureTag>Trilog</FeatureTag>\r\n                  <FeatureTag>About</FeatureTag>\r\n                  <FeatureTag>AWS</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  매일 성장하는 FE개발자, 정찬엽입니다!😄 즐거운 트릴하세요!\r\n                </div>\r\n                <div>\r\n                  <BlueTag>github:</BlueTag>{\" \"}\r\n                  <a href=\"https://github.com/rayrayj92\" target=\"_blank\">\r\n                    https://github.com/rayrayj92\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>blog:</BlueTag>{\" \"}\r\n                  <a href=\"https://kodepaper.tistory.com/\" target=\"_blank\">\r\n                    https://kodepaper.tistory.com/\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> ops3199@outlook.kr\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n            <MemberCard className=\"animate left\">\r\n              <MemberImg data-lazy={Min} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>박민경</Name>\r\n                  <FeatureTag>로그인</FeatureTag>\r\n                  <FeatureTag>회원가입</FeatureTag>\r\n                  <FeatureTag>마이페이지</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  TRIPORT에 많은 애정을 꾹꾹 눌러담은 박민경입니다 :)\r\n                  <br />\r\n                  그럼, Traveler 여러분! 모두 Happy TRIPORT~ ✈️🥰\r\n                </div>\r\n                <div>\r\n                  <BlueTag>github:</BlueTag>{\" \"}\r\n                  <a href=\"https://github.com/pmk2424\" target=\"_blank\">\r\n                    https://github.com/pmk2424\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>blog:</BlueTag>{\" \"}\r\n                  <a href=\"https://velog.io/@pmk4236\" target=\"_blank\">\r\n                    https://velog.io/@pmk4236\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> pmk42360@gmail.com\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n          </div>\r\n          <SectionWrapper>\r\n            <span>백엔드</span>\r\n          </SectionWrapper>\r\n          <div>\r\n            <MemberCard className=\"animate right\">\r\n              <MemberImg data-lazy={Yoon} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>손윤환</Name>\r\n                  <FeatureTag>Trils</FeatureTag>\r\n                  <FeatureTag>AWS</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  자유롭게 여행하듯 삶을 살고 싶은 손윤환이라고 합니다😘\r\n                  <br />제 개발자 여행이 여러분께 잠시나마 즐거움을 선물할 수\r\n                  있었으면 좋겠습니다😁\r\n                </div>\r\n                <div>\r\n                  <BlueTag>github:</BlueTag>{\" \"}\r\n                  <a href=\"https://github.com/beadoer1\" target=\"_blank\">\r\n                    https://github.com/beadoer1\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>blog:</BlueTag>{\" \"}\r\n                  <a href=\"https://beadoer1.github.io/\" target=\"_blank\">\r\n                    https://beadoer1.github.io/\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> beadoer1@gmail.com\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n            <MemberCard className=\"animate right\">\r\n              <MemberImg data-lazy={Jin} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>채진욱</Name>\r\n                  <FeatureTag>Trilog</FeatureTag>\r\n                  <FeatureTag>마이페이지</FeatureTag>\r\n                  <FeatureTag>AWS</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  😄 하루하루 개발의 즐거움을 알아가고 있는 채진욱이라고 합니다.{\" \"}\r\n                  <br />\r\n                  Triport를 통해 여행이 쉽지 않은 시국이지만 서로의 경험을\r\n                  공유하면서 대리만족을 할 수 있으셨으면 좋겠습니다! 🎉\r\n                </div>\r\n                <div>\r\n                  <BlueTag>github:</BlueTag>{\" \"}\r\n                  <a href=\"https://github.com/cowlsdnr77\" target=\"_blank\">\r\n                    https://github.com/cowlsdnr77\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>blog:</BlueTag>{\" \"}\r\n                  <a href=\"https://velog.io/@cowlsdnr77\" target=\"_blank\">\r\n                    https://velog.io/@cowlsdnr77\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> cowlsdnr77@naver.com\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n          </div>\r\n          <SectionWrapper>\r\n            <span>디자인</span>\r\n          </SectionWrapper>\r\n          <div>\r\n            <MemberCard className=\"animate right\">\r\n              <MemberImg data-lazy={Jisoo} />\r\n              <MemberText>\r\n                <NameTag>\r\n                  <Name>안지수</Name>\r\n                  <FeatureTag>갓지수님</FeatureTag>\r\n                  <FeatureTag>Adobe XD</FeatureTag>\r\n                </NameTag>\r\n                <div>\r\n                  <BlueTag>portfolio:</BlueTag>{\" \"}\r\n                  <a\r\n                    href=\"https://jisooahn3582.wixsite.com/my-site\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    https://jisooahn3582.wixsite.com/my-site\r\n                  </a>\r\n                </div>\r\n                <div>\r\n                  <BlueTag>email:</BlueTag> js3582@naver.com\r\n                </div>\r\n              </MemberText>\r\n            </MemberCard>\r\n          </div>\r\n        </CenterWrapper>\r\n      </MemberWrapper>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nconst AboutContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IntroWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n  width: 100%;\r\n  font-family: paybooc-Bold;\r\n  font-size: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: end;\r\n\r\n  & svg {\r\n    width: 268px;\r\n\r\n    @media (max-width: 768px) {\r\n      width: 200px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      width: 150px;\r\n    }\r\n  }\r\n\r\n  & span {\r\n    margin-left: 12px;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    font-size: 25px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  width: 100%;\r\n  font-family: paybooc-Light;\r\n  font-size: 20px;\r\n  margin-top: 50px;\r\n\r\n  & div {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 1.2rem 0;\r\n  }\r\n\r\n  & span {\r\n    font-family: paybooc-bold;\r\n    color: #2b61e1;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    font-size: 19px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst TripperWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 50px 0 100px 0;\r\n  max-width: 100%;\r\n\r\n  & img {\r\n    width: 31.25rem;\r\n    height: 28.875rem;\r\n\r\n    @media (max-width: 980px) {\r\n      width: 25rem;\r\n      height: 23.125rem;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      width: 18.75rem;\r\n      height: 17.375rem;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      width: 12.5rem;\r\n      height: 11.563rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TrilsWrapper = styled.div`\r\n    width: 100%;\r\n    height: 1200px;\r\n    background-color: #F2F6FF;\r\n`;\r\n\r\nconst CenterWrapper = styled.div`\r\n  width: 900px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 980px) {\r\n    width: 100%;\r\n    height: 100vh;\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 70px;\r\n\r\n  & span {\r\n    font-family: paybooc-bold;\r\n    font-size: 1.875rem;\r\n    color: #2b61e1;\r\n\r\n    @media (max-width: 980px) {\r\n      font-size: 1.75rem;\r\n      margin-left: 1.25rem;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      font-size: 1.563rem;\r\n      margin-left: 3.125rem;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      font-size: 1.375rem;\r\n      margin-left: 1.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DivideWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst LeftWrapper = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n\r\n  @media (max-width: 980px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  font-family: paybooc-Light;\r\n  font-size: 1.25rem;\r\n  margin: 1.875rem 0 3.438rem 0;\r\n\r\n  & div {\r\n    margin: 1.2rem 0;\r\n  }\r\n\r\n  & span {\r\n    font-family: paybooc-bold;\r\n    color: #2b61e1;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    font-size: 1.188rem;\r\n    margin-left: 1.25rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1rem;\r\n    margin-left: 3.125rem;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 0.938rem;\r\n    margin-left: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  position: relative;\r\n\r\n  @media (max-width: 980px) {\r\n    margin-left: 1.25rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-left: 3.125rem;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    margin-left: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst User = styled.div`\r\n  position: absolute;\r\n  top: 1rem;\r\n  left: 1rem;\r\n  color: white;\r\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & img {\r\n    border-radius: 50%;\r\n    width: 2.188rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TrilsCard = styled.div`\r\n  width: 25rem;\r\n  height: 43.75rem;\r\n  background: url(${(props) => props.url}) no-repeat;\r\n  background-size: cover;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n\r\n  & svg {\r\n    width: 7.5rem;\r\n  }\r\n\r\n  @media (max-width: 980px) {\r\n    width: 18.75rem;\r\n    height: 31.25rem;\r\n  }\r\n`;\r\n\r\nconst LikeWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n    & svg {\r\n        width: 3.125rem;\r\n\r\n        @media (max-width: 980px) {\r\n            width: 2.5rem;\r\n        }\r\n    }\r\n  }\r\n\r\n  & span {\r\n    margin: 0 0.5rem;\r\n\r\n        @media (max-width: 980px) {\r\n            font-size: 0.875rem;\r\n        }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  font-family: paybooc-bold;\r\n  color: #2b61e1;\r\n`;\r\n\r\nconst RightWrapper = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  margin-top: 1.875rem;\r\n\r\n  @media (max-width: 980px) {\r\n    margin-right: 1.25rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-right: 3.125rem;\r\n  }\r\n\r\n  @media (max-width: 690px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst TrilogWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n    margin-top: 3.125rem;\r\n\r\n    & img {\r\n        width: 56.25rem;\r\n\r\n        @media (max-width: 980px) {\r\n            width: 37.5rem;\r\n            margin-left: 1.25rem;\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            width: 25rem;\r\n            margin-left: 3.125rem;\r\n        }\r\n    \r\n        @media (max-width: 600px) {\r\n            width: 18.75rem;\r\n            margin-left: 1.25rem;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      width: 400px;\r\n      margin-left: 50px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      width: 300px;\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MemberWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 2700px;\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 3.125rem 0;\r\n\r\n  & span {\r\n    font-family: paybooc-bold;\r\n    font-size: 18px;\r\n    color: #2b61e1;\r\n\r\n    @media (max-width: 980px) {\r\n      margin-left: 1.25rem;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      margin-left: 3.125rem;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      margin-left: 1.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MemberCard = styled.div`\r\n    width: 56.25rem;\r\n    height: 17.5rem;\r\n    box-shadow: 0px 3px 6px #2B61E143;\r\n    border-radius: 10px;\r\n    margin: 1.875rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 90%;\r\n        height: 100%;\r\n        margin: 1.875rem auto;\r\n        flex-direction: column;\r\n        font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MemberImg = styled.img`\r\n  width: 130px;\r\n  height: 130px;\r\n  margin: 30px;\r\n`;\r\n\r\nconst MemberText = styled.div`\r\n  width: 37.5rem;\r\n\r\n  & div {\r\n    margin: 0.5rem 0;\r\n\r\n    @media (max-width: 768px) {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    font-size: 12px;\r\n    box-sizing: border-box;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n\r\nconst NameTag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-family: paybooc-bold;\r\n  font-size: 20px;\r\n  color: #5a5a5a;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst FeatureTag = styled.span`\r\n  font-family: paybooc-Light;\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 0.75rem;\r\n  margin: 0 0.25rem;\r\n  border: 1px solid #2b61e1;\r\n  border-radius: 10px;\r\n  background-color: #2b61e1;\r\n  color: #fff;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0.1rem 0.5rem;\r\n    font-size: 0.55rem;\r\n  }\r\n`;\r\n\r\nconst BlueTag = styled.span`\r\n  color: #2b61e1;\r\n`;\r\n\r\nexport default About;\r\n","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetailTutorial.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsTutorial.js",["319","320","321","322"],"import React, { useRef, useState, useEffect, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport Hls from \"hls.js\";\nimport ProgressBar from \"./ProgressBar\";\nimport { HeartEmpty, HeartFill } from \"media/svg/Svg\";\nimport Swal from \"sweetalert2\";\n\nconst TrilsTutorial = (props) => {\n  const { open, history } = props;\n  const player = useRef(null);\n  const players = useRef(null);\n  const [completed, setCompleted] = useState(0);\n  const check = navigator.userAgent.toLowerCase();\n  const is_iphone = check.indexOf(\"iphone\") !== -1;\n\n  const params = {\n    src: props.information.videoUrl,\n  };\n\n  useEffect(() => {\n    if (is_iphone) {\n      return;\n    }\n    const hls = new Hls();\n    if (hls === undefined) {\n      return;\n    }\n    if (Hls.isSupported()) {\n      hls.attachMedia(player.current);\n      hls.config.debug = false;\n\n      hls.on(Hls.Events.MEDIA_ATTACHED, (event, data) => {\n        hls.loadSource(params.src);\n      });\n      hls.on(Hls.Events.ERROR, (event, data) => {\n        if (data.fatal) {\n          switch (data.type) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              console.log(\"네트워크 오류\");\n              hls.startLoad();\n              break;\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              console.log(\"미디어 오류\");\n              hls.recoverMediaError();\n              break;\n            default:\n              hls.destroy();\n              break;\n          }\n        }\n      });\n      return () => hls.destroy();\n    } else if (player.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      player.current.src = params.src;\n      player.current.addEventListener(\"loadedmetadata\", () => {\n        player.current.play();\n      });\n    }\n  }, [params.src]);\n\n  const hlsplay = () => {\n    if (player.current.readyState !== 4) {\n      return;\n    }\n    player.current.play();\n  };\n\n  const hlspause = () => {\n    if (player.current.readyState !== 4) {\n      return;\n    }\n    player.current.pause();\n  };\n\n  const mp4play = () => {\n    if (players.current.readyState !== 4) {\n      return;\n    }\n    players.current.play();\n  };\n\n  const mp4pause = () => {\n    if (players.current.readyState !== 4) {\n      return;\n    }\n    players.current.pause();\n  };\n\n  const like = () => {\n    Swal.fire({\n      title: \"좋아요 기능\",\n      text: \"로그인 후 좋아요를 누를 수 있습니다.\",\n      confirmButtonText: \"확인\",\n    });\n  };\n\n  const mobile_chk = () => {\n    history.push(\"/trils/tutorial\");\n  };\n\n  return (\n    <VideoCards>\n      <Profile>\n        <ProfileImg src={props.author.profileImgUrl} />\n        <ProfileId>{props.author.nickname}</ProfileId>\n      </Profile>\n      {is_iphone ? (\n        <VideoPlay src={params.src} loop autoPlay muted playsInline />\n      ) : (\n        <VideoPlay\n          onMouseOver={hlsplay}\n          onMouseLeave={hlspause}\n          ref={player}\n          muted\n          loop\n          onTimeUpdate={() => {\n            setCompleted(\n              (player.current.currentTime / player.current.duration) * 100\n            );\n          }}\n        />\n      )}\n      <ProgressBar bgcolor={\"#6a1b9a\"} completed={completed} />\n      <PostBottom>\n        <BottomCov>\n          <LikeCov onClick={like}>\n            {props.member.isLike ? <HeartFill /> : <HeartEmpty />}\n          </LikeCov>\n        </BottomCov>\n        <PostLikeCnt>좋아요 +{props.information.likeNum}</PostLikeCnt>\n        <PostUserComment>\n          {props.information.hashtag.map((p, idx) => {\n            return (\n              <Fragment key={idx}>\n                <Hash>#{p}</Hash>\n              </Fragment>\n            );\n          })}\n        </PostUserComment>\n      </PostBottom>\n      {window.innerWidth > 1024 ? (\n        <TutorialBg\n          onMouseOver={hlsplay}\n          onMouseLeave={hlspause}\n          onClick={open}\n        >\n          <TutorialTextCover>\n            <TutirialText>커서를 올리면</TutirialText>\n            <TutirialText>영상이 재생됩니다.</TutirialText>\n          </TutorialTextCover>\n          <TutorialTextCover>\n            <TutirialText2>화면을 클릭하면</TutirialText2>\n            <TutirialText2>화면을 크게</TutirialText2>\n            <TutirialText2>볼 수 있습니다.</TutirialText2>\n          </TutorialTextCover>\n        </TutorialBg>\n      ) : (\n        <>\n          <TutorialBgM onClick={mobile_chk}>\n            <TutorialTextCover>\n              <TutirialText>화면을 클릭하면</TutirialText>\n              <TutirialText>화면을 크게</TutirialText>\n              <TutirialText>볼 수 있습니다.</TutirialText>\n            </TutorialTextCover>\n          </TutorialBgM>\n        </>\n      )}\n    </VideoCards>\n  );\n};\n\nconst TutorialBgM = styled.div`\n  display: flex;\n  position: relative;\n  height: 45rem;\n  width: 25rem;\n  margin-top: -47.6rem;\n  z-index: 11;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  @media only screen and (max-width: 420px) {\n    width: 100%;\n  }\n`;\n\nconst TutorialTextCover = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nTrilsTutorial.defaultProps = {\n  information: {\n    id: 1,\n    likeNum: 3000,\n    modifiedAt: \"2021-05-14 00:00\",\n    videoType: \"m3u8\",\n    videoUrl:\n      \"https://d1nogx3a73keco.cloudfront.net/video/tutorials/tutorials.m3u8\",\n    posPlay: true,\n    hashtag: [\"트리포트\", \"사용자가이드\"],\n  },\n  author: {\n    nickname: \"Triport.kr\",\n    profileImgUrl:\n      \"https://d1nogx3a73keco.cloudfront.net/video/about/tripper.jpg\",\n  },\n  member: { isMembers: false, isLike: true },\n};\n\nconst TutorialBg = styled.div`\n  display: flex;\n  position: relative;\n  height: 45rem;\n  width: 100%;\n  margin-top: -47.8rem;\n  z-index: 11;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  opacity: 1;\n  transition: all 0.3s ease-in-out;\n  @media only screen and (max-width: 420px) {\n    width: 100%;\n  }\n  :hover {\n    & > :first-child > div {\n      opacity: 0;\n    }\n    & > :last-child > div {\n      opacity: 1;\n    }\n  }\n`;\n\nconst TutirialText = styled.div`\n  user-select: none;\n  opacity: 1;\n  color: white;\n  z-index: 12;\n  font-size: 3rem;\n  transition: all 0.3s ease-in-out;\n`;\n\nconst TutirialText2 = styled.div`\n  user-select: none;\n  opacity: 0;\n  color: white;\n  z-index: 12;\n  font-size: 3rem;\n  transition: all 0.3s ease-in-out;\n`;\n\nconst Uploading = styled.div`\n  display: flex;\n  height: 45rem;\n  width: 25rem;\n  margin: 0 auto;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: contain;\n  @media only screen and (max-width: 420px) {\n    width: 100%;\n  }\n`;\n\nconst Hash = styled.div`\n  user-select: none;\n  margin-left: 0.5rem;\n  font-family: \"AppleSDGothicNeoR\";\n  color: blue;\n`;\n\nconst PostBottom = styled.div`\n  margin-top: 1rem;\n  margin-left: 10px;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nconst PostLikeCnt = styled.div`\n  font-family: \"AppleSDGothicNeoR\";\n  display: flex;\n  user-select: none;\n`;\n\nconst PostUserComment = styled.div`\n  font-family: \"AppleSDGothicNeoR\";\n  display: flex;\n  margin-left: 18px;\n  cursor: pointer;\n`;\n\nconst VideoCards = styled.div`\n  display: flex;\n  max-width: 25rem;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n  ${(props) => (props.margin ? \"margin-right:2.5rem\" : \"\")};\n  margin-top: 1rem;\n  transition: 0.5s ease-in-out;\n  @media only screen and (min-width: 1024px) {\n    :hover {\n      transform: scale(1.03);\n    }\n  }\n  box-shadow: 0px 3px 6px #00000029;\n`;\n\nconst VideoPlay = styled.video`\n  display: flex;\n  height: 45rem;\n  width: 25rem;\n  margin: 0 auto;\n  object-fit: cover;\n  @media only screen and (max-width: 420px) {\n    width: 100%;\n  }\n`;\n\nconst Profile = styled.div`\n  user-select: none;\n  margin-bottom: -3rem;\n  display: flex;\n  z-index: 5;\n`;\n\nconst ProfileImg = styled.div`\n  --size: 38px;\n  width: var(--size);\n  height: var(--size);\n  border-radius: var(--size);\n  background-position: center;\n  background-image: url(${(props) => props.src});\n  background-color: white;\n  background-size: cover;\n  margin-left: 16px;\n  display: flex;\n  border: 1px solid #ededed;\n`;\n\nconst ProfileId = styled.div`\n  display: flex;\n  font-weight: 600;\n  font-size: 1rem;\n  margin-left: 11px;\n  align-items: center;\n  /* background:white; */\n  border-radius: 20px;\n  width: 100px;\n  color: white;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n`;\n\nconst LikeCov = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  z-index: 10;\n  & svg {\n    width: 1.5rem;\n  }\n`;\nconst BottomCov = styled.div`\n  display: flex;\n  margin-right: 0.7rem;\n`;\n\nexport default TrilsTutorial;\n","/Users/parkminkyung/Desktop/git/triport/src/shared/TrillsInfinityScroll.js",["323"],"import React from 'react';\nimport _ from 'lodash';\n\nconst TrillsInfinityScroll = (props) => {\n    const { callNext, is_next } = props;\n\n    const handleScroll = _.throttle(() => {\n\n        const {innerHeight} = window;\n        const {scrollHeight} = document.body;\n\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n \n        if(scrollHeight - innerHeight - scrollTop < 800) {\n            callNext();\n        }\n        \n    }, 300);\n\n    React.useEffect(() => {\n        if(!is_next){\n            window.addEventListener('scroll', handleScroll);\n        } else {\n            window.removeEventListener('scroll', handleScroll);\n        }\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [is_next]);\n\n    return (\n        <>\n            {props.children}\n        </>\n    );\n};\n\nexport default TrillsInfinityScroll;","/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetailM.js",["324","325","326"],"/Users/parkminkyung/Desktop/git/triport/src/components/trils/TrilsDetailTutorialM.js",["327","328","329","330","331","332","333","334"],"/Users/parkminkyung/Desktop/git/triport/src/shared/Spinner.js",[],"/Users/parkminkyung/Desktop/git/triport/src/components/PostVideo.js",["335","336"],"import React, { useRef, useState, useEffect, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport Hls from \"hls.js\";\nimport ProgressBar from \"./trils/ProgressBar\";\nimport { HeartEmpty, HeartFill } from \"media/svg/Svg\";\nimport { useDispatch } from \"react-redux\";\nimport { TrilsActions } from \"redux/modules/trils\";\nimport TrilsUploadMain from \"../media/image/trils_upload_main.png\";\nimport Swal from \"sweetalert2\";\n\nconst PostVideo = (props) => {\n  const { mr, history } = props;\n  const player = useRef(null);\n  const players = useRef(null);\n  const [completed, setCompleted] = useState(0);\n  const dispatch = useDispatch();\n  const check = navigator.userAgent.toLowerCase();\n  const is_iphone = check.indexOf(\"iphone\") !== -1;\n\n  const params = {\n    src: props.information.videoUrl,\n  };\n\n  useEffect(() => {\n    if (is_iphone) {\n      return;\n    }\n    const hls = new Hls();\n    if (hls === undefined) {\n      return;\n    }\n    if (Hls.isSupported()) {\n      hls.attachMedia(player.current);\n      hls.config.debug = false;\n\n      hls.on(Hls.Events.MEDIA_ATTACHED, (event, data) => {\n        hls.loadSource(params.src);\n      });\n      hls.on(Hls.Events.ERROR, (event, data) => {\n        if (data.fatal) {\n          switch (data.type) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              console.log(\"네트워크 오류\");\n              hls.startLoad();\n              break;\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              console.log(\"미디어 오류\");\n              hls.recoverMediaError();\n              break;\n            default:\n              hls.destroy();\n              break;\n          }\n        }\n      });\n      return () => hls.destroy();\n    } else if (player.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      player.current.src = params.src;\n      player.current.addEventListener(\"loadedmetadata\", () => {\n        player.current.play();\n      });\n    }\n  }, [params.src]);\n\n  const autoplay = (target) => {\n    const io = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            target.play();\n          } else {\n            target.pause();\n          }\n        });\n      },\n      { threshold: 0.7 }\n    );\n    io.observe(target);\n  };\n\n  useEffect(() => {\n    if (window.innerWidth <= 870) {\n      const videos = document.querySelectorAll(\"video\");\n      videos.forEach(autoplay);\n    }\n  }, []);\n\n  const hlsplay = () => {\n    if (player.current.readyState !== 4) {\n      return;\n    }\n    player.current.play();\n  };\n\n  const hlspause = () => {\n    if (player.current.readyState !== 4) {\n      return;\n    }\n    player.current.pause();\n  };\n\n  const mp4play = () => {\n    if (players.current.readyState !== 4) {\n      return;\n    }\n    players.current.play();\n  };\n\n  const mp4pause = () => {\n    if (players.current.readyState !== 4) {\n      return;\n    }\n    players.current.pause();\n  };\n\n  const openModal = () => {\n    if (window.innerWidth > 1024) {\n      dispatch(TrilsActions.getPostDetail(props.information.id));\n    } else {\n      dispatch(TrilsActions.getPostDetail(props.information.id, false));\n      history.push(`/trils/detail/${props.information.id}`);\n    }\n  };\n\n  const hash = (e) => {\n    e.stopPropagation();\n    history.push(`/search?q=${e.target.id}&filter=likeNum`, 1);\n  };\n\n  const like = (e) => {\n    e.stopPropagation();\n    const access_token = localStorage.getItem(\"access_token\");\n    if (!access_token) {\n      Swal.fire({\n        title: \"로그인을 해주세요.\",\n        text: \"로그인 후 좋아요를 누를 수 있습니다.\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"로그인하기\",\n        cancelButtonText: \"닫기\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          history.push(\"/login\");\n        }\n      });\n    } else {\n      dispatch(\n        TrilsActions.send_like(props.information.id, props.member.isLike)\n      );\n    }\n  };\n\n  return (\n    <VideoCards margin={mr} onClick={openModal}>\n      <Profile>\n        <ProfileImg src={props.author.profileImgUrl} />\n        <ProfileId>{props.author.nickname}</ProfileId>\n      </Profile>\n      {is_iphone ? (\n        <VideoPlay src={params.src} loop autoPlay muted playsInline />\n      ) : (\n        <>\n          {props.information.posPlay ? (\n            <>\n              {props.information.videoType.toLowerCase() === \"mp4\" ||\n              props.information.videoType.toLowerCase() === \"mov\" ? (\n                <>\n                  {window.innerWidth > 1024 ? (\n                    <>\n                      <VideoPlay\n                        onMouseOver={mp4play}\n                        onMouseLeave={mp4pause}\n                        ref={players}\n                        src={params.src}\n                        muted\n                        loop\n                        onTimeUpdate={() => {\n                          setCompleted(\n                            (players.current.currentTime /\n                              players.current.duration) *\n                              100\n                          );\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <VideoPlay\n                        ref={players}\n                        src={params.src}\n                        muted\n                        loop\n                        onTimeUpdate={() => {\n                          setCompleted(\n                            (players.current.currentTime /\n                              players.current.duration) *\n                              100\n                          );\n                        }}\n                      />\n                    </>\n                  )}\n                </>\n              ) : (\n                <>\n                  {window.innerWidth > 1024 ? (\n                    <>\n                      <VideoPlay\n                        onMouseOver={hlsplay}\n                        onMouseLeave={hlspause}\n                        ref={player}\n                        muted\n                        loop\n                        onTimeUpdate={() => {\n                          setCompleted(\n                            (player.current.currentTime /\n                              player.current.duration) *\n                              100\n                          );\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <VideoPlay\n                        ref={player}\n                        muted\n                        loop\n                        onTimeUpdate={() => {\n                          setCompleted(\n                            (player.current.currentTime /\n                              player.current.duration) *\n                              100\n                          );\n                        }}\n                      />\n                    </>\n                  )}\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <Uploading src={TrilsUploadMain} />\n            </>\n          )}\n        </>\n      )}\n      <ProgressBar bgcolor={\"#6a1b9a\"} completed={completed} />\n      <PostBottom>\n        <BottomCov>\n          <LikeCov onClick={like}>\n            {props.member.isLike ? <HeartFill /> : <HeartEmpty />}\n          </LikeCov>\n        </BottomCov>\n        <PostLikeCnt>좋아요 +{props.information.likeNum}</PostLikeCnt>\n        <PostUserComment>\n          {props.information.hashtag.map((p, idx) => {\n            if (idx < 2) {\n              return (\n                <Fragment key={idx}>\n                  <Hash id={p} onClick={hash}>\n                    #{p}\n                  </Hash>\n                </Fragment>\n              );\n            }\n          })}\n        </PostUserComment>\n      </PostBottom>\n    </VideoCards>\n  );\n};\n\nconst Uploading = styled.img`\n  display: flex;\n  height: 45rem;\n  width: 25rem;\n  margin: 0 auto;\n  object-fit: contain;\n  background-color: #ededed;\n  @media only screen and (max-width: 420px) {\n    width: 100%;\n  }\n`;\n\nconst Hash = styled.div`\n  display: flex;\n  user-select: none;\n  cursor: pointer;\n  margin-left: 0.5rem;\n  font-family: \"AppleSDGothicNeoR\";\n  color: blue;\n  transition: 0.5s ease-in-out;\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nconst PostBottom = styled.div`\n  margin-top: 1rem;\n  margin-left: 10px;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nconst PostLikeCnt = styled.div`\n  font-family: \"AppleSDGothicNeoR\";\n  display: flex;\n  user-select: none;\n`;\n\nconst PostUserComment = styled.div`\n  font-family: \"AppleSDGothicNeoR\";\n  display: flex;\n  margin-left: 18px;\n  cursor: pointer;\n  flex-wrap: wrap;\n`;\n\nconst VideoCards = styled.div`\n  display: flex;\n  max-width: 25rem;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n  ${(props) => (props.margin ? \"margin-right:2.5rem\" : \"\")};\n  margin-top: 1rem;\n  transition: 0.5s ease-in-out;\n  @media only screen and (min-width: 1024px) {\n    :hover {\n      transform: scale(1.03);\n    }\n  }\n  box-shadow: 0px 3px 6px #00000029;\n`;\n\nconst VideoPlay = styled.video`\n  display: flex;\n  height: 45rem;\n  width: 25rem;\n  margin: 0 auto;\n  object-fit: cover;\n  @media only screen and (max-width: 420px) {\n    /* width: 100%; */\n  }\n  @media only screen and (max-width: 1024px) {\n    height: 35rem;\n  }\n  @media only screen and (max-width: 370px) {\n    height: 25rem;\n  }\n`;\n\nconst Profile = styled.div`\n  user-select: none;\n  /* position: absolute; */\n  padding-top: 0.7rem;\n  margin-bottom: -51.408px;\n  display: flex;\n  z-index: 5;\n`;\n\nconst ProfileImg = styled.div`\n  --size: 38px;\n  width: var(--size);\n  height: var(--size);\n  border-radius: var(--size);\n  background-position: center;\n  background-image: url(${(props) => props.src});\n  background-color: white;\n  background-size: cover;\n  margin-left: 16px;\n  display: flex;\n  border: 1px solid #ededed;\n`;\n\nconst ProfileId = styled.div`\n  display: flex;\n  font-weight: 600;\n  font-size: 1rem;\n  margin-left: 11px;\n  align-items: center;\n  /* background:white; */\n  border-radius: 20px;\n  width: 100px;\n  color: white;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n`;\n\nconst LikeCov = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  z-index: 10;\n  & svg {\n    width: 1.5rem;\n  }\n`;\nconst BottomCov = styled.div`\n  display: flex;\n  margin-right: 0.7rem;\n`;\n\nexport default PostVideo;\n","/Users/parkminkyung/Desktop/git/triport/src/pages/TrilsMemberPost.js",["337","338","339","340","341","342"],{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":34},{"ruleId":"347","severity":1,"message":"351","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":14},{"ruleId":"347","severity":1,"message":"352","line":6,"column":25,"nodeType":"349","messageId":"350","endLine":6,"endColumn":38},{"ruleId":"347","severity":1,"message":"353","line":29,"column":23,"nodeType":"349","messageId":"350","endLine":29,"endColumn":34},{"ruleId":"347","severity":1,"message":"354","line":31,"column":28,"nodeType":"349","messageId":"350","endLine":31,"endColumn":42},{"ruleId":"355","severity":1,"message":"356","line":41,"column":6,"nodeType":"357","endLine":41,"endColumn":8,"suggestions":"358"},{"ruleId":"347","severity":1,"message":"359","line":88,"column":7,"nodeType":"349","messageId":"350","endLine":88,"endColumn":22},{"ruleId":"347","severity":1,"message":"360","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":26},{"ruleId":"347","severity":1,"message":"361","line":1,"column":28,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"362","line":14,"column":9,"nodeType":"349","messageId":"350","endLine":14,"endColumn":17},{"ruleId":"347","severity":1,"message":"363","line":30,"column":9,"nodeType":"349","messageId":"350","endLine":30,"endColumn":17},{"ruleId":"347","severity":1,"message":"364","line":549,"column":7,"nodeType":"349","messageId":"350","endLine":549,"endColumn":12},{"ruleId":"355","severity":1,"message":"356","line":51,"column":6,"nodeType":"357","endLine":51,"endColumn":8,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":110,"column":11,"nodeType":"368","endLine":110,"endColumn":32},{"ruleId":"347","severity":1,"message":"369","line":18,"column":10,"nodeType":"349","messageId":"350","endLine":18,"endColumn":20},{"ruleId":"347","severity":1,"message":"370","line":18,"column":22,"nodeType":"349","messageId":"350","endLine":18,"endColumn":35},{"ruleId":"347","severity":1,"message":"371","line":19,"column":23,"nodeType":"349","messageId":"350","endLine":19,"endColumn":37},{"ruleId":"355","severity":1,"message":"356","line":26,"column":6,"nodeType":"357","endLine":26,"endColumn":8,"suggestions":"372"},{"ruleId":"373","severity":1,"message":"374","line":67,"column":51,"nodeType":"375","messageId":"376","endLine":67,"endColumn":53},{"ruleId":"347","severity":1,"message":"377","line":136,"column":7,"nodeType":"349","messageId":"350","endLine":136,"endColumn":13},{"ruleId":"347","severity":1,"message":"378","line":6,"column":10,"nodeType":"349","messageId":"350","endLine":6,"endColumn":19},{"ruleId":"347","severity":1,"message":"379","line":6,"column":21,"nodeType":"349","messageId":"350","endLine":6,"endColumn":29},{"ruleId":"355","severity":1,"message":"356","line":29,"column":6,"nodeType":"357","endLine":29,"endColumn":8,"suggestions":"380"},{"ruleId":"347","severity":1,"message":"369","line":19,"column":10,"nodeType":"349","messageId":"350","endLine":19,"endColumn":20},{"ruleId":"347","severity":1,"message":"370","line":19,"column":22,"nodeType":"349","messageId":"350","endLine":19,"endColumn":35},{"ruleId":"347","severity":1,"message":"371","line":20,"column":23,"nodeType":"349","messageId":"350","endLine":20,"endColumn":37},{"ruleId":"355","severity":1,"message":"356","line":27,"column":6,"nodeType":"357","endLine":27,"endColumn":8,"suggestions":"381"},{"ruleId":"373","severity":1,"message":"374","line":68,"column":53,"nodeType":"375","messageId":"376","endLine":68,"endColumn":55},{"ruleId":"347","severity":1,"message":"377","line":133,"column":7,"nodeType":"349","messageId":"350","endLine":133,"endColumn":13},{"ruleId":"355","severity":1,"message":"382","line":34,"column":5,"nodeType":"357","endLine":34,"endColumn":19,"suggestions":"383"},{"ruleId":"384","severity":1,"message":"385","line":12,"column":22,"nodeType":"386","messageId":"387","endLine":12,"endColumn":23,"suggestions":"388"},{"ruleId":"384","severity":1,"message":"385","line":12,"column":55,"nodeType":"386","messageId":"387","endLine":12,"endColumn":56,"suggestions":"389"},{"ruleId":"355","severity":1,"message":"390","line":24,"column":8,"nodeType":"357","endLine":24,"endColumn":10,"suggestions":"391"},{"ruleId":"366","severity":1,"message":"367","line":99,"column":17,"nodeType":"368","endLine":99,"endColumn":58},{"ruleId":"355","severity":1,"message":"392","line":148,"column":6,"nodeType":"357","endLine":148,"endColumn":8,"suggestions":"393"},{"ruleId":"347","severity":1,"message":"394","line":163,"column":7,"nodeType":"349","messageId":"350","endLine":163,"endColumn":18},{"ruleId":"355","severity":1,"message":"395","line":33,"column":8,"nodeType":"357","endLine":33,"endColumn":10,"suggestions":"396"},{"ruleId":"366","severity":1,"message":"367","line":173,"column":15,"nodeType":"368","endLine":173,"endColumn":57},{"ruleId":"355","severity":1,"message":"397","line":11,"column":8,"nodeType":"357","endLine":11,"endColumn":17,"suggestions":"398"},{"ruleId":"355","severity":1,"message":"397","line":10,"column":8,"nodeType":"357","endLine":10,"endColumn":10,"suggestions":"399"},{"ruleId":"347","severity":1,"message":"400","line":396,"column":7,"nodeType":"349","messageId":"350","endLine":396,"endColumn":16},{"ruleId":"347","severity":1,"message":"401","line":106,"column":9,"nodeType":"349","messageId":"350","endLine":106,"endColumn":25},{"ruleId":"347","severity":1,"message":"401","line":131,"column":13,"nodeType":"349","messageId":"350","endLine":131,"endColumn":29},{"ruleId":"355","severity":1,"message":"402","line":27,"column":8,"nodeType":"357","endLine":27,"endColumn":17,"suggestions":"403"},{"ruleId":"366","severity":1,"message":"367","line":116,"column":11,"nodeType":"368","endLine":116,"endColumn":53},{"ruleId":"347","severity":1,"message":"404","line":295,"column":15,"nodeType":"349","messageId":"350","endLine":295,"endColumn":21},{"ruleId":"347","severity":1,"message":"405","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":15},{"ruleId":"347","severity":1,"message":"406","line":182,"column":7,"nodeType":"349","messageId":"350","endLine":182,"endColumn":20},{"ruleId":"347","severity":1,"message":"407","line":199,"column":7,"nodeType":"349","messageId":"350","endLine":199,"endColumn":18},{"ruleId":"347","severity":1,"message":"400","line":344,"column":7,"nodeType":"349","messageId":"350","endLine":344,"endColumn":16},{"ruleId":"347","severity":1,"message":"408","line":384,"column":7,"nodeType":"349","messageId":"350","endLine":384,"endColumn":23},{"ruleId":"409","severity":1,"message":"410","line":31,"column":27,"nodeType":"411","messageId":"412","endLine":31,"endColumn":44},{"ruleId":"355","severity":1,"message":"413","line":13,"column":19,"nodeType":"375","endLine":15,"endColumn":4},{"ruleId":"355","severity":1,"message":"414","line":15,"column":6,"nodeType":"357","endLine":15,"endColumn":8,"suggestions":"415"},{"ruleId":"355","severity":1,"message":"356","line":14,"column":6,"nodeType":"357","endLine":14,"endColumn":8,"suggestions":"416"},{"ruleId":"347","severity":1,"message":"417","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":22},{"ruleId":"347","severity":1,"message":"418","line":253,"column":7,"nodeType":"349","messageId":"350","endLine":253,"endColumn":16},{"ruleId":"355","severity":1,"message":"419","line":63,"column":6,"nodeType":"357","endLine":63,"endColumn":18,"suggestions":"420"},{"ruleId":"373","severity":1,"message":"374","line":265,"column":51,"nodeType":"375","messageId":"376","endLine":265,"endColumn":53},{"ruleId":"366","severity":1,"message":"367","line":79,"column":11,"nodeType":"368","endLine":79,"endColumn":38},{"ruleId":"366","severity":1,"message":"367","line":101,"column":19,"nodeType":"368","endLine":101,"endColumn":44},{"ruleId":"366","severity":1,"message":"367","line":119,"column":19,"nodeType":"368","endLine":119,"endColumn":43},{"ruleId":"366","severity":1,"message":"367","line":151,"column":13,"nodeType":"368","endLine":151,"endColumn":40},{"ruleId":"421","severity":1,"message":"422","line":186,"column":19,"nodeType":"368","endLine":186,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":192,"column":19,"nodeType":"368","endLine":192,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":218,"column":19,"nodeType":"368","endLine":218,"endColumn":75},{"ruleId":"421","severity":1,"message":"422","line":224,"column":19,"nodeType":"368","endLine":224,"endColumn":70},{"ruleId":"421","severity":1,"message":"422","line":252,"column":19,"nodeType":"368","endLine":252,"endColumn":74},{"ruleId":"421","severity":1,"message":"422","line":258,"column":19,"nodeType":"368","endLine":258,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":283,"column":19,"nodeType":"368","endLine":283,"endColumn":72},{"ruleId":"421","severity":1,"message":"422","line":289,"column":19,"nodeType":"368","endLine":289,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":318,"column":19,"nodeType":"368","endLine":318,"endColumn":73},{"ruleId":"421","severity":1,"message":"422","line":324,"column":19,"nodeType":"368","endLine":324,"endColumn":73},{"ruleId":"421","severity":1,"message":"422","line":350,"column":19,"nodeType":"368","endLine":350,"endColumn":75},{"ruleId":"421","severity":1,"message":"422","line":356,"column":19,"nodeType":"368","endLine":356,"endColumn":74},{"ruleId":"421","severity":1,"message":"422","line":380,"column":19,"nodeType":"368","endLine":383,"endColumn":20},{"ruleId":"355","severity":1,"message":"419","line":59,"column":6,"nodeType":"357","endLine":59,"endColumn":18,"suggestions":"423"},{"ruleId":"347","severity":1,"message":"424","line":75,"column":9,"nodeType":"349","messageId":"350","endLine":75,"endColumn":16},{"ruleId":"347","severity":1,"message":"425","line":82,"column":9,"nodeType":"349","messageId":"350","endLine":82,"endColumn":17},{"ruleId":"347","severity":1,"message":"426","line":258,"column":7,"nodeType":"349","messageId":"350","endLine":258,"endColumn":16},{"ruleId":"355","severity":1,"message":"402","line":27,"column":8,"nodeType":"357","endLine":27,"endColumn":17,"suggestions":"427"},{"ruleId":"347","severity":1,"message":"428","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":22},{"ruleId":"355","severity":1,"message":"429","line":40,"column":6,"nodeType":"357","endLine":40,"endColumn":8,"suggestions":"430"},{"ruleId":"355","severity":1,"message":"419","line":121,"column":6,"nodeType":"357","endLine":121,"endColumn":18,"suggestions":"431"},{"ruleId":"347","severity":1,"message":"428","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":22},{"ruleId":"347","severity":1,"message":"432","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":21},{"ruleId":"347","severity":1,"message":"353","line":5,"column":23,"nodeType":"349","messageId":"350","endLine":5,"endColumn":34},{"ruleId":"347","severity":1,"message":"417","line":8,"column":10,"nodeType":"349","messageId":"350","endLine":8,"endColumn":22},{"ruleId":"347","severity":1,"message":"433","line":8,"column":24,"nodeType":"349","messageId":"350","endLine":8,"endColumn":35},{"ruleId":"347","severity":1,"message":"434","line":8,"column":37,"nodeType":"349","messageId":"350","endLine":8,"endColumn":46},{"ruleId":"347","severity":1,"message":"435","line":11,"column":10,"nodeType":"349","messageId":"350","endLine":11,"endColumn":16},{"ruleId":"355","severity":1,"message":"419","line":112,"column":6,"nodeType":"357","endLine":112,"endColumn":18,"suggestions":"436"},{"ruleId":"355","severity":1,"message":"419","line":63,"column":6,"nodeType":"357","endLine":63,"endColumn":18,"suggestions":"437"},{"ruleId":"373","severity":1,"message":"374","line":260,"column":51,"nodeType":"375","messageId":"376","endLine":260,"endColumn":53},{"ruleId":"347","severity":1,"message":"438","line":26,"column":9,"nodeType":"349","messageId":"350","endLine":26,"endColumn":17},{"ruleId":"355","severity":1,"message":"439","line":65,"column":6,"nodeType":"357","endLine":65,"endColumn":16,"suggestions":"440"},{"ruleId":"347","severity":1,"message":"406","line":182,"column":7,"nodeType":"349","messageId":"350","endLine":182,"endColumn":20},{"ruleId":"347","severity":1,"message":"407","line":199,"column":7,"nodeType":"349","messageId":"350","endLine":199,"endColumn":18},{"ruleId":"347","severity":1,"message":"400","line":344,"column":7,"nodeType":"349","messageId":"350","endLine":344,"endColumn":16},{"ruleId":"347","severity":1,"message":"408","line":384,"column":7,"nodeType":"349","messageId":"350","endLine":384,"endColumn":23},"no-native-reassign",["441"],"no-negated-in-lhs",["442"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'logger' is defined but never used.","'BrowserRouter' is defined but never used.","'useSelector' is defined but never used.","'profileActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["443"],"'FooterContainer' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'gradeImg' is assigned a value but never used.","'Grade' is assigned a value but never used.",["444"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'trilsindex' is assigned a value but never used.","'setTrilsIndex' is assigned a value but never used.","'setTrilogIndex' is assigned a value but never used.",["445"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is assigned a value but never used.","'nameCheck' is defined but never used.","'pwdCheck' is defined but never used.",["446"],["447"],"React Hook React.useEffect has a missing dependency: 'prevClick'. Either include it or remove the dependency array.",["448"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["449","450"],["451","452"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["453"],"React Hook React.useEffect has missing dependencies: 'detail.information', 'dispatch', 'id', and 'is_edit'. Either include them or remove the dependency array.",["454"],"'Description' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'comment.commentParent'. Either include it or remove the dependency array.",["455"],"React Hook React.useEffect has a missing dependency: 'mapscript'. Either include it or remove the dependency array.",["456"],["457"],"'CenterDiv' is assigned a value but never used.","'access_token_exp' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["458"],"'filter' is assigned a value but never used.","'tripper' is defined but never used.","'CloseTutorial' is assigned a value but never used.","'MoveTripper' is assigned a value but never used.","'FloatingTutorial' is assigned a value but never used.","no-self-assign","'state.memberGrade' is assigned to itself.","MemberExpression","selfAssignment","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook React.useEffect has missing dependencies: 'code' and 'dispatch'. Either include them or remove the dependency array.",["459"],["460"],"'TrilsActions' is defined but never used.","'Component' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'is_iphone'. Either include it or remove the dependency array.",["461"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["462"],"'mp4play' is assigned a value but never used.","'mp4pause' is assigned a value but never used.","'Uploading' is assigned a value but never used.",["463"],"'MODAL_STATUS' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["464"],["465"],"'useDispatch' is defined but never used.","'DELETE_POST' is defined but never used.","'EDIT_POST' is defined but never used.","'config' is defined but never used.",["466"],["467"],"'queryObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["468"],"no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"469","fix":"471"},{"desc":"469","fix":"472"},{"desc":"469","fix":"473"},{"desc":"469","fix":"474"},{"desc":"475","fix":"476"},{"messageId":"477","fix":"478","desc":"479"},{"messageId":"480","fix":"481","desc":"482"},{"messageId":"477","fix":"483","desc":"479"},{"messageId":"480","fix":"484","desc":"482"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"469","fix":"499"},{"desc":"500","fix":"501"},{"desc":"500","fix":"502"},{"desc":"495","fix":"503"},{"desc":"504","fix":"505"},{"desc":"500","fix":"506"},{"desc":"500","fix":"507"},{"desc":"500","fix":"508"},{"desc":"504","fix":"509"},"Update the dependencies array to be: [dispatch]",{"range":"510","text":"511"},{"range":"512","text":"511"},{"range":"513","text":"511"},{"range":"514","text":"511"},{"range":"515","text":"511"},"Update the dependencies array to be: [currentClick, prevClick]",{"range":"516","text":"517"},"removeEscape",{"range":"518","text":"519"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"520","text":"521"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"522","text":"519"},{"range":"523","text":"521"},"Update the dependencies array to be: [dispatch, id]",{"range":"524","text":"525"},"Update the dependencies array to be: [detail.information, dispatch, id, is_edit]",{"range":"526","text":"527"},"Update the dependencies array to be: [comment.commentParent]",{"range":"528","text":"529"},"Update the dependencies array to be: [keyword, mapscript]",{"range":"530","text":"531"},"Update the dependencies array to be: [mapscript]",{"range":"532","text":"533"},"Update the dependencies array to be: [handleScroll, is_next]",{"range":"534","text":"535"},"Update the dependencies array to be: [code, dispatch]",{"range":"536","text":"537"},{"range":"538","text":"511"},"Update the dependencies array to be: [is_iphone, params.src]",{"range":"539","text":"540"},{"range":"541","text":"540"},{"range":"542","text":"535"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"543","text":"544"},{"range":"545","text":"540"},{"range":"546","text":"540"},{"range":"547","text":"540"},{"range":"548","text":"544"},[1364,1366],"[dispatch]",[1933,1935],[991,993],[993,995],[1002,1004],[1038,1052],"[currentClick, prevClick]",[212,213],"",[212,212],"\\",[245,246],[245,245],[1136,1138],"[dispatch, id]",[4527,4529],"[detail.information, dispatch, id, is_edit]",[1480,1482],"[comment.commentParent]",[238,247],"[keyword, mapscript]",[219,221],"[mapscript]",[805,814],"[handleScroll, is_next]",[442,444],"[code, dispatch]",[434,436],[1902,1914],"[is_iphone, params.src]",[1712,1724],[785,794],[1611,1613],"[dispatch, props.match.params.id]",[3589,3601],[3351,3363],[1909,1921],[2205,2215]]